diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/cache-node.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/cache-node.d.ts
index 990da8a..6287b1d 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/cache-node.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/cache-node.d.ts
@@ -4,6 +4,7 @@ export declare class NodeJSCache<T> implements ICache<T> {
     private nodeCache;
     constructor(nodeCache: NodeCache);
     get(key: string): Promise<T | undefined>;
+    batchGet(keys: Set<string>): Promise<Record<string, T | undefined>>;
     set(key: string, value: T): Promise<boolean>;
     has(key: string): Promise<boolean>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/cache-node.js b/node_modules/@uniswap/smart-order-router/build/main/providers/cache-node.js
index 44335a4..e3a47e1 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/cache-node.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/cache-node.js
@@ -8,6 +8,15 @@ class NodeJSCache {
     async get(key) {
         return this.nodeCache.get(key);
     }
+    async batchGet(keys) {
+        const keysArr = Array.from(keys);
+        const values = await Promise.all(keysArr.map((key) => this.get(key)));
+        const result = {};
+        keysArr.forEach((key, index) => {
+            result[key] = values[index];
+        });
+        return result;
+    }
     async set(key, value) {
         return this.nodeCache.set(key, value);
     }
@@ -16,4 +25,4 @@ class NodeJSCache {
     }
 }
 exports.NodeJSCache = NodeJSCache;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUtbm9kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGUtbm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFJQSxNQUFhLFdBQVc7SUFDdEIsWUFBb0IsU0FBb0I7UUFBcEIsY0FBUyxHQUFULFNBQVMsQ0FBVztJQUFHLENBQUM7SUFFNUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFXO1FBQ25CLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUksR0FBRyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBVyxFQUFFLEtBQVE7UUFDN0IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVELEtBQUssQ0FBQyxHQUFHLENBQUMsR0FBVztRQUNuQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7Q0FDRjtBQWRELGtDQWNDIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUtbm9kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGUtbm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFJQSxNQUFhLFdBQVc7SUFDdEIsWUFBb0IsU0FBb0I7UUFBcEIsY0FBUyxHQUFULFNBQVMsQ0FBVztJQUFHLENBQUM7SUFFNUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFXO1FBQ25CLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUksR0FBRyxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELEtBQUssQ0FBQyxRQUFRLENBQUMsSUFBaUI7UUFDOUIsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNqQyxNQUFNLE1BQU0sR0FBRyxNQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFdEUsTUFBTSxNQUFNLEdBQWtDLEVBQUUsQ0FBQztRQUVqRCxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQzdCLE1BQU0sQ0FBQyxHQUFHLENBQUMsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDOUIsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFXLEVBQUUsS0FBUTtRQUM3QixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFXO1FBQ25CLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDakMsQ0FBQztDQUNGO0FBM0JELGtDQTJCQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/cache.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/cache.d.ts
index f527168..5640644 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/cache.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/cache.d.ts
@@ -8,6 +8,7 @@
  */
 export interface ICache<T> {
     get(key: string): Promise<T | undefined>;
+    batchGet(keys: Set<string>): Promise<Record<string, T | undefined>>;
     set(key: string, value: T): Promise<boolean>;
     has(key: string): Promise<boolean>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching-token-list-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/caching-token-list-provider.d.ts
index 98399dc..8ace882 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching-token-list-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching-token-list-provider.d.ts
@@ -9,7 +9,9 @@ import { ITokenProvider, TokenAccessor } from './token-provider';
  * @interface ITokenListProvider
  */
 export interface ITokenListProvider {
+    hasTokenBySymbol(_symbol: string): Promise<boolean>;
     getTokenBySymbol(_symbol: string): Promise<Token | undefined>;
+    hasTokenByAddress(address: string): Promise<boolean>;
     getTokenByAddress(address: string): Promise<Token | undefined>;
 }
 export declare class CachingTokenListProvider implements ITokenProvider, ITokenListProvider {
@@ -20,6 +22,8 @@ export declare class CachingTokenListProvider implements ITokenProvider, ITokenL
     private chainSymbolToTokenInfo;
     private chainAddressToTokenInfo;
     private tokenList;
+    private CHAIN_SYMBOL_KEY;
+    private CHAIN_ADDRESS_KEY;
     /**
      * Creates an instance of CachingTokenListProvider.
      * Token metadata (e.g. symbol and decimals) generally don't change so can be cached indefinitely.
@@ -32,8 +36,17 @@ export declare class CachingTokenListProvider implements ITokenProvider, ITokenL
     static fromTokenListURI(chainId: ChainId | number, tokenListURI: string, tokenCache: ICache<Token>): Promise<CachingTokenListProvider>;
     private static buildTokenList;
     static fromTokenList(chainId: ChainId | number, tokenList: TokenList, tokenCache: ICache<Token>): Promise<CachingTokenListProvider>;
-    getTokens(_addresses: string[]): Promise<TokenAccessor>;
+    /**
+     * If no addresses array is specified, all tokens in the token list are
+     * returned.
+     *
+     * @param _addresses (optional) The token addresses to get.
+     * @returns Promise<TokenAccessor> A token accessor with methods for accessing the tokens.
+     */
+    getTokens(_addresses?: string[]): Promise<TokenAccessor>;
+    hasTokenBySymbol(_symbol: string): Promise<boolean>;
     getTokenBySymbol(_symbol: string): Promise<Token | undefined>;
+    hasTokenByAddress(address: string): Promise<boolean>;
     getTokenByAddress(address: string): Promise<Token | undefined>;
     private buildToken;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching-token-list-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/caching-token-list-provider.js
index 55a67ed..64017a0 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching-token-list-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching-token-list-provider.js
@@ -7,7 +7,6 @@ exports.CachingTokenListProvider = void 0;
 /* eslint-disable @typescript-eslint/no-non-null-assertion */
 const sdk_core_1 = require("@uniswap/sdk-core");
 const axios_1 = __importDefault(require("axios"));
-const lodash_1 = __importDefault(require("lodash"));
 const log_1 = require("../util/log");
 const metric_1 = require("../util/metric");
 class CachingTokenListProvider {
@@ -22,18 +21,25 @@ class CachingTokenListProvider {
     constructor(chainId, tokenList, tokenCache) {
         this.tokenCache = tokenCache;
         this.CACHE_KEY = (tokenInfo) => `token-list-token-${this.chainId}/${this.tokenList.name}/${this.tokenList.timestamp}/${this.tokenList.version}/${tokenInfo.address.toLowerCase()}/${tokenInfo.decimals}/${tokenInfo.symbol}/${tokenInfo.name}`;
+        this.CHAIN_SYMBOL_KEY = (chainId, symbol) => `${chainId.toString()}/${symbol}`;
+        this.CHAIN_ADDRESS_KEY = (chainId, address) => `${chainId.toString()}/${address.toLowerCase()}`;
         this.chainId = chainId;
         this.tokenList = tokenList;
-        this.chainToTokenInfos = lodash_1.default.reduce(this.tokenList.tokens, (result, tokenInfo) => {
-            const chainId = tokenInfo.chainId.toString();
-            if (!result[chainId]) {
-                result[chainId] = [];
+        this.chainToTokenInfos = new Map();
+        this.chainSymbolToTokenInfo = new Map();
+        this.chainAddressToTokenInfo = new Map();
+        for (const tokenInfo of this.tokenList.tokens) {
+            const chainId = tokenInfo.chainId;
+            const chainIdString = chainId.toString();
+            const symbol = tokenInfo.symbol;
+            const address = tokenInfo.address.toLowerCase();
+            if (!this.chainToTokenInfos.has(chainIdString)) {
+                this.chainToTokenInfos.set(chainIdString, []);
             }
-            result[chainId].push(tokenInfo);
-            return result;
-        }, {});
-        this.chainSymbolToTokenInfo = lodash_1.default.mapValues(this.chainToTokenInfos, (tokenInfos) => lodash_1.default.keyBy(tokenInfos, 'symbol'));
-        this.chainAddressToTokenInfo = lodash_1.default.mapValues(this.chainToTokenInfos, (tokenInfos) => lodash_1.default.keyBy(tokenInfos, (tokenInfo) => tokenInfo.address.toLowerCase()));
+            this.chainToTokenInfos.get(chainIdString).push(tokenInfo);
+            this.chainSymbolToTokenInfo.set(this.CHAIN_SYMBOL_KEY(chainId, symbol), tokenInfo);
+            this.chainAddressToTokenInfo.set(this.CHAIN_ADDRESS_KEY(chainId, address), tokenInfo);
+        }
     }
     static async fromTokenListURI(chainId, tokenListURI, tokenCache) {
         const now = Date.now();
@@ -58,28 +64,49 @@ class CachingTokenListProvider {
         metric_1.metric.putMetric('TokenListLoad', Date.now() - now, metric_1.MetricLoggerUnit.Milliseconds);
         return tokenProvider;
     }
+    /**
+     * If no addresses array is specified, all tokens in the token list are
+     * returned.
+     *
+     * @param _addresses (optional) The token addresses to get.
+     * @returns Promise<TokenAccessor> A token accessor with methods for accessing the tokens.
+     */
     async getTokens(_addresses) {
-        const addressToToken = {};
-        const symbolToToken = {};
-        for (const address of _addresses) {
-            const token = await this.getTokenByAddress(address);
-            if (!token) {
-                continue;
+        var _a;
+        const addressToToken = new Map();
+        const symbolToToken = new Map();
+        const addToken = (token) => {
+            if (!token)
+                return;
+            addressToToken.set(token.address.toLowerCase(), token);
+            if (token.symbol !== undefined) {
+                symbolToToken.set(token.symbol.toLowerCase(), token);
             }
-            addressToToken[address.toLowerCase()] = token;
-            if (!token.symbol) {
-                continue;
+        };
+        if (_addresses) {
+            for (const address of _addresses) {
+                const token = await this.getTokenByAddress(address);
+                addToken(token);
+            }
+        }
+        else {
+            const chainTokens = (_a = this.chainToTokenInfos.get(this.chainId.toString())) !== null && _a !== void 0 ? _a : [];
+            for (const info of chainTokens) {
+                const token = await this.buildToken(info);
+                addToken(token);
             }
-            symbolToToken[token.symbol.toLowerCase()] = token;
         }
         return {
-            getTokenByAddress: (address) => addressToToken[address.toLowerCase()],
-            getTokenBySymbol: (symbol) => symbolToToken[symbol.toLowerCase()],
+            getTokenByAddress: (address) => addressToToken.get(address.toLowerCase()),
+            getTokenBySymbol: (symbol) => symbolToToken.get(symbol.toLowerCase()),
             getAllTokens: () => {
-                return Object.values(addressToToken);
+                return Array.from(addressToToken.values());
             },
         };
     }
+    async hasTokenBySymbol(_symbol) {
+        return this.chainSymbolToTokenInfo.has(this.CHAIN_SYMBOL_KEY(this.chainId, _symbol));
+    }
     async getTokenBySymbol(_symbol) {
         let symbol = _symbol;
         // We consider ETH as a regular ERC20 Token throughout this package. We don't use the NativeCurrency object from the sdk.
@@ -87,21 +114,18 @@ class CachingTokenListProvider {
         if (_symbol == 'ETH') {
             symbol = 'WETH';
         }
-        if (!this.chainSymbolToTokenInfo[this.chainId.toString()]) {
-            return undefined;
-        }
-        const tokenInfo = this.chainSymbolToTokenInfo[this.chainId.toString()][symbol];
+        const tokenInfo = this.chainSymbolToTokenInfo.get(this.CHAIN_SYMBOL_KEY(this.chainId, symbol));
         if (!tokenInfo) {
             return undefined;
         }
         const token = await this.buildToken(tokenInfo);
         return token;
     }
+    async hasTokenByAddress(address) {
+        return this.chainAddressToTokenInfo.has(this.CHAIN_ADDRESS_KEY(this.chainId, address));
+    }
     async getTokenByAddress(address) {
-        if (!this.chainAddressToTokenInfo[this.chainId.toString()]) {
-            return undefined;
-        }
-        const tokenInfo = this.chainAddressToTokenInfo[this.chainId.toString()][address.toLowerCase()];
+        const tokenInfo = this.chainAddressToTokenInfo.get(this.CHAIN_ADDRESS_KEY(this.chainId, address));
         if (!tokenInfo) {
             return undefined;
         }
@@ -120,4 +144,4 @@ class CachingTokenListProvider {
     }
 }
 exports.CachingTokenListProvider = CachingTokenListProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy10b2tlbi1saXN0LXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nLXRva2VuLWxpc3QtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsNkRBQTZEO0FBQzdELGdEQUFtRDtBQUVuRCxrREFBMEI7QUFDMUIsb0RBQXVCO0FBRXZCLHFDQUFrQztBQUNsQywyQ0FBMEQ7QUFzQjFELE1BQWEsd0JBQXdCO0lBZ0JuQzs7Ozs7OztPQU9HO0lBQ0gsWUFDRSxPQUF5QixFQUN6QixTQUFvQixFQUNaLFVBQXlCO1FBQXpCLGVBQVUsR0FBVixVQUFVLENBQWU7UUF4QjNCLGNBQVMsR0FBRyxDQUFDLFNBQW9CLEVBQUUsRUFBRSxDQUMzQyxvQkFBb0IsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksSUFDckQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUNqQixJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLElBQzNELFNBQVMsQ0FBQyxRQUNaLElBQUksU0FBUyxDQUFDLE1BQU0sSUFBSSxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUM7UUFxQnpDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBRTNCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxnQkFBQyxDQUFDLE1BQU0sQ0FDL0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQ3JCLENBQUMsTUFBNEIsRUFBRSxTQUFvQixFQUFFLEVBQUU7WUFDckQsTUFBTSxPQUFPLEdBQUcsU0FBUyxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUM3QyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUNwQixN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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy10b2tlbi1saXN0LXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nLXRva2VuLWxpc3QtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsNkRBQTZEO0FBQzdELGdEQUFtRDtBQUVuRCxrREFBMEI7QUFFMUIscUNBQWtDO0FBQ2xDLDJDQUEwRDtBQXFCMUQsTUFBYSx3QkFBd0I7SUFrQm5DOzs7Ozs7O09BT0c7SUFDSCxZQUNFLE9BQXlCLEVBQ3pCLFNBQW9CLEVBQ1osVUFBeUI7UUFBekIsZUFBVSxHQUFWLFVBQVUsQ0FBZTtRQTNCM0IsY0FBUyxHQUFHLENBQUMsU0FBb0IsRUFBRSxFQUFFLENBQzNDLG9CQUFvQixJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUNyRCxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQ2pCLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLElBQUksU0FBUyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsSUFDM0QsU0FBUyxDQUFDLFFBQ1osSUFBSSxTQUFTLENBQUMsTUFBTSxJQUFJLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQVFuQyxxQkFBZ0IsR0FBRyxDQUFDLE9BQWdCLEVBQUUsTUFBYyxFQUFFLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLEVBQUUsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUMzRixzQkFBaUIsR0FBRyxDQUFDLE9BQWdCLEVBQUUsT0FBZSxFQUFFLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLEVBQUUsSUFBSSxPQUFPLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQztRQWVsSCxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsQ0FBQztRQUUzQixJQUFJLENBQUMsaUJB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.d.ts
index 4edbb98..3747ebc 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.d.ts
@@ -14,6 +14,7 @@ interface CachedRouteParams<Route extends V3Route | V2Route | MixedRoute> {
 export declare class CachedRoute<Route extends V3Route | V2Route | MixedRoute> {
     readonly route: Route;
     readonly percent: number;
+    private hashCode;
     /**
      * @param route
      * @param percent
@@ -22,5 +23,7 @@ export declare class CachedRoute<Route extends V3Route | V2Route | MixedRoute> {
     get protocol(): Protocol;
     get tokenIn(): Token;
     get tokenOut(): Token;
+    get routePath(): string;
+    get routeId(): number;
 }
 export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.js b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.js
index 1436113..c2cc05b 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-route.js
@@ -1,6 +1,8 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.CachedRoute = void 0;
+const router_sdk_1 = require("@uniswap/router-sdk");
+const v3_sdk_1 = require("@uniswap/v3-sdk");
 /**
  * Class defining the route to cache
  *
@@ -13,6 +15,9 @@ class CachedRoute {
      * @param percent
      */
     constructor({ route, percent }) {
+        // Hashing function copying the same implementation as Java's `hashCode`
+        // Sourced from: https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0?permalink_comment_id=4613539#gistcomment-4613539
+        this.hashCode = (str) => [...str].reduce((s, c) => Math.imul(31, s) + c.charCodeAt(0) | 0, 0);
         this.route = route;
         this.percent = percent;
     }
@@ -25,6 +30,30 @@ class CachedRoute {
     get tokenOut() {
         return this.route.output;
     }
+    get routePath() {
+        if (this.protocol == router_sdk_1.Protocol.V3) {
+            const route = this.route;
+            return route.pools.map(pool => `[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`).join('->');
+        }
+        else if (this.protocol == router_sdk_1.Protocol.V2) {
+            const route = this.route;
+            return route.pairs.map(pair => `[V2]${pair.token0.address}/${pair.token1.address}`).join('->');
+        }
+        else {
+            const route = this.route;
+            return route.pools.map(pool => {
+                if (pool instanceof v3_sdk_1.Pool) {
+                    return `[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`;
+                }
+                else {
+                    return `[V2]${pool.token0.address}/${pool.token1.address}`;
+                }
+            }).join('->');
+        }
+    }
+    get routeId() {
+        return this.hashCode(this.routePath);
+    }
 }
 exports.CachedRoute = CachedRoute;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nL3JvdXRlL21vZGVsL2NhY2hlZC1yb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFVQTs7Ozs7R0FLRztBQUNILE1BQWEsV0FBVztJQUl0Qjs7O09BR0c7SUFDSCxZQUFZLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBNEI7UUFDdEQsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFDekIsQ0FBQztJQUVELElBQVcsUUFBUTtRQUNqQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDO0lBQzdCLENBQUM7SUFFRCxJQUFXLE9BQU87UUFDaEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUMxQixDQUFDO0lBRUQsSUFBVyxRQUFRO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7SUFDM0IsQ0FBQztDQUNGO0FBeEJELGtDQXdCQyJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nL3JvdXRlL21vZGVsL2NhY2hlZC1yb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxvREFBK0M7QUFFL0MsNENBQXVDO0FBU3ZDOzs7OztHQUtHO0FBQ0gsTUFBYSxXQUFXO0lBT3RCOzs7T0FHRztJQUNILFlBQVksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUE0QjtRQVJ4RCx3RUFBd0U7UUFDeEUsb0lBQW9JO1FBQzVILGFBQVEsR0FBRyxDQUFDLEdBQVcsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBT3ZHLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO0lBQ3pCLENBQUM7SUFFRCxJQUFXLFFBQVE7UUFDakIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQztJQUM3QixDQUFDO0lBRUQsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFDMUIsQ0FBQztJQUVELElBQVcsUUFBUTtRQUNqQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO0lBQzNCLENBQUM7SUFFRCxJQUFXLFNBQVM7UUFDbEIsSUFBSSxJQUFJLENBQUMsUUFBUSxJQUFJLHFCQUFRLENBQUMsRUFBRSxFQUFFO1lBQ2hDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFnQixDQUFDO1lBQ3BDLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUM1RzthQUFNLElBQUksSUFBSSxDQUFDLFFBQVEsSUFBSSxxQkFBUSxDQUFDLEVBQUUsRUFBRTtZQUN2QyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBZ0IsQ0FBQztZQUNwQyxPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2hHO2FBQU07WUFDTCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBbUIsQ0FBQztZQUN2QyxPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUM1QixJQUFJLElBQUksWUFBWSxhQUFJLEVBQUU7b0JBQ3hCLE9BQU8sT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7aUJBQ3hFO3FCQUFNO29CQUNMLE9BQU8sT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO2lCQUM1RDtZQUNILENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNmO0lBQ0gsQ0FBQztJQUVELElBQVcsT0FBTztRQUNoQixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7Q0FDRjtBQWxERCxrQ0FrREMifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.d.ts
index 6548da0..add3a58 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.d.ts
@@ -60,7 +60,8 @@ export declare class CachedRoutes {
      * Function to determine if, given a block number, the CachedRoute is expired or not.
      *
      * @param currentBlockNumber
+     * @param optimistic
      */
-    notExpired(currentBlockNumber: number): boolean;
+    notExpired(currentBlockNumber: number, optimistic?: boolean): boolean;
 }
 export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.js b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.js
index 10803ea..1e16369 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/model/cached-routes.js
@@ -68,10 +68,14 @@ class CachedRoutes {
      * Function to determine if, given a block number, the CachedRoute is expired or not.
      *
      * @param currentBlockNumber
+     * @param optimistic
      */
-    notExpired(currentBlockNumber) {
-        return (currentBlockNumber - this.blockNumber) <= this.blocksToLive;
+    notExpired(currentBlockNumber, optimistic = false) {
+        // When it's not optimistic, we only allow the route of the existing block.
+        const blocksToLive = optimistic ? this.blocksToLive : 0;
+        const blocksDifference = currentBlockNumber - this.blockNumber;
+        return blocksDifference <= blocksToLive;
     }
 }
 exports.CachedRoutes = CachedRoutes;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9tb2RlbC9jYWNoZWQtcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLG9EQUF1QjtBQUl2QixpREFBNkM7QUFjN0M7Ozs7O0dBS0c7QUFDSCxNQUFhLFlBQVk7SUFZdkI7Ozs7Ozs7Ozs7T0FVRztJQUNILFlBQ0UsRUFDRSxNQUFNLEVBQ04sT0FBTyxFQUNQLE9BQU8sRUFDUCxRQUFRLEVBQ1IsZ0JBQWdCLEVBQ2hCLFdBQVcsRUFDWCxTQUFTLEVBQ1QsY0FBYyxFQUNkLFlBQVksR0FBRyxDQUFDLEVBQ0c7UUFFckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQ3pDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0lBQ25DLENBQUM7SUFFRDs7Ozs7Ozs7Ozs7OztPQWFHO0lBQ0ksTUFBTSxDQUFDLHlCQUF5QixDQUNyQyxNQUE2QixFQUM3QixPQUFnQixFQUNoQixPQUFjLEVBQ2QsUUFBZSxFQUNmLGdCQUE0QixFQUM1QixXQUFtQixFQUNuQixTQUFvQixFQUNwQixjQUFzQjtRQUV0QixJQUFJLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBRXpDLE1BQU0sWUFBWSxHQUFHLGdCQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQTBCLEVBQUUsRUFBRSxDQUNoRSxJQUFJLDBCQUFXLENBQUMsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQ2hFLENBQUM7UUFFRixPQUFPLElBQUksWUFBWSxDQUFDO1lBQ3RCLE1BQU0sRUFBRSxZQUFZO1lBQ3BCLE9BQU87WUFDUCxPQUFPO1lBQ1AsUUFBUTtZQUNSLGdCQUFnQjtZQUNoQixXQUFXO1lBQ1gsU0FBUztZQUNULGNBQWM7U0FDZixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLFVBQVUsQ0FBQyxrQkFBMEI7UUFDMUMsT0FBTyxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQ3RFLENBQUM7Q0FDRjtBQWpHRCxvQ0FpR0MifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9tb2RlbC9jYWNoZWQtcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLG9EQUF1QjtBQUl2QixpREFBNkM7QUFjN0M7Ozs7O0dBS0c7QUFDSCxNQUFhLFlBQVk7SUFZdkI7Ozs7Ozs7Ozs7T0FVRztJQUNILFlBQ0UsRUFDRSxNQUFNLEVBQ04sT0FBTyxFQUNQLE9BQU8sRUFDUCxRQUFRLEVBQ1IsZ0JBQWdCLEVBQ2hCLFdBQVcsRUFDWCxTQUFTLEVBQ1QsY0FBYyxFQUNkLFlBQVksR0FBRyxDQUFDLEVBQ0c7UUFFckIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDekIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQ3pDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxDQUFDO1FBQy9CLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBQzNCLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO0lBQ25DLENBQUM7SUFFRDs7Ozs7Ozs7Ozs7OztPQWFHO0lBQ0ksTUFBTSxDQUFDLHlCQUF5QixDQUNyQyxNQUE2QixFQUM3QixPQUFnQixFQUNoQixPQUFjLEVBQ2QsUUFBZSxFQUNmLGdCQUE0QixFQUM1QixXQUFtQixFQUNuQixTQUFvQixFQUNwQixjQUFzQjtRQUV0QixJQUFJLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBRXpDLE1BQU0sWUFBWSxHQUFHLGdCQUFDLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDLEtBQTBCLEVBQUUsRUFBRSxDQUNoRSxJQUFJLDBCQUFXLENBQUMsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQ2hFLENBQUM7UUFFRixPQUFPLElBQUksWUFBWSxDQUFDO1lBQ3RCLE1BQU0sRUFBRSxZQUFZO1lBQ3BCLE9BQU87WUFDUCxPQUFPO1lBQ1AsUUFBUTtZQUNSLGdCQUFnQjtZQUNoQixXQUFXO1lBQ1gsU0FBUztZQUNULGNBQWM7U0FDZixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxVQUFVLENBQUMsa0JBQTBCLEVBQUUsVUFBVSxHQUFHLEtBQUs7UUFDOUQsMkVBQTJFO1FBQzNFLE1BQU0sWUFBWSxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hELE1BQU0sZ0JBQWdCLEdBQUcsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUUvRCxPQUFPLGdCQUFnQixJQUFJLFlBQVksQ0FBQztJQUMxQyxDQUFDO0NBQ0Y7QUF0R0Qsb0NBc0dDIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.d.ts
index 847815e..8321a2d 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.d.ts
@@ -25,7 +25,7 @@ export declare abstract class IRouteCachingProvider {
      * @param protocols
      * @param blockNumber
      */
-    readonly getCachedRoute: (chainId: number, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[], blockNumber: number) => Promise<CachedRoutes | undefined>;
+    readonly getCachedRoute: (chainId: number, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[], blockNumber: number, optimistic?: boolean) => Promise<CachedRoutes | undefined>;
     /**
      * Final implementation of the public `setCachedRoute` method.
      * This method will set the blockToLive in the CachedRoutes object before calling the internal method to insert in cache.
@@ -55,7 +55,7 @@ export declare abstract class IRouteCachingProvider {
      * @param amount
      */
     abstract getCacheMode(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[]): Promise<CacheMode>;
-    private filterExpiredCachedRoutes;
+    protected filterExpiredCachedRoutes(cachedRoutes: CachedRoutes | undefined, blockNumber: number, optimistic: boolean): CachedRoutes | undefined;
     /**
      * Internal function to fetch the CachedRoute from the cache.
      * Must be implemented.
@@ -67,7 +67,7 @@ export declare abstract class IRouteCachingProvider {
      * @param protocols
      * @protected
      */
-    protected abstract _getCachedRoute(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[]): Promise<CachedRoutes | undefined>;
+    protected abstract _getCachedRoute(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[], currentBlockNumber: number, optimistic: boolean): Promise<CachedRoutes | undefined>;
     /**
      * Internal function to insert the CachedRoute into cache.
      * Must be implemented.
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.js
index 14425cc..3b62257 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/caching/route/route-caching-provider.js
@@ -22,12 +22,12 @@ class IRouteCachingProvider {
          * @param blockNumber
          */
         this.getCachedRoute = async (// Defined as a readonly member instead of a regular function to make it final.
-        chainId, amount, quoteToken, tradeType, protocols, blockNumber) => {
+        chainId, amount, quoteToken, tradeType, protocols, blockNumber, optimistic = false) => {
             if (await this.getCacheMode(chainId, amount, quoteToken, tradeType, protocols) == model_1.CacheMode.Darkmode) {
                 return undefined;
             }
-            const cachedRoute = await this._getCachedRoute(chainId, amount, quoteToken, tradeType, protocols);
-            return this.filterExpiredCachedRoutes(cachedRoute, blockNumber);
+            const cachedRoute = await this._getCachedRoute(chainId, amount, quoteToken, tradeType, protocols, blockNumber, optimistic);
+            return this.filterExpiredCachedRoutes(cachedRoute, blockNumber, optimistic);
         };
         /**
          * Final implementation of the public `setCachedRoute` method.
@@ -57,9 +57,9 @@ class IRouteCachingProvider {
         const quoteToken = cachedRoutes.tradeType == sdk_core_1.TradeType.EXACT_INPUT ? cachedRoutes.tokenOut : cachedRoutes.tokenIn;
         return this.getCacheMode(cachedRoutes.chainId, amount, quoteToken, cachedRoutes.tradeType, cachedRoutes.protocolsCovered);
     }
-    filterExpiredCachedRoutes(cachedRoutes, blockNumber) {
-        return (cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.notExpired(blockNumber)) ? cachedRoutes : undefined;
+    filterExpiredCachedRoutes(cachedRoutes, blockNumber, optimistic) {
+        return (cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.notExpired(blockNumber, optimistic)) ? cachedRoutes : undefined;
     }
 }
 exports.IRouteCachingProvider = IRouteCachingProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtY2FjaGluZy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9yb3V0ZS1jYWNoaW5nLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQU9BLGdEQUF3RjtBQUV4RixtQ0FBb0M7QUFHcEM7OztHQUdHO0FBQ0gsTUFBc0IscUJBQXFCO0lBQTNDO1FBQ0U7Ozs7Ozs7Ozs7O1dBV0c7UUFDYSxtQkFBYyxHQUFHLEtBQUssRUFBRywrRUFBK0U7UUFDdEgsT0FBZSxFQUNmLE1BQWdDLEVBQ2hDLFVBQWlCLEVBQ2pCLFNBQW9CLEVBQ3BCLFNBQXFCLEVBQ3JCLFdBQW1CLEVBQ2dCLEVBQUU7WUFDckMsSUFBSSxNQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQyxJQUFJLGlCQUFTLENBQUMsUUFBUSxFQUFFO2dCQUNwRyxPQUFPLFNBQVMsQ0FBQzthQUNsQjtZQUVELE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUM7WUFFbEcsT0FBTyxJQUFJLENBQUMseUJBQXlCLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ2xFLENBQUMsQ0FBQztRQUVGOzs7Ozs7OztXQVFHO1FBQ2EsbUJBQWMsR0FBRyxLQUFLLEVBQUcsK0VBQStFO1FBQ3RILFlBQTBCLEVBQzFCLE1BQWdDLEVBQ2QsRUFBRTtZQUNwQixJQUFJLE1BQU0sSUFBSSxDQUFDLDRCQUE0QixDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsSUFBSSxpQkFBUyxDQUFDLFFBQVEsRUFBRTtnQkFDdkYsT0FBTyxLQUFLLENBQUM7YUFDZDtZQUVELFlBQVksQ0FBQyxZQUFZLEdBQUcsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBRTlFLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDcEQsQ0FBQyxDQUFDO0lBd0ZKLENBQUM7SUF0RkM7Ozs7O09BS0c7SUFDSSw0QkFBNEIsQ0FDakMsWUFBMEIsRUFDMUIsTUFBZ0M7UUFFaEMsTUFBTSxVQUFVLEdBQUcsWUFBWSxDQUFDLFNBQVMsSUFBSSxvQkFBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztRQUVsSCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQ3RCLFlBQVksQ0FBQyxPQUFPLEVBQ3BCLE1BQU0sRUFDTixVQUFVLEVBQ1YsWUFBWSxDQUFDLFNBQVMsRUFDdEIsWUFBWSxDQUFDLGdCQUFnQixDQUM5QixDQUFDO0lBQ0osQ0FBQztJQXFCTyx5QkFBeUIsQ0FDL0IsWUFBc0MsRUFDdEMsV0FBbUI7UUFFbkIsT0FBTyxDQUFBLFlBQVksYUFBWixZQUFZLHVCQUFaLFlBQVksQ0FBRSxVQUFVLENBQUMsV0FBVyxDQUFDLEVBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO0lBQzFFLENBQUM7Q0F5Q0Y7QUExSUQsc0RBMElDIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtY2FjaGluZy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9yb3V0ZS1jYWNoaW5nLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQU9BLGdEQUF3RjtBQUV4RixtQ0FBb0M7QUFHcEM7OztHQUdHO0FBQ0gsTUFBc0IscUJBQXFCO0lBQTNDO1FBQ0U7Ozs7Ozs7Ozs7O1dBV0c7UUFDYSxtQkFBYyxHQUFHLEtBQUssRUFBRywrRUFBK0U7UUFDdEgsT0FBZSxFQUNmLE1BQWdDLEVBQ2hDLFVBQWlCLEVBQ2pCLFNBQW9CLEVBQ3BCLFNBQXFCLEVBQ3JCLFdBQW1CLEVBQ25CLFVBQVUsR0FBRyxLQUFLLEVBQ2lCLEVBQUU7WUFDckMsSUFBSSxNQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQyxJQUFJLGlCQUFTLENBQUMsUUFBUSxFQUFFO2dCQUNwRyxPQUFPLFNBQVMsQ0FBQzthQUNsQjtZQUVELE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLGVBQWUsQ0FDNUMsT0FBTyxFQUNQLE1BQU0sRUFDTixVQUFVLEVBQ1YsU0FBUyxFQUNULFNBQVMsRUFDVCxXQUFXLEVBQ1gsVUFBVSxDQUNYLENBQUM7WUFFRixPQUFPLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxXQUFXLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQzlFLENBQUMsQ0FBQztRQUVGOzs7Ozs7OztXQVFHO1FBQ2EsbUJBQWMsR0FBRyxLQUFLLEVBQUcsK0VBQStFO1FBQ3RILFlBQTBCLEVBQzFCLE1BQWdDLEVBQ2QsRUFBRTtZQUNwQixJQUFJLE1BQU0sSUFBSSxDQUFDLDRCQUE0QixDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsSUFBSSxpQkFBUyxDQUFDLFFBQVEsRUFBRTtnQkFDdkYsT0FBTyxLQUFLLENBQUM7YUFDZDtZQUVELFlBQVksQ0FBQyxZQUFZLEdBQUcsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBRTlFLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFDcEQsQ0FBQyxDQUFDO0lBMkZKLENBQUM7SUF6RkM7Ozs7O09BS0c7SUFDSSw0QkFBNEIsQ0FDakMsWUFBMEIsRUFDMUIsTUFBZ0M7UUFFaEMsTUFBTSxVQUFVLEdBQUcsWUFBWSxDQUFDLFNBQVMsSUFBSSxvQkFBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztRQUVsSCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQ3RCLFlBQVksQ0FBQyxPQUFPLEVBQ3BCLE1BQU0sRUFDTixVQUFVLEVBQ1YsWUFBWSxDQUFDLFNBQVMsRUFDdEIsWUFBWSxDQUFDLGdCQUFnQixDQUM5QixDQUFDO0lBQ0osQ0FBQztJQXFCUyx5QkFBeUIsQ0FDakMsWUFBc0MsRUFDdEMsV0FBbUIsRUFDbkIsVUFBbUI7UUFFbkIsT0FBTyxDQUFBLFlBQVksYUFBWixZQUFZLHVCQUFaLFlBQVksQ0FBRSxVQUFVLENBQUMsV0FBVyxFQUFFLFVBQVUsQ0FBQyxFQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUN0RixDQUFDO0NBMkNGO0FBdEpELHNEQXNKQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/index.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/index.d.ts
index 922a012..7973a3e 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/index.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/index.d.ts
@@ -3,6 +3,7 @@ export * from './cache-node';
 export * from './caching-gas-provider';
 export * from './caching-token-list-provider';
 export * from './caching-token-provider';
+export * from './caching/route';
 export * from './eip-1559-gas-price-provider';
 export * from './eth-estimate-gas-provider';
 export * from './eth-gas-station-info-gas-price-provider';
@@ -16,10 +17,10 @@ export * from './simulation-provider';
 export * from './static-gas-price-provider';
 export * from './swap-router-provider';
 export * from './tenderly-simulation-provider';
+export * from './token-properties-provider';
 export * from './token-provider';
 export * from './token-validator-provider';
 export * from './uri-subgraph-provider';
-export * from './caching/route';
 export * from './v2/caching-pool-provider';
 export * from './v2/caching-subgraph-provider';
 export * from './v2/pool-provider';
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/index.js b/node_modules/@uniswap/smart-order-router/build/main/providers/index.js
index 4799c22..7c9fb48 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/index.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/index.js
@@ -19,6 +19,7 @@ __exportStar(require("./cache-node"), exports);
 __exportStar(require("./caching-gas-provider"), exports);
 __exportStar(require("./caching-token-list-provider"), exports);
 __exportStar(require("./caching-token-provider"), exports);
+__exportStar(require("./caching/route"), exports);
 __exportStar(require("./eip-1559-gas-price-provider"), exports);
 __exportStar(require("./eth-estimate-gas-provider"), exports);
 __exportStar(require("./eth-gas-station-info-gas-price-provider"), exports);
@@ -32,10 +33,10 @@ __exportStar(require("./simulation-provider"), exports);
 __exportStar(require("./static-gas-price-provider"), exports);
 __exportStar(require("./swap-router-provider"), exports);
 __exportStar(require("./tenderly-simulation-provider"), exports);
+__exportStar(require("./token-properties-provider"), exports);
 __exportStar(require("./token-provider"), exports);
 __exportStar(require("./token-validator-provider"), exports);
 __exportStar(require("./uri-subgraph-provider"), exports);
-__exportStar(require("./caching/route"), exports);
 __exportStar(require("./v2/caching-pool-provider"), exports);
 __exportStar(require("./v2/caching-subgraph-provider"), exports);
 __exportStar(require("./v2/pool-provider"), exports);
@@ -51,4 +52,4 @@ __exportStar(require("./v3/static-subgraph-provider"), exports);
 __exportStar(require("./v3/subgraph-provider"), exports);
 __exportStar(require("./v3/subgraph-provider-with-fallback"), exports);
 __exportStar(require("./v3/uri-subgraph-provider"), exports);
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwwQ0FBd0I7QUFDeEIsK0NBQTZCO0FBQzdCLHlEQUF1QztBQUN2QyxnRUFBOEM7QUFDOUMsMkRBQXlDO0FBQ3pDLGdFQUE4QztBQUM5Qyw4REFBNEM7QUFDNUMsNEVBQTBEO0FBQzFELHVEQUFxQztBQUNyQyw4REFBNEM7QUFDNUMsdURBQXFDO0FBQ3JDLCtEQUE2QztBQUM3QyxnRUFBOEM7QUFDOUMsNERBQTBDO0FBQzFDLHdEQUFzQztBQUN0Qyw4REFBNEM7QUFDNUMseURBQXVDO0FBQ3ZDLGlFQUErQztBQUMvQyxtREFBaUM7QUFDakMsNkRBQTJDO0FBQzNDLDBEQUF3QztBQUN4QyxrREFBZ0M7QUFDaEMsNkRBQTJDO0FBQzNDLGlFQUErQztBQUMvQyxxREFBbUM7QUFDbkMsc0RBQW9DO0FBQ3BDLGdFQUE4QztBQUM5Qyx5REFBdUM7QUFDdkMsdUVBQXFEO0FBQ3JELDZEQUEyQztBQUMzQyw2REFBMkM7QUFDM0MsaUVBQStDO0FBQy9DLHFEQUFtQztBQUNuQyxnRUFBOEM7QUFDOUMseURBQXVDO0FBQ3ZDLHVFQUFxRDtBQUNyRCw2REFBMkMifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSwwQ0FBd0I7QUFDeEIsK0NBQTZCO0FBQzdCLHlEQUF1QztBQUN2QyxnRUFBOEM7QUFDOUMsMkRBQXlDO0FBQ3pDLGtEQUFnQztBQUNoQyxnRUFBOEM7QUFDOUMsOERBQTRDO0FBQzVDLDRFQUEwRDtBQUMxRCx1REFBcUM7QUFDckMsOERBQTRDO0FBQzVDLHVEQUFxQztBQUNyQywrREFBNkM7QUFDN0MsZ0VBQThDO0FBQzlDLDREQUEwQztBQUMxQyx3REFBc0M7QUFDdEMsOERBQTRDO0FBQzVDLHlEQUF1QztBQUN2QyxpRUFBK0M7QUFDL0MsOERBQTRDO0FBQzVDLG1EQUFpQztBQUNqQyw2REFBMkM7QUFDM0MsMERBQXdDO0FBQ3hDLDZEQUEyQztBQUMzQyxpRUFBK0M7QUFDL0MscURBQW1DO0FBQ25DLHNEQUFvQztBQUNwQyxnRUFBOEM7QUFDOUMseURBQXVDO0FBQ3ZDLHVFQUFxRDtBQUNyRCw2REFBMkM7QUFDM0MsNkRBQTJDO0FBQzNDLGlFQUErQztBQUMvQyxxREFBbUM7QUFDbkMsZ0VBQThDO0FBQzlDLHlEQUF1QztBQUN2Qyx1RUFBcUQ7QUFDckQsNkRBQTJDIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.js
index b7ed414..1103e43 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/on-chain-quote-provider.js
@@ -188,6 +188,8 @@ class OnChainQuoteProvider {
         log_1.log.info(`About to get ${inputs.length} quotes in chunks of ${normalizedChunk} [${lodash_1.default.map(inputsChunked, (i) => i.length).join(',')}] ${gasLimitOverride
             ? `with a gas limit override of ${gasLimitOverride}`
             : ''} and block number: ${await providerConfig.blockNumber} [Original before offset: ${originalBlockNumber}].`);
+        util_1.metric.putMetric('QuoteBatchSize', inputs.length, util_1.MetricLoggerUnit.Count);
+        util_1.metric.putMetric(`QuoteBatchSize_${(0, util_1.ID_TO_NETWORK_NAME)(this.chainId)}`, inputs.length, util_1.MetricLoggerUnit.Count);
         let haveRetriedForSuccessRate = false;
         let haveRetriedForBlockHeader = false;
         let blockHeaderRetryAttemptNumber = 0;
@@ -520,4 +522,4 @@ class OnChainQuoteProvider {
     }
 }
 exports.OnChainQuoteProvider = OnChainQuoteProvider;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/provider.d.ts
index 0eb6800..b5d6208 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/provider.d.ts
@@ -1,8 +1,11 @@
+import { BigNumber } from '@ethersproject/bignumber';
 export declare type ProviderConfig = {
     /**
      * The block number to use when getting data on-chain.
      */
     blockNumber?: number | Promise<number>;
+    additionalGasOverhead?: BigNumber;
+    debugRouting?: boolean;
 };
 export declare type LocalCacheEntry<T> = {
     entry: T;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.d.ts
new file mode 100644
index 0000000..6fdb25a
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.d.ts
@@ -0,0 +1,28 @@
+import { BigNumber } from '@ethersproject/bignumber';
+import { BaseProvider } from '@ethersproject/providers';
+import { ChainId } from '@uniswap/sdk-core';
+import { ProviderConfig } from './provider';
+export declare const DEFAULT_TOKEN_FEE_RESULT: {
+    buyFeeBps: BigNumber;
+    sellFeeBps: BigNumber;
+};
+declare type Address = string;
+export declare type TokenFeeResult = {
+    buyFeeBps?: BigNumber;
+    sellFeeBps?: BigNumber;
+};
+export declare type TokenFeeMap = Record<Address, TokenFeeResult>;
+export interface ITokenFeeFetcher {
+    fetchFees(addresses: Address[], providerConfig?: ProviderConfig): Promise<TokenFeeMap>;
+}
+export declare class OnChainTokenFeeFetcher implements ITokenFeeFetcher {
+    private chainId;
+    private tokenFeeAddress;
+    private gasLimitPerCall;
+    private amountToFlashBorrow;
+    private BASE_TOKEN;
+    private readonly contract;
+    constructor(chainId: ChainId, rpcProvider: BaseProvider, tokenFeeAddress?: string, gasLimitPerCall?: number, amountToFlashBorrow?: string);
+    fetchFees(addresses: Address[], providerConfig?: ProviderConfig): Promise<TokenFeeMap>;
+}
+export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.js b/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.js
new file mode 100644
index 0000000..0ac41fa
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-fee-fetcher.js
@@ -0,0 +1,73 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.OnChainTokenFeeFetcher = exports.DEFAULT_TOKEN_FEE_RESULT = void 0;
+const bignumber_1 = require("@ethersproject/bignumber");
+const sdk_core_1 = require("@uniswap/sdk-core");
+const TokenFeeDetector__factory_1 = require("../types/other/factories/TokenFeeDetector__factory");
+const util_1 = require("../util");
+const DEFAULT_TOKEN_BUY_FEE_BPS = bignumber_1.BigNumber.from(0);
+const DEFAULT_TOKEN_SELL_FEE_BPS = bignumber_1.BigNumber.from(0);
+// on detector failure, assume no fee
+exports.DEFAULT_TOKEN_FEE_RESULT = {
+    buyFeeBps: DEFAULT_TOKEN_BUY_FEE_BPS,
+    sellFeeBps: DEFAULT_TOKEN_SELL_FEE_BPS,
+};
+// address at which the FeeDetector lens is deployed
+const FEE_DETECTOR_ADDRESS = (chainId) => {
+    switch (chainId) {
+        case sdk_core_1.ChainId.MAINNET:
+        default:
+            return '0x19C97dc2a25845C7f9d1d519c8C2d4809c58b43f';
+    }
+};
+// Amount has to be big enough to avoid rounding errors, but small enough that
+// most v2 pools will have at least this many token units
+// 10000 is the smallest number that avoids rounding errors in bps terms
+const AMOUNT_TO_FLASH_BORROW = '10000';
+// 1M gas limit per validate call, should cover most swap cases
+const GAS_LIMIT_PER_VALIDATE = 1000000;
+class OnChainTokenFeeFetcher {
+    constructor(chainId, rpcProvider, tokenFeeAddress = FEE_DETECTOR_ADDRESS(chainId), gasLimitPerCall = GAS_LIMIT_PER_VALIDATE, amountToFlashBorrow = AMOUNT_TO_FLASH_BORROW) {
+        var _a;
+        this.chainId = chainId;
+        this.tokenFeeAddress = tokenFeeAddress;
+        this.gasLimitPerCall = gasLimitPerCall;
+        this.amountToFlashBorrow = amountToFlashBorrow;
+        this.BASE_TOKEN = (_a = util_1.WRAPPED_NATIVE_CURRENCY[this.chainId]) === null || _a === void 0 ? void 0 : _a.address;
+        this.contract = TokenFeeDetector__factory_1.TokenFeeDetector__factory.connect(this.tokenFeeAddress, rpcProvider);
+    }
+    async fetchFees(addresses, providerConfig) {
+        const tokenToResult = {};
+        const functionParams = addresses.map((address) => [
+            address,
+            this.BASE_TOKEN,
+            this.amountToFlashBorrow,
+        ]);
+        const results = await Promise.all(functionParams.map(async ([address, baseToken, amountToBorrow]) => {
+            try {
+                // We use the validate function instead of batchValidate to avoid poison pill problem.
+                // One token that consumes too much gas could cause the entire batch to fail.
+                const feeResult = await this.contract.callStatic.validate(address, baseToken, amountToBorrow, {
+                    gasLimit: this.gasLimitPerCall,
+                    blockTag: providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber,
+                });
+                return Object.assign({ address }, feeResult);
+            }
+            catch (err) {
+                util_1.log.error({ err }, `Error calling validate on-chain for token ${address}`);
+                // in case of FOT token fee fetch failure, we return null
+                // so that they won't get returned from the token-fee-fetcher
+                // and thus no fee will be applied, and the cache won't cache on FOT tokens with failed fee fetching
+                return { address, buyFeeBps: undefined, sellFeeBps: undefined };
+            }
+        }));
+        results.forEach(({ address, buyFeeBps, sellFeeBps }) => {
+            if (buyFeeBps || sellFeeBps) {
+                tokenToResult[address] = { buyFeeBps, sellFeeBps };
+            }
+        });
+        return tokenToResult;
+    }
+}
+exports.OnChainTokenFeeFetcher = OnChainTokenFeeFetcher;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tZmVlLWZldGNoZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3Rva2VuLWZlZS1mZXRjaGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdEQUFxRDtBQUVyRCxnREFBNEM7QUFFNUMsa0dBQStGO0FBRS9GLGtDQUF1RDtBQUl2RCxNQUFNLHlCQUF5QixHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3BELE1BQU0sMEJBQTBCLEdBQUcscUJBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFckQscUNBQXFDO0FBQ3hCLFFBQUEsd0JBQXdCLEdBQUc7SUFDdEMsU0FBUyxFQUFFLHlCQUF5QjtJQUNwQyxVQUFVLEVBQUUsMEJBQTBCO0NBQ3ZDLENBQUM7QUFVRixvREFBb0Q7QUFDcEQsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLE9BQWdCLEVBQUUsRUFBRTtJQUNoRCxRQUFRLE9BQU8sRUFBRTtRQUNmLEtBQUssa0JBQU8sQ0FBQyxPQUFPLENBQUM7UUFDckI7WUFDRSxPQUFPLDRDQUE0QyxDQUFDO0tBQ3ZEO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsOEVBQThFO0FBQzlFLHlEQUF5RDtBQUN6RCx3RUFBd0U7QUFDeEUsTUFBTSxzQkFBc0IsR0FBRyxPQUFPLENBQUM7QUFDdkMsK0RBQStEO0FBQy9ELE1BQU0sc0JBQXNCLEdBQUcsT0FBUyxDQUFDO0FBU3pDLE1BQWEsc0JBQXNCO0lBSWpDLFlBQ1UsT0FBZ0IsRUFDeEIsV0FBeUIsRUFDakIsa0JBQWtCLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxFQUMvQyxrQkFBa0Isc0JBQXNCLEVBQ3hDLHNCQUFzQixzQkFBc0I7O1FBSjVDLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFFaEIsb0JBQWUsR0FBZixlQUFlLENBQWdDO1FBQy9DLG9CQUFlLEdBQWYsZUFBZSxDQUF5QjtRQUN4Qyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXlCO1FBRXBELElBQUksQ0FBQyxVQUFVLEdBQUcsTUFBQSw4QkFBdUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLDBDQUFFLE9BQU8sQ0FBQztRQUNqRSxJQUFJLENBQUMsUUFBUSxHQUFHLHFEQUF5QixDQUFDLE9BQU8sQ0FDL0MsSUFBSSxDQUFDLGVBQWUsRUFDcEIsV0FBVyxDQUNaLENBQUM7SUFDSixDQUFDO0lBRU0sS0FBSyxDQUFDLFNBQVMsQ0FDcEIsU0FBb0IsRUFDcEIsY0FBK0I7UUFFL0IsTUFBTSxhQUFhLEdBQWdCLEVBQUUsQ0FBQztRQUV0QyxNQUFNLGNBQWMsR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQztZQUNoRCxPQUFPO1lBQ1AsSUFBSSxDQUFDLFVBQVU7WUFDZixJQUFJLENBQUMsbUJBQW1CO1NBQ3pCLENBQStCLENBQUM7UUFFakMsTUFBTSxPQUFPLEdBQUcsTUFBTSxPQUFPLENBQUMsR0FBRyxDQUMvQixjQUFjLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsY0FBYyxDQUFDLEVBQUUsRUFBRTtZQUNoRSxJQUFJO2dCQUNGLHNGQUFzRjtnQkFDdEYsNkVBQTZFO2dCQUM3RSxNQUFNLFNBQVMsR0FBRyxNQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FDdkQsT0FBTyxFQUNQLFNBQVMsRUFDVCxjQUFjLEVBQ2Q7b0JBQ0UsUUFBUSxFQUFFLElBQUksQ0FBQyxlQUFlO29CQUM5QixRQUFRLEVBQUUsY0FBYyxhQUFkLGNBQWMsdUJBQWQsY0FBYyxDQUFFLFdBQVc7aUJBQ3RDLENBQ0YsQ0FBQztnQkFDRix1QkFBUyxPQUFPLElBQUssU0FBUyxFQUFHO2FBQ2xDO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osVUFBRyxDQUFDLEtBQUssQ0FDUCxFQUFFLEdBQUcsRUFBRSxFQUNQLDZDQUE2QyxPQUFPLEVBQUUsQ0FDdkQsQ0FBQztnQkFDRix5REFBeUQ7Z0JBQ3pELDZEQUE2RDtnQkFDN0Qsb0dBQW9HO2dCQUNwRyxPQUFPLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxDQUFDO2FBQ2pFO1FBQ0gsQ0FBQyxDQUFDLENBQ0gsQ0FBQztRQUVGLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRTtZQUNyRCxJQUFJLFNBQVMsSUFBSSxVQUFVLEVBQUU7Z0JBQzNCLGFBQWEsQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsQ0FBQzthQUNwRDtRQUNILENBQUMsQ0FBQyxDQUFDO1FBRUgsT0FBTyxhQUFhLENBQUM7SUFDdkIsQ0FBQztDQUNGO0FBbEVELHdEQWtFQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.d.ts
new file mode 100644
index 0000000..b2e92c0
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.d.ts
@@ -0,0 +1,27 @@
+import { ChainId, Token } from '@uniswap/sdk-core';
+import { ICache } from './cache';
+import { ProviderConfig } from './provider';
+import { ITokenFeeFetcher, TokenFeeResult } from './token-fee-fetcher';
+import { ITokenValidatorProvider, TokenValidationResult } from './token-validator-provider';
+export declare const DEFAULT_TOKEN_PROPERTIES_RESULT: TokenPropertiesResult;
+declare type Address = string;
+export declare type TokenPropertiesResult = {
+    tokenFeeResult?: TokenFeeResult;
+    tokenValidationResult?: TokenValidationResult;
+};
+export declare type TokenPropertiesMap = Record<Address, TokenPropertiesResult>;
+export interface ITokenPropertiesProvider {
+    getTokensProperties(tokens: Token[], providerConfig?: ProviderConfig): Promise<TokenPropertiesMap>;
+}
+export declare class TokenPropertiesProvider implements ITokenPropertiesProvider {
+    private chainId;
+    private tokenValidatorProvider;
+    private tokenPropertiesCache;
+    private tokenFeeFetcher;
+    private allowList;
+    private CACHE_KEY;
+    constructor(chainId: ChainId, tokenValidatorProvider: ITokenValidatorProvider, tokenPropertiesCache: ICache<TokenPropertiesResult>, tokenFeeFetcher: ITokenFeeFetcher, allowList?: Set<string>);
+    getTokensProperties(tokens: Token[], providerConfig?: ProviderConfig): Promise<TokenPropertiesMap>;
+    private buildAddressesRaw;
+}
+export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.js
new file mode 100644
index 0000000..f76a2ae
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-properties-provider.js
@@ -0,0 +1,92 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.TokenPropertiesProvider = exports.DEFAULT_TOKEN_PROPERTIES_RESULT = void 0;
+const util_1 = require("../util");
+const token_fee_fetcher_1 = require("./token-fee-fetcher");
+const token_validator_provider_1 = require("./token-validator-provider");
+exports.DEFAULT_TOKEN_PROPERTIES_RESULT = {
+    tokenFeeResult: token_fee_fetcher_1.DEFAULT_TOKEN_FEE_RESULT,
+};
+class TokenPropertiesProvider {
+    constructor(chainId, tokenValidatorProvider, tokenPropertiesCache, tokenFeeFetcher, allowList = token_validator_provider_1.DEFAULT_ALLOWLIST) {
+        this.chainId = chainId;
+        this.tokenValidatorProvider = tokenValidatorProvider;
+        this.tokenPropertiesCache = tokenPropertiesCache;
+        this.tokenFeeFetcher = tokenFeeFetcher;
+        this.allowList = allowList;
+        this.CACHE_KEY = (chainId, address) => `token-properties-${chainId}-${address}`;
+    }
+    async getTokensProperties(tokens, providerConfig) {
+        var _a;
+        const nonAllowlistTokens = tokens.filter((token) => !this.allowList.has(token.address.toLowerCase()));
+        const tokenValidationResults = await this.tokenValidatorProvider.validateTokens(nonAllowlistTokens, providerConfig);
+        const tokenToResult = {};
+        tokens.forEach((token) => {
+            if (this.allowList.has(token.address.toLowerCase())) {
+                // if the token is in the allowlist, make it UNKNOWN so that we don't fetch the FOT fee on-chain
+                tokenToResult[token.address.toLowerCase()] = {
+                    tokenValidationResult: token_validator_provider_1.TokenValidationResult.UNKN,
+                };
+            }
+            else {
+                tokenToResult[token.address.toLowerCase()] = {
+                    tokenValidationResult: tokenValidationResults.getValidationByToken(token),
+                };
+            }
+        });
+        const addressesToFetchFeesOnchain = [];
+        const addressesRaw = this.buildAddressesRaw(tokens);
+        const tokenProperties = await this.tokenPropertiesCache.batchGet(addressesRaw);
+        // Check if we have cached token validation results for any tokens.
+        for (const address of addressesRaw) {
+            const cachedValue = tokenProperties[address];
+            if (cachedValue) {
+                tokenToResult[address] = cachedValue;
+            }
+            else if (((_a = tokenToResult[address]) === null || _a === void 0 ? void 0 : _a.tokenValidationResult) ===
+                token_validator_provider_1.TokenValidationResult.FOT) {
+                addressesToFetchFeesOnchain.push(address);
+            }
+        }
+        if (addressesToFetchFeesOnchain.length > 0) {
+            let tokenFeeMap = {};
+            try {
+                tokenFeeMap = await this.tokenFeeFetcher.fetchFees(addressesToFetchFeesOnchain, providerConfig);
+            }
+            catch (err) {
+                util_1.log.error({ err }, `Error fetching fees for tokens ${addressesToFetchFeesOnchain}`);
+            }
+            await Promise.all(addressesToFetchFeesOnchain.map((address) => {
+                const tokenFee = tokenFeeMap[address];
+                if (tokenFee && (tokenFee.buyFeeBps || tokenFee.sellFeeBps)) {
+                    const tokenResultForAddress = tokenToResult[address];
+                    if (tokenResultForAddress) {
+                        tokenResultForAddress.tokenFeeResult = tokenFee;
+                    }
+                    // update cache concurrently
+                    // at this point, we are confident that the tokens are FOT, so we can hardcode the validation result
+                    return this.tokenPropertiesCache.set(this.CACHE_KEY(this.chainId, address), {
+                        tokenFeeResult: tokenFee,
+                        tokenValidationResult: token_validator_provider_1.TokenValidationResult.FOT,
+                    });
+                }
+                else {
+                    return Promise.resolve(true);
+                }
+            }));
+        }
+        return tokenToResult;
+    }
+    buildAddressesRaw(tokens) {
+        const addressesRaw = new Set();
+        for (const token of tokens) {
+            const address = token.address.toLowerCase();
+            if (!addressesRaw.has(address)) {
+                addressesRaw.add(address);
+            }
+        }
+        return addressesRaw;
+    }
+}
+exports.TokenPropertiesProvider = TokenPropertiesProvider;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tcHJvcGVydGllcy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdG9rZW4tcHJvcGVydGllcy1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxrQ0FBOEI7QUFHOUIsMkRBSzZCO0FBQzdCLHlFQUlvQztBQUV2QixRQUFBLCtCQUErQixHQUEwQjtJQUNwRSxjQUFjLEVBQUUsNENBQXdCO0NBQ3pDLENBQUM7QUFnQkYsTUFBYSx1QkFBdUI7SUFJbEMsWUFDVSxPQUFnQixFQUNoQixzQkFBK0MsRUFDL0Msb0JBQW1ELEVBQ25ELGVBQWlDLEVBQ2pDLFlBQVksNENBQWlCO1FBSjdCLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUF5QjtRQUMvQyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQStCO1FBQ25ELG9CQUFlLEdBQWYsZUFBZSxDQUFrQjtRQUNqQyxjQUFTLEdBQVQsU0FBUyxDQUFvQjtRQVIvQixjQUFTLEdBQUcsQ0FBQyxPQUFnQixFQUFFLE9BQWUsRUFBRSxFQUFFLENBQ3hELG9CQUFvQixPQUFPLElBQUksT0FBTyxFQUFFLENBQUM7SUFReEMsQ0FBQztJQUVHLEtBQUssQ0FBQyxtQkFBbUIsQ0FDOUIsTUFBZSxFQUNmLGNBQStCOztRQUUvQixNQUFNLGtCQUFrQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQ3RDLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FDNUQsQ0FBQztRQUNGLE1BQU0sc0JBQXNCLEdBQzFCLE1BQU0sSUFBSSxDQUFDLHNCQUFzQixDQUFDLGNBQWMsQ0FDOUMsa0JBQWtCLEVBQ2xCLGNBQWMsQ0FDZixDQUFDO1FBQ0osTUFBTSxhQUFhLEdBQXVCLEVBQUUsQ0FB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.d.ts
index ee243bc..f0d4619 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.d.ts
@@ -78,6 +78,7 @@ export declare const CEUR_CELO_ALFAJORES: Token;
 export declare const DAI_AVAX: Token;
 export declare const USDC_AVAX: Token;
 export declare const USDC_BASE: Token;
+export declare const USDT_TENET: Token;
 export declare const USDC_BASE_GOERLI: Token;
 export declare const USDC_ETHEREUM_GNOSIS: Token;
 export declare const WXDAI_GNOSIS: Token;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.js
index 80da1f0..5a04cd0 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-provider.js
@@ -4,7 +4,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.CELO_ALFAJORES = exports.CEUR_CELO = exports.CUSD_CELO = exports.DAI_CELO = exports.CELO = exports.USDT_BNB = exports.USDC_BNB = exports.ETH_BNB = exports.DAI_BNB = exports.BUSD_BNB = exports.BTC_BNB = exports.WETH_POLYGON_MUMBAI = exports.DAI_POLYGON_MUMBAI = exports.USDC_POLYGON_MUMBAI = exports.WMATIC_POLYGON_MUMBAI = exports.DAI_POLYGON = exports.USDC_POLYGON = exports.WETH_POLYGON = exports.WMATIC_POLYGON = exports.USDC_ARBITRUM_GOERLI = exports.DAI_ARBITRUM_GOERLI = exports.ARB_ARBITRUM = exports.DAI_ARBITRUM = exports.WBTC_ARBITRUM = exports.USDT_ARBITRUM = exports.USDC_ARBITRUM = exports.DAI_OPTIMISM_GOERLI = exports.WBTC_OPTIMISM_GOERLI = exports.USDT_OPTIMISM_GOERLI = exports.USDC_OPTIMISM_GOERLI = exports.OP_OPTIMISM = exports.DAI_OPTIMISM = exports.WBTC_OPTIMISM = exports.USDT_OPTIMISM = exports.USDC_OPTIMISM = exports.UNI_GOERLI = exports.DAI_GOERLI = exports.WBTC_GOERLI = exports.USDT_GOERLI = exports.USDC_GOERLI = exports.DAI_SEPOLIA = exports.USDC_SEPOLIA = exports.LIDO_MAINNET = exports.AAVE_MAINNET = exports.UNI_MAINNET = exports.FEI_MAINNET = exports.DAI_MAINNET = exports.WBTC_MAINNET = exports.USDT_MAINNET = exports.USDC_MAINNET = void 0;
-exports.WNATIVE_ON = exports.USDC_ON = exports.USDT_ON = exports.DAI_ON = exports.TokenProvider = exports.WBTC_MOONBEAM = exports.DAI_MOONBEAM = exports.WGLMR_MOONBEAM = exports.USDC_MOONBEAM = exports.WBTC_GNOSIS = exports.WXDAI_GNOSIS = exports.USDC_ETHEREUM_GNOSIS = exports.USDC_BASE_GOERLI = exports.USDC_BASE = exports.USDC_AVAX = exports.DAI_AVAX = exports.CEUR_CELO_ALFAJORES = exports.CUSD_CELO_ALFAJORES = exports.DAI_CELO_ALFAJORES = void 0;
+exports.WNATIVE_ON = exports.USDC_ON = exports.USDT_ON = exports.DAI_ON = exports.TokenProvider = exports.WBTC_MOONBEAM = exports.DAI_MOONBEAM = exports.WGLMR_MOONBEAM = exports.USDC_MOONBEAM = exports.WBTC_GNOSIS = exports.WXDAI_GNOSIS = exports.USDC_ETHEREUM_GNOSIS = exports.USDC_BASE_GOERLI = exports.USDT_TENET = exports.USDC_BASE = exports.USDC_AVAX = exports.DAI_AVAX = exports.CEUR_CELO_ALFAJORES = exports.CUSD_CELO_ALFAJORES = exports.DAI_CELO_ALFAJORES = void 0;
 const abi_1 = require("@ethersproject/abi");
 const strings_1 = require("@ethersproject/strings");
 const sdk_core_1 = require("@uniswap/sdk-core");
@@ -77,6 +77,8 @@ exports.DAI_AVAX = new sdk_core_1.Token(sdk_core_1.ChainId.AVALANCHE, '0xd586E7F
 exports.USDC_AVAX = new sdk_core_1.Token(sdk_core_1.ChainId.AVALANCHE, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', 6, 'USDC', 'USDC Token');
 // Base Tokens
 exports.USDC_BASE = new sdk_core_1.Token(sdk_core_1.ChainId.BASE, '0xd9aAEc86B65D86f6A7B5B1b0c42FFA531710b6CA', 6, 'USDbC', 'USD Base Coin');
+// Base Tokens
+exports.USDT_TENET = new sdk_core_1.Token(sdk_core_1.ChainId.TENET, '0x205022527f77800161685bC00a61473CcFa54C35', 6, 'USDT', 'USDT TENET');
 // Base Goerli Tokens 
 exports.USDC_BASE_GOERLI = new sdk_core_1.Token(sdk_core_1.ChainId.BASE_GOERLI, '0x853154e2A5604E5C74a2546E2871Ad44932eB92C', 6, 'USDbC', 'USD Base Coin');
 // Gnosis Tokens
@@ -292,4 +294,4 @@ const WNATIVE_ON = (chainId) => {
     return util_1.WRAPPED_NATIVE_CURRENCY[chainId];
 };
 exports.WNATIVE_ON = WNATIVE_ON;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-validator-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/main/providers/token-validator-provider.d.ts
index 5103c6a..3c0c171 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/token-validator-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-validator-provider.d.ts
@@ -2,6 +2,7 @@ import { ChainId, Token } from '@uniswap/sdk-core';
 import { ICache } from './cache';
 import { IMulticallProvider } from './multicall-provider';
 import { ProviderConfig } from './provider';
+export declare const DEFAULT_ALLOWLIST: Set<string>;
 export declare enum TokenValidationResult {
     UNKN = 0,
     FOT = 1,
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/token-validator-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/token-validator-provider.js
index 3f52d70..00ecb5d 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/token-validator-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/token-validator-provider.js
@@ -3,11 +3,11 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.TokenValidatorProvider = exports.TokenValidationResult = void 0;
+exports.TokenValidatorProvider = exports.TokenValidationResult = exports.DEFAULT_ALLOWLIST = void 0;
 const lodash_1 = __importDefault(require("lodash"));
 const ITokenValidator__factory_1 = require("../types/other/factories/ITokenValidator__factory");
 const util_1 = require("../util");
-const DEFAULT_ALLOWLIST = new Set([
+exports.DEFAULT_ALLOWLIST = new Set([
     // RYOSHI. Does not allow transfers between contracts so fails validation.
     '0x777E2ae845272a2F540ebf6a3D03734A5a8f618e'.toLowerCase(),
 ]);
@@ -21,7 +21,7 @@ const TOKEN_VALIDATOR_ADDRESS = '0xb5ee1690b7dcc7859771148d0889be838fe108e0';
 const AMOUNT_TO_FLASH_BORROW = '1000';
 const GAS_LIMIT_PER_VALIDATE = 1000000;
 class TokenValidatorProvider {
-    constructor(chainId, multicall2Provider, tokenValidationCache, tokenValidatorAddress = TOKEN_VALIDATOR_ADDRESS, gasLimitPerCall = GAS_LIMIT_PER_VALIDATE, amountToFlashBorrow = AMOUNT_TO_FLASH_BORROW, allowList = DEFAULT_ALLOWLIST) {
+    constructor(chainId, multicall2Provider, tokenValidationCache, tokenValidatorAddress = TOKEN_VALIDATOR_ADDRESS, gasLimitPerCall = GAS_LIMIT_PER_VALIDATE, amountToFlashBorrow = AMOUNT_TO_FLASH_BORROW, allowList = exports.DEFAULT_ALLOWLIST) {
         this.chainId = chainId;
         this.multicall2Provider = multicall2Provider;
         this.tokenValidationCache = tokenValidationCache;
@@ -92,4 +92,4 @@ class TokenValidatorProvider {
     }
 }
 exports.TokenValidatorProvider = TokenValidatorProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tdmFsaWRhdG9yLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy90b2tlbi12YWxpZGF0b3ItcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0Esb0RBQXVCO0FBRXZCLGdHQUE2RjtBQUM3RixrQ0FBdUQ7QUFNdkQsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLEdBQUcsQ0FBUztJQUN4QywwRUFBMEU7SUFDMUUsNENBQTRDLENBQUMsV0FBVyxFQUFFO0NBQzNELENBQUMsQ0FBQztBQUVILElBQVkscUJBSVg7QUFKRCxXQUFZLHFCQUFxQjtJQUMvQixpRUFBUSxDQUFBO0lBQ1IsK0RBQU8sQ0FBQTtJQUNQLCtEQUFPLENBQUE7QUFDVCxDQUFDLEVBSlcscUJBQXFCLEdBQXJCLDZCQUFxQixLQUFyQiw2QkFBcUIsUUFJaEM7QUFNRCxNQUFNLHVCQUF1QixHQUFHLDRDQUE0QyxDQUFDO0FBQzdFLE1BQU0sc0JBQXNCLEdBQUcsTUFBTSxDQUFDO0FBQ3RDLE1BQU0sc0JBQXNCLEdBQUcsT0FBUyxDQUFDO0FBc0J6QyxNQUFhLHNCQUFzQjtJQU1qQyxZQUNZLE9BQWdCLEVBQ2hCLGtCQUFzQyxFQUN4QyxvQkFBbUQsRUFDbkQsd0JBQXdCLHVCQUF1QixFQUMvQyxrQkFBa0Isc0JBQXNCLEVBQ3hDLHNCQUFzQixzQkFBc0IsRUFDNUMsWUFBWSxpQkFBaUI7UUFOM0IsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQix1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO1FBQ3hDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBK0I7UUFDbkQsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUEwQjtRQUMvQyxvQkFBZSxHQUFmLGVBQWUsQ0FBeUI7UUFDeEMsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUF5QjtRQUM1QyxjQUFTLEdBQVQsU0FBUyxDQUFvQjtRQVovQixjQUFTLEdBQUcsQ0FBQyxP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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tdmFsaWRhdG9yLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy90b2tlbi12YWxpZGF0b3ItcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0Esb0RBQXVCO0FBRXZCLGdHQUE2RjtBQUM3RixrQ0FBdUQ7QUFNMUMsUUFBQSxpQkFBaUIsR0FBRyxJQUFJLEdBQUcsQ0FBUztJQUMvQywwRUFBMEU7SUFDMUUsNENBQTRDLENBQUMsV0FBVyxFQUFFO0NBQzNELENBQUMsQ0FBQztBQUVILElBQVkscUJBSVg7QUFKRCxXQUFZLHFCQUFxQjtJQUMvQixpRUFBUSxDQUFBO0lBQ1IsK0RBQU8sQ0FBQTtJQUNQLCtEQUFPLENBQUE7QUFDVCxDQUFDLEVBSlcscUJBQXFCLEdBQXJCLDZCQUFxQixLQUFyQiw2QkFBcUIsUUFJaEM7QUFNRCxNQUFNLHVCQUF1QixHQUFHLDRDQUE0QyxDQUFDO0FBQzdFLE1BQU0sc0JBQXNCLEdBQUcsTUFBTSxDQUFDO0FBQ3RDLE1BQU0sc0JBQXNCLEdBQUcsT0FBUyxDQUFDO0FBc0J6QyxNQUFhLHNCQUFzQjtJQU1qQyxZQUNZLE9BQWdCLEVBQ2hCLGtCQUFzQyxFQUN4QyxvQkFBbUQsRUFDbkQsd0JBQXdCLHVCQUF1QixFQUMvQyxrQkFBa0Isc0JBQXNCLEVBQ3hDLHNCQUFzQixzQkFBc0IsRUFDNUMsWUFBWSx5QkFBaUI7UUFOM0IsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQix1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO1FBQ3hDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBK0I7UUFDbkQsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUEwQjtRQUMvQyxvQkFBZSxHQUFmLGVBQWUsQ0FBeUI7UUFDeEMsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUF5QjtRQUM1QyxjQUFTLEdBQVQsU0FBUyxDQUFvQjtRQVovQixjQUFTLEdBQUcsQ0FBQyxPQUFnQixFQUFFLE9BQWUsRUFBRSxFQUFFLENBQ3hELFNBQVMsT0FBTyxJQUFJLE9BQU8sRUFBRSxDQUFDO1FBYTlCLElBQUksQ0FBQyxLQUFLLEdBQUcsQ0FBQyw4QkFBdUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFFLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDaEUsQ0FBQztJQUVNLEtBQUssQ0FBQyxjQUFjLENBQ3pCLE1BQWUsRUFDZixjQUErQjtRQUUvQixNQUFNLG1CQUFtQixHQUFHLGdCQUFDLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQztRQUN2RCxNQUFNLFlBQVksR0FBRyxJQUFBLGdCQUFDLEVBQUMsTUFBTSxDQUFDO2FBQzNCLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQzthQUM3QixJQUFJLEVBQUU7YUFDTixLQUFLLEVBQUUsQ0FBQztRQUVYLE1BQU0sU0FBUyxHQUFhLEVBQUUsQ0FBQztRQUMvQixNQUFNLGFBQWEsR0FBc0QsRUFBRSxDQUFDO1FBRTVFLG1FQUFtRTtRQUNuRSxLQUFLLE1BQU0sT0FBTyxJQUFJLFlBQVksRUFBRTtZQUNsQyxJQUNFLE1BQU0sSUFBSSxDQUFDLG9CQUFvQixDQUFDLEdBQUcsQ0FDakMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUN0QyxFQUNEO2dCQUNBLGFBQWEsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUM7b0JBQ2xDLENBQUMsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsR0FBRyxDQUNsQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQ3RDLENBQUUsQ0FBQzthQUNQO2lCQUFNO2dCQUNMLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7YUFDekI7U0FDRjtRQUVELFVBQUcsQ0FBQyxJQUFJLENBQ04sb0NBQ0UsWUFBWSxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUMsTUFDbEMsK0JBQStCLFNBQVMsQ0FBQyxNQUFNLFlBQVksQ0FDNUQsQ0FBQztRQUVGLE1BQU0sY0FBYyxHQUFHLElBQUEsZ0JBQUMsRUFBQyxTQUFTLENBQUM7YUFDaEMsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO2FBQ2pFLEtBQUssRUFBa0MsQ0FBQztRQUUzQyxzRkFBc0Y7UUFDdEYsNkVBQTZFO1FBQzdFLE1BQU0sZUFBZSxHQUNuQixNQUFNLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyw0Q0FBNEMsQ0FHeEU7WUFDQSxPQUFPLEVBQUUsSUFBSSxDQUFDLHFCQUFxQjtZQUNuQyxpQkFBaUIsRUFBRSxtREFBd0IsQ0FBQyxlQUFlLEVBQUU7WUFDN0QsWUFBWSxFQUFFLFVBQVU7WUFDeEIsY0FBYyxFQUFFLGNBQWM7WUFDOUIsY0FBYztZQUNkLGdCQUFnQixFQUFFO2dCQUNoQix1QkFBdUIsRUFBRSxJQUFJLENBQUMsZUFBZTthQUM5QztTQUNGLENBQUMsQ0FBQztRQUVMLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxlQUFlLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUN2RCxNQUFNLGFBQWEsR0FBRyxlQUFlLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBRSxDQUFDO1lBQ2xELE1BQU0sWUFBWSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUNuQyxNQUFNLEtBQUssR0FBRyxtQkFBbUIsQ0FBQyxZQUFZLENBQUUsQ0FBQztZQUVqRCxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsRUFBRTtnQkFDbkQsYUFBYSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxxQkFBcUIsQ0FBQyxJQUFJLENBQUM7Z0JBRXhFLE1BQU0sSUFBSSxDQUFDLG9CQUFvQixDQUFDLEdBQUcsQ0FDakMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsRUFDekQsYUFBYSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUUsQ0FDNUMsQ0FBQztnQkFFRixTQUFTO2FBQ1Y7WUFFRCwrRUFBK0U7WUFDL0UsK0JBQStCO1lBQy9CLElBQUksQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFO2dCQUMxQixVQUFHLENBQUMsSUFBSSxDQUNOLEVBQUUsTUFBTSxFQUFFLGFBQWEsRUFBRSxFQUN6Qiw0QkFBNEIsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUMzQyxDQUFDO2dCQUVGLFNBQVM7YUFDVjtZQUVELE1BQU0sZ0JBQWdCLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUVsRCxhQUFhLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztnQkFDeEMsZ0JBQXlDLENBQUM7WUFFNUMsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsR0FBRyxDQUNqQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxFQUN6RCxhQUFhLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBRSxDQUM1QyxDQUFDO1NBQ0g7UUFFRCxPQUFPO1lBQ0wsb0JBQW9CLEVBQUUsQ0FBQyxLQUFZLEVBQUUsRUFBRSxDQUNyQyxhQUFhLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUM3QyxDQUFDO0lBQ0osQ0FBQztDQUNGO0FBckhELHdEQXFIQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/caching-pool-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/caching-pool-provider.js
index 621c33a..22fc288 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/caching-pool-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/caching-pool-provider.js
@@ -64,7 +64,8 @@ class CachingV2PoolProvider {
                 const pool = poolAccessor.getPoolByAddress(address);
                 if (pool) {
                     poolAddressToPool[address] = pool;
-                    await this.cache.set(this.POOL_KEY(this.chainId, address), {
+                    // We don't want to wait for this caching to complete before returning the pools.
+                    this.cache.set(this.POOL_KEY(this.chainId, address), {
                         pair: pool,
                         block: blockNumber,
                     });
@@ -85,4 +86,4 @@ class CachingV2PoolProvider {
     }
 }
 exports.CachingV2PoolProvider = CachingV2PoolProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1wb29sLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9jYWNoaW5nLXBvb2wtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsb0RBQXVCO0FBRXZCLHdDQUFxQztBQU1yQzs7Ozs7R0FLRztBQUNILE1BQWEscUJBQXFCO0lBSWhDOzs7OztPQUtHO0lBQ0gsWUFDWSxPQUFnQixFQUNoQixZQUE2QjtJQUN2Qyw2RkFBNkY7SUFDN0YsK0JBQStCO0lBQy9CLDRGQUE0RjtJQUNwRixLQUE2QztRQUwzQyxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGlCQUFZLEdBQVosWUFBWSxDQUFpQjtRQUkvQixVQUFLLEdBQUwsS0FBSyxDQUF3QztRQWYvQyxhQUFRLEdBQUcsQ0FBQyxPQUFnQixFQUFFLE9BQWUsRUFBRSxFQUFFLENBQ3ZELFFBQVEsT0FBTyxJQUFJLE9BQU8sRUFBRSxDQUFDO0lBZTVCLENBQUM7SUFFRyxLQUFLLENBQUMsUUFBUSxDQUNuQixVQUE0QixFQUM1QixjQUErQjtRQUUvQixNQUFNLGNBQWMsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUN0RCxNQUFNLG9CQUFvQixHQUEwQixFQUFFLENBQUM7UUFDdkQsTUFBTSxtQkFBbUIsR0FBYSxFQUFFLENBQUM7UUFDekMsTUFBTSxpQkFBaUIsR0FBb0MsRUFBRSxDQUFDO1FBRTlELE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQSxjQUFjLGFBQWQsY0FBYyx1QkFBZCxjQUFjLENBQUUsV0FBVyxDQUFBLENBQUM7UUFFdEQsS0FBSyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxJQUFJLFVBQVUsRUFBRTtZQUN6QyxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUN6RCxNQUFNLEVBQ04sTUFBTSxDQUNQLENB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1wb29sLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9jYWNoaW5nLXBvb2wtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsb0RBQXVCO0FBRXZCLHdDQUFxQztBQU1yQzs7Ozs7R0FLRztBQUNILE1BQWEscUJBQXFCO0lBSWhDOzs7OztPQUtHO0lBQ0gsWUFDWSxPQUFnQixFQUNoQixZQUE2QjtJQUN2Qyw2RkFBNkY7SUFDN0YsK0JBQStCO0lBQy9CLDRGQUE0RjtJQUNwRixLQUE2QztRQUwzQyxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGlCQUFZLEdBQVosWUFBWSxDQUFpQjtRQUkvQixVQUFLLEdBQUwsS0FBSyxDQUF3QztRQWYvQyxhQUFRLEdBQUcsQ0FBQyxPQUFnQixFQUFFLE9BQWUsRUFBRSxFQUFFLENBQ3ZELFFBQVEsT0FBTyxJQUFJLE9BQU8sRUFBRSxDQUFDO0lBZ0IvQixDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQVEsQ0FDbkIsVUFBNEIsRUFDNUIsY0FBK0I7UUFFL0IsTUFBTSxjQUFjLEdBQWdCLElBQUksR0FBRyxFQUFVLENBQUM7UUFDdEQsTUFBTSxvQkFBb0IsR0FBMEIsRUFBRSxDQUFDO1FBQ3ZELE1BQU0sbUJBQW1CLEdBQWEsRUFBRSxDQUFDO1FBQ3pDLE1BQU0saUJBQWlCLEdBQW9DLEVBQUUsQ0FBQztRQUU5RCxNQUFNLFdBQVcsR0FBRyxNQUFNLENBQUEsY0FBYyxhQUFkLGNBQWMsdUJBQWQsY0FBYyxDQUFFLFdBQVcsQ0FBQSxDQUFDO1FBRXRELEtBQUssTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsSUFBSSxVQUFVLEVBQUU7WUFDekMsTUFBTSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FDekQsTUFBTSxFQUNOLE1BQU0sQ0FDUCxD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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/pool-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/pool-provider.js
index 530fc75..fa03957 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/pool-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/pool-provider.js
@@ -46,6 +46,8 @@ class V2PoolProvider {
         }
         log_1.log.debug(`getPools called with ${tokenPairs.length} token pairs. Deduped down to ${poolAddressSet.size}`);
         util_1.metric.putMetric('V2_RPC_POOL_RPC_CALL', 1, util_1.MetricLoggerUnit.None);
+        util_1.metric.putMetric('V2GetReservesBatchSize', sortedPoolAddresses.length, util_1.MetricLoggerUnit.Count);
+        util_1.metric.putMetric(`V2GetReservesBatchSize_${(0, util_1.ID_TO_NETWORK_NAME)(this.chainId)}`, sortedPoolAddresses.length, util_1.MetricLoggerUnit.Count);
         const reservesResults = await this.getPoolsData(sortedPoolAddresses, 'getReserves', providerConfig);
         log_1.log.info(`Got reserves for ${poolAddressSet.size} pools ${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
             ? `as of block: ${await (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)}.`
@@ -108,4 +110,4 @@ class V2PoolProvider {
     }
 }
 exports.V2PoolProvider = V2PoolProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSw0Q0FBdUM7QUFDdkMsOERBQTZEO0FBQzdELG9EQUF1QjtBQUV2Qiw4RkFBMkY7QUFDM0YscUNBQXNFO0FBQ3RFLHdDQUFxQztBQUNyQyw4Q0FBaUQ7QUFrRGpELE1BQWEsY0FBYztJQUt6Qjs7Ozs7T0FLRztJQUNILFlBQ1ksT0FBZ0IsRUFDaEIsa0JBQXNDLEVBQ3RDLGVBQW1DO1FBQzNDLE9BQU8sRUFBRSxDQUFDO1FBQ1YsVUFBVSxFQUFFLEVBQUU7UUFDZCxVQUFVLEVBQUUsR0FBRztLQUNoQjtRQU5TLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0QyxpQkFBWSxHQUFaLFlBQVksQ0FJckI7UUFqQkgseUVBQXlFO1FBQ3pFLGtEQUFrRDtRQUMxQyx1QkFBa0IsR0FBOEIsRUFBRSxDQUFDO0lBZ0J4RCxDQUFDO0lBRUcsS0FBSyxDQUFDLFFBQVEsQ0FDbkIsVUFBNEIsRUFDNUIsY0FBK0I7UUFFL0IsTUFBTSxjQUFjLEdBQWdCLElBQUksR0FBRyxFQUFVLENBQUM7UUFDdEQsTUFBTSxnQkFBZ0IsR0FBMEIsRUFBRSxDQUFDO1FBQ25ELE1BQU0sbUJBQW1CLEdBQWEsRUFBRSxDQUFDO1FBRXpDLEtBQUssTUFBTSxTQUFTLElBQUksVUFBVSxFQUFFO1lBQ2xDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLEdBQUcsU0FBUyxDQUFDO1lBRW5DLE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQ3pELE1BQU0sRUFDTixNQUFNLENBQ1AsQ0FBQztZQUVGLElBQUksY0FBYyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSw0Q0FBdUM7QUFDdkMsOERBQTZEO0FBQzdELG9EQUF1QjtBQUV2Qiw4RkFBMkY7QUFDM0YscUNBQTBGO0FBQzFGLHdDQUFxQztBQUNyQyw4Q0FBaUQ7QUFrRGpELE1BQWEsY0FBYztJQUt6Qjs7Ozs7T0FLRztJQUNILFlBQ1ksT0FBZ0IsRUFDaEIsa0JBQXNDLEVBQ3RDLGVBQW1DO1FBQzNDLE9BQU8sRUFBRSxDQUFDO1FBQ1YsVUFBVSxFQUFFLEVBQUU7UUFDZCxVQUFVLEVBQUUsR0FBRztLQUNoQjtRQU5TLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtRQUN0QyxpQkFBWSxHQUFaLFlBQVksQ0FJckI7UUFqQkgseUVBQXlFO1FBQ3pFLGtEQUFrRDtRQUMxQyx1QkFBa0IsR0FBOEIsRUFBRSxDQUFDO0lBaUIzRCxDQUFDO0lBRU0sS0FBSyxDQUFDLFFBQVEsQ0FDbkIsVUFBNEIsRUFDNUIsY0FBK0I7UUFFL0IsTUFBTSxjQUFjLEdBQWdCLElBQUksR0FBRyxFQUFVLENBQUM7UUFDdEQsTUFBTSxnQkFBZ0IsR0FBMEIsRUFBRSxDQUFDO1FBQ25ELE1BQU0sbUJBQW1CLEdBQWEsRUFBRSxDQUFDO1FBRXpDLEtBQUssTUFBTSxTQUFTLElBQUksVUFBVSxFQUFFO1lBQ2xDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLEdBQUcsU0FBUyxDQUFDO1lBRW5DLE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQ3pELE1BQU0sRUFDTixNQUFNLENBQ1AsQ0FBQztZQUVGLElBQUksY0FBYyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/static-subgraph-provider.js
index b2b52f3..91e5713 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v2/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v2/static-subgraph-provider.js
@@ -34,7 +34,8 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
     [sdk_core_1.ChainId.BNB]: [],
     [sdk_core_1.ChainId.AVALANCHE]: [],
     [sdk_core_1.ChainId.BASE_GOERLI]: [],
-    [sdk_core_1.ChainId.BASE]: []
+    [sdk_core_1.ChainId.BASE]: [],
+    [sdk_core_1.ChainId.TENET]: []
 };
 /**
  * Provider that does not get data from an external source and instead returns
@@ -94,4 +95,4 @@ class StaticV2SubgraphProvider {
     }
 }
 exports.StaticV2SubgraphProvider = StaticV2SubgraphProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsZ0RBQW1EO0FBQ25ELDRDQUF1QztBQUN2QyxvREFBdUI7QUFFdkIsOENBQTREO0FBQzVELHdDQUFxQztBQUNyQyxzREFLMkI7QUFRM0IsTUFBTSw2QkFBNkIsR0FBbUI7SUFDcEQsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ2pCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFFO1FBQ3pDLDRCQUFXO1FBQ1gsNkJBQVk7UUFDWiw2QkFBWTtRQUNaLDZCQUFZO0tBQ2I7SUFDRCxDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBRSxDQUFDO0lBQzVELENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFFLENBQUM7SUFDOUQsNkdBQTZHO0lBQzdHLENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFO0lBQ3RCLENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxFQUFFO0lBQzFCLENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRSxFQUFFO0lBQzdCLENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRSxFQUFFO0lBQzdCLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFO0lBQ3JCLENBQUMsa0JBQU8sQ0FBQyxjQUFjLENBQUMsRUFBRSxFQUFFO0lBQzVCLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO0lBQ2xCLENBQUMsa0JBQU8sQ0FBQyxjQUFjLENBQUMsRUFBRSxFQUFF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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsZ0RBQW1EO0FBQ25ELDRDQUF1QztBQUN2QyxvREFBdUI7QUFFdkIsOENBQTREO0FBQzVELHdDQUFxQztBQUNyQyxzREFLMkI7QUFRM0IsTUFBTSw2QkFBNkIsR0FBbUI7SUFDcEQsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ2pCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFFO1FBQ3pDLDRCQUFXO1FBQ1gsNkJBQVk7UUFDWiw2QkFBWTtRQUNaLDZCQUFZO0tBQ2I7SUFDRCxDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBRSxDQUFDO0lBQzVELENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFFLENBQUM7SUFDOUQsNkdBQTZHO0lBQzdHLENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFO0lBQ3RCLENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxFQUFFO0lBQzFCLENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRSxFQUFFO0lBQzdCLENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRSxFQUFFO0lBQzdCLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFO0lBQ3JCLENBQUMsa0JBQU8sQ0FBQyxjQUFjLENBQUMsRUFBRSxFQUFFO0lBQzVCLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO0lBQ2xCLENBQUMsa0JBQU8sQ0FBQyxjQUFjLENBQUMsRUFBRSxFQUFFO0lBQzVCLENBQUMsa0JBQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFO0lBQ3BCLENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFO0lBQ3RCLENBQUMsa0JBQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxFQUFFO0lBQ2pCLENBQUMsa0JBQU8sQ0FBQyxTQUFTLENBQUMsRUFBRSxFQUFFO0lBQ3ZCLENBQUMsa0JBQU8sQ0FBQyxXQUFXLENBQUMsRUFBRSxFQUFFO0lBQ3pCLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFO0lBQ2xCLENBQUMsa0JBQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxFQUFFO0NBQ3BCLENBQUM7QUFFRjs7Ozs7Ozs7Ozs7R0FXRztBQUNILE1BQWEsd0JBQXdCO0lBQ25DLFlBQW9CLE9BQWdCO1FBQWhCLFlBQU8sR0FBUCxPQUFPLENBQVM7SUFBSSxDQUFDO0lBRWxDLEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQjtRQUVoQixTQUFHLENBQUMsSUFBSSxDQUFDLG9DQUFvQyxDQUFDLENBQUM7UUFDL0MsTUFBTSxLQUFLLEdBQUcsNkJBQTZCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTFELE1BQU0sU0FBUyxHQUFxQixnQkFBQyxDQUFDLE9BQU8sQ0FDM0MsS0FBSyxFQUNMLENBQUMsSUFBSSxFQUFvQixFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLEVBQUUsU0FBUyxDQUFDLENBQUMsQ0FDeEUsQ0FBQztRQUVGLElBQUksT0FBTyxJQUFJLFFBQVEsRUFBRTtZQUN2QixTQUFTLENBQUMsSUFBSSxDQUNaLENBQUMsT0FBTyxFQUFFLFFBQVEsQ0FBQyxFQUNuQixHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQWtCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUN2RCxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQWtCLEVBQUUsQ0FBQyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUN6RCxDQUFDO1NBQ0g7UUFFRCxNQUFNLEtBQUssR0FBcUIsSUFBQSxnQkFBQyxFQUFDLFNBQVMsQ0FBQzthQUN6QyxNQUFNLENBQUMsQ0FBQyxNQUFNLEVBQTRCLEVBQUUsQ0FDM0MsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FDaEM7YUFDQSxNQUFNLENBQ0wsQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsRUFBRSxFQUFFLENBQ25CLE1BQU0sQ0FBQyxPQUFPLEtBQUssTUFBTSxDQUFDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQzlEO2FBQ0EsS0FBSyxFQUFFLENBQUM7UUFFWCxNQUFNLGNBQWMsR0FBRyxJQUFJLEdBQUcsRUFBVSxDQUFDO1FBRXpDLE1BQU0sYUFBYSxHQUFxQixJQUFBLGdCQUFDLEVBQUMsS0FBSyxDQUFDO2FBQzdDLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxFQUFFLEVBQUU7WUFDeEIsTUFBTSxXQUFXLEdBQUcsYUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFFcEQsSUFBSSxjQUFjLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxFQUFFO2dCQUNuQyxPQUFPLFNBQVMsQ0FBQzthQUNsQjtZQUNELGNBQWMsQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLENBQUM7WUFFaEMsTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQztnQkFDakQsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQztnQkFDbEIsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1lBRXJCLE9BQU87Z0JBQ0wsRUFBRSxFQUFFLFdBQVc7Z0JBQ2YsU0FBUyxFQUFFLEtBQUs7Z0JBQ2hCLE1BQU0sRUFBRTtvQkFDTixFQUFFLEVBQUUsTUFBTSxDQUFDLE9BQU87aUJBQ25CO2dCQUNELE1BQU0sRUFBRTtvQkFDTixFQUFFLEVBQUUsTUFBTSxDQUFDLE9BQU87aUJBQ25CO2dCQUNELE1BQU0sRUFBRSxHQUFHO2dCQUNYLE9BQU8sRUFBRSxHQUFHO2dCQUNaLFVBQVUsRUFBRSxHQUFHO2FBQ2hCLENBQUM7UUFDSixDQUFDLENBQUM7YUFDRCxPQUFPLEVBQUU7YUFDVCxLQUFLLEVBQUUsQ0FBQztRQUVYLE9BQU8sYUFBYSxDQUFDO0lBQ3ZCLENBQUM7Q0FDRjtBQW5FRCw0REFtRUMifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/caching-pool-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/caching-pool-provider.js
index 96f3eb2..148fbdf 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/caching-pool-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/caching-pool-provider.js
@@ -59,7 +59,8 @@ class CachingV3PoolProvider {
                 const pool = poolAccessor.getPoolByAddress(address);
                 if (pool) {
                     poolAddressToPool[address] = pool;
-                    await this.cache.set(this.POOL_KEY(this.chainId, address), pool);
+                    // We don't want to wait for this caching to complete before returning the pools.
+                    this.cache.set(this.POOL_KEY(this.chainId, address), pool);
                 }
             }
         }
@@ -77,4 +78,4 @@ class CachingV3PoolProvider {
     }
 }
 exports.CachingV3PoolProvider = CachingV3PoolProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1wb29sLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9jYWNoaW5nLXBvb2wtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsb0RBQXVCO0FBRXZCLHFDQUFzRDtBQUN0RCx3Q0FBcUM7QUFPckM7Ozs7Ozs7R0FPRztBQUNILE1BQWEscUJBQXFCO0lBSWhDOzs7OztPQUtHO0lBQ0gsWUFDWSxPQUFnQixFQUNoQixZQUE2QixFQUMvQixLQUFtQjtRQUZqQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGlCQUFZLEdBQVosWUFBWSxDQUFpQjtRQUMvQixVQUFLLEdBQUwsS0FBSyxDQUFjO1FBWnJCLGFBQVEsR0FBRyxDQUFDLE9BQWdCLEVBQUUsT0FBZSxFQUFFLEVBQUUsQ0FDdkQsUUFBUSxPQUFPLElBQUksT0FBTyxFQUFFLENBQUM7SUFZNUIsQ0FBQztJQUVHLEtBQUssQ0FBQyxRQUFRLENBQ25CLFVBQXVDLEVBQ3ZDLGNBQStCO1FBRS9CLE1BQU0sY0FBYyxHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ3RELE1BQU0sb0JBQW9CLEdBQXFDLEVBQUUsQ0FBQztRQUNsRSxNQUFNLG1CQUFtQixHQUFhLEVBQUUsQ0FBQztRQUN6QyxNQUFNLGlCQUFpQixHQUFvQyxFQUFFLENBQUM7UUFFOUQsS0FBSyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsSUFBSSxVQUFVLEVBQUU7WUFDcEQsTUFBTSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FDekQsTUFBTSxFQUNOLE1BQU0sRUFDTixTQUFTLENBQ1YsQ0FBQztZQUVGLElBQUksY0FBYyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRTtnQkFDbkMsU0FBUzthQUNWO1lBRUQsY0FBYyxDQUFDLEdB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1wb29sLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9jYWNoaW5nLXBvb2wtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsb0RBQXVCO0FBRXZCLHFDQUFzRDtBQUN0RCx3Q0FBcUM7QUFPckM7Ozs7Ozs7R0FPRztBQUNILE1BQWEscUJBQXFCO0lBSWhDOzs7OztPQUtHO0lBQ0gsWUFDWSxPQUFnQixFQUNoQixZQUE2QixFQUMvQixLQUFtQjtRQUZqQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGlCQUFZLEdBQVosWUFBWSxDQUFpQjtRQUMvQixVQUFLLEdBQUwsS0FBSyxDQUFjO1FBWnJCLGFBQVEsR0FBRyxDQUFDLE9BQWdCLEVBQUUsT0FBZSxFQUFFLEVBQUUsQ0FDdkQsUUFBUSxPQUFPLElBQUksT0FBTyxFQUFFLENBQUM7SUFhL0IsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFRLENBQ25CLFVBQXVDLEVBQ3ZDLGNBQStCO1FBRS9CLE1BQU0sY0FBYyxHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ3RELE1BQU0sb0JBQW9CLEdBQXFDLEVBQUUsQ0FBQztRQUNsRSxNQUFNLG1CQUFtQixHQUFhLEVBQUUsQ0FBQztRQUN6QyxNQUFNLGlCQUFpQixHQUFvQyxFQUFFLENBQUM7UUFFOUQsS0FBSyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsSUFBSSxVQUFVLEVBQUU7WUFDcEQsTUFBTSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FDekQsTUFBTSxFQUNOLE1BQU0sRUFDTixTQUFTLENBQ1YsQ0FBQztZQUVGLElBQUksY0FBYyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRTtnQkFDbkMsU0FBUzthQUNWO1lBRUQsY0FBYyxDQUFDLEdB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/static-subgraph-provider.js
index 4e71f87..5a4448c 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/static-subgraph-provider.js
@@ -97,6 +97,7 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
     ],
     [sdk_core_1.ChainId.BASE_GOERLI]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BASE_GOERLI]],
     [sdk_core_1.ChainId.BASE]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BASE], token_provider_1.USDC_BASE],
+    [sdk_core_1.ChainId.TENET]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.TENET], token_provider_1.USDT_TENET],
 };
 /**
  * Provider that uses a hardcoded list of V3 pools to generate a list of subgraph pools.
@@ -167,4 +168,4 @@ class StaticV3SubgraphProvider {
     }
 }
 exports.StaticV3SubgraphProvider = StaticV3SubgraphProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsNkRBQTZEO0FBQzdELGdEQUFtRDtBQUNuRCw0Q0FBa0Q7QUFDbEQsZ0RBQXdCO0FBQ3hCLG9EQUF1QjtBQUV2QixnREFBc0Q7QUFDdEQsOENBQTREO0FBQzVELHdDQUFxQztBQUVyQyxzREFxRDJCO0FBUzNCLE1BQU0sNkJBQTZCLEdBQW1CO0lBQ3BELENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUNqQixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRTtRQUN6Qyw0QkFBVztRQUNYLDZCQUFZO1FBQ1osNkJBQVk7UUFDWiw2QkFBWTtLQUNiO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQ2hCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFFO1FBQ3hDLDRCQUFXO1FBQ1gsNEJBQVc7UUFDWCw0QkFBVztRQUNYLDJCQUFVO0tBQ1g7SUFDRCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRSxFQUFFLDZCQUFZLENBQUM7SUFDNUUsQ0FBQyxrQkFBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ2xCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFFO1FBQzFDLDhCQUFhO1FBQ2IsNkJBQVk7UUFDWiw4QkFBYTtRQUNiLDhCQUFhO1FBQ2IsNEJBQVc7S0FDWjtJQUNELENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUMsRUFBRTtRQUN0QixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLFlBQVksQ0FBRTtRQUM5Qyw4QkFBYTtRQUNiLDZCQUFZO1FBQ1osOEJBQWE7UUFDYiw4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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsNkRBQTZEO0FBQzdELGdEQUFtRDtBQUNuRCw0Q0FBa0Q7QUFDbEQsZ0RBQXdCO0FBQ3hCLG9EQUF1QjtBQUV2QixnREFBc0Q7QUFDdEQsOENBQTREO0FBQzVELHdDQUFxQztBQUVyQyxzREFzRDJCO0FBUzNCLE1BQU0sNkJBQTZCLEdBQW1CO0lBQ3BELENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUNqQixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRTtRQUN6Qyw0QkFBVztRQUNYLDZCQUFZO1FBQ1osNkJBQVk7UUFDWiw2QkFBWTtLQUNiO0lBQ0QsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQ2hCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFFO1FBQ3hDLDRCQUFXO1FBQ1gsNEJBQVc7UUFDWCw0QkFBVztRQUNYLDJCQUFVO0tBQ1g7SUFDRCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRSxFQUFFLDZCQUFZLENBQUM7SUFDNUUsQ0FBQyxrQkFBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ2xCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFFO1FBQzFDLDhCQUFhO1FBQ2IsNkJBQVk7UUFDWiw4QkFBYTtRQUNiLDhCQUFhO1FBQ2IsNEJBQVc7S0FDWjtJQUNELENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUMsRUFBRTtRQUN0QixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLFlBQVksQ0FBRTtRQUM5Qyw4QkFBYTtRQUNiLDZCQUFZO1FBQ1osOEJBQWE7UUFDYiw4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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider.js
index bc019f6..a39b2bc 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/providers/v3/subgraph-provider.js
@@ -34,7 +34,7 @@ const SUBGRAPH_URL_BY_CHAIN = {
     [sdk_core_1.ChainId.GOERLI]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-gorli',
     [sdk_core_1.ChainId.BNB]: 'https://api.thegraph.com/subgraphs/name/ilyamk/uniswap-v3---bnb-chain',
     [sdk_core_1.ChainId.AVALANCHE]: 'https://api.thegraph.com/subgraphs/name/lynnshaoyu/uniswap-v3-avax',
-    [sdk_core_1.ChainId.BASE]: 'https://api.studio.thegraph.com/query/48211/uniswap-v3-base/v0.0.1',
+    [sdk_core_1.ChainId.BASE]: 'https://api.studio.thegraph.com/query/48211/uniswap-v3-base/version/latest',
 };
 const PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.
 class V3SubgraphProvider {
@@ -142,4 +142,4 @@ class V3SubgraphProvider {
     }
 }
 exports.V3SubgraphProvider = V3SubgraphProvider;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YzL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsZ0RBQW1EO0FBQ25ELDhEQUFnQztBQUNoQyxrRUFBb0M7QUFDcEMscURBQXFEO0FBQ3JELG9EQUF1QjtBQUV2QixxQ0FBaUM7QUFrQzFCLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxDQUFpQixFQUFFLEVBQUUsQ0FDdkQsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7QUFEbEMsUUFBQSxtQkFBbUIsdUJBQ2U7QUFFeEMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLENBQWlCLEVBQUUsRUFBRSxDQUN2RCxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUM7QUFEckIsUUFBQSxtQkFBbUIsdUJBQ0U7QUFFbEMsTUFBTSxxQkFBcUIsR0FBc0M7SUFDL0QsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBQyxFQUNmLDREQUE0RDtJQUM5RCxDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFDLEVBQ2hCLDJFQUEyRTtJQUM3RSxDQUFDLGtCQUFPLENBQUMsWUFBWSxDQUFDLEVBQ3BCLG9FQUFvRTtJQUN0RSxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQ2Ysc0VBQXNFO0lBQ3hFLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFDWixpRUFBaUU7SUFDbkUsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUNkLG9FQUFvRTtJQUN0RSxDQUFDLGtCQUFPLENBQUMsR0FBRyxDQUFDLEVBQ1gsdUVBQXVFO0lBQ3pFLENBQUMsa0JBQU8sQ0FBQyxTQUFTLENBQUMsRUFDakIsb0VBQW9FO0lBQ3RFLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFDWixvRUFBb0U7Q0FDdkUsQ0FBQztBQUVGLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxDQUFDLCtDQUErQztBQWdCdkUsTUFBYSxrQkFBa0I7SUFHN0IsWUFDVSxPQUFnQixFQUNoQixVQUFVLENBQUMsRUFDWCxVQUFVLEtBQUssRUFDZixXQUFXLElBQUk7UUFIZixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLFlBQU8sR0FBUCxPQUFPLENBQUk7UUFDWCxZQUFPLEdBQVAsT0FBTyxDQUFRO1FBQ2YsYUFBUSxHQUFSLFFBQVEsQ0FBTztRQUV2QixNQUFNLFdBQVcsR0FBRyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDeEQsSUFBSSxDQUFDLFdBQVcsRUFBRTtZQUNoQixNQUFNLElBQUksS0FBSyxDQUFDLGlDQUFpQyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztTQUNsRTtRQUNELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSwrQkFBYSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQy9DLENBQUM7SUFFTSxLQUFLLENBQUMsUUFBUSxDQUNuQixRQUFnQixFQUNoQixTQUFpQixFQUNqQixjQUErQjtRQUUvQixJQUFJLFdBQVcsR0FBRyxDQUFBLGNBQWMsYUFBZCxjQUFjLHVCQUFkLGNBQWMsQ0FBRSxXQUFXO1lBQzNDLENBQUMsQ0FBQyxNQUFNLGNBQWMsQ0FBQyxXQUFXO1lBQ2xDLENBQUMsQ0FBQyxTQUFTLENBQUM7UUFFZCxNQUFNLEtBQUssR0FBRyxJQUFBLHFCQUFHLEVBQUE7Ozs7WUFJVCxXQUFXLENBQUMsQ0FBQyxDQUFDLG9CQUFvQixXQUFXLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0tBa0I3RCxDQUFDO1FBRUYsSUFBSSxLQUFLLEdBQXdCLEVBQUUsQ0FBQztRQUVwQyxVQUFHLENBQUMsSUFBSSxDQUNOLHFEQUFxRCxTQUFTLEdBQzVELENBQUEsY0FBYyxhQUFkLGNBQWMsdUJBQWQsY0FBYyxDQUFFLFdBQVc7WUFDekIsQ0FBQyxDQUFDLGdCQUFnQixjQUFjLGFBQWQsY0FBYyx1QkFBZCxjQUFjLENBQUUsV0FBVyxFQUFFO1lBQy9DLENBQUMsQ0FBQyxFQUNOLEdBQUcsQ0FDSixDQUFDO1FBRUYsTUFBTSxJQUFBLHFCQUFLLEVBQ1QsS0FBSyxJQUFJLEVBQUU7WUFDVCxNQUFNLE9BQU8sR0FBRyxJQUFJLHVCQUFPLEVBQUUsQ0FBQztZQUU5QixNQUFNLFFBQVEsR0FBRyxLQUFLLElBQWtDLEVBQUU7Z0JBQ3hELElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztnQkFDaEIsSUFBSSxLQUFLLEdBQXdCLEVBQUUsQ0FBQztnQkFDcEMsSUFBSSxTQUFTLEdBQXdCLEVBQUUsQ0FBQztnQkFFeEMsR0FBRztvQkFDRCxNQUFNLFdBQVcsR0FBRyxNQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUUxQyxLQUFLLEVBQUU7d0JBQ1IsUUFBUSxFQUFFLFNBQVM7d0JBQ25CLEVBQUUsRUFBRSxNQUFNO3FCQUNYLENBQUMsQ0FBQztvQkFFSCxTQUFTLEdBQUcsV0FBVyxDQUFDLEtBQUssQ0FBQztvQkFFOUIsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7b0JBRWhDLE1BQU0sR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUUsQ0FBQyxFQUFFLENBQUM7aUJBQ3RDLFFBQVEsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBRS9CLE9BQU8sS0FBSyxDQUFDO1lBQ2YsQ0FBQyxDQUFDO1lBRUYscUNBQXFDO1lBQ3JDLElBQUk7Z0JBQ0YsTUFBTSxlQUFlLEdBQUcsUUFBUSxFQUFFLENBQUM7Z0JBQ25DLE1BQU0sWUFBWSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUU7b0JBQ3ZELE1BQU0sSUFBSSxLQUFLLENBQ2IsMENBQTBDLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FDekQsQ0FBQztnQkFDSixDQUFDLENBQUMsQ0FBQztnQkFDSCxLQUFLLEdBQUcsTUFBTSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsZUFBZSxFQUFFLFlBQVksQ0FBQyxDQUFDLENBQUM7Z0JBQzVELE9BQU87YUFDUjtZQUFDLE9BQU8sR0FBRyxFQUFFO2dCQUNaLE1BQU0sR0FBRyxDQUFDO2FBQ1g7b0JBQVM7Z0JBQ1IsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDO2FBQ2pCO1lBQ0Qsb0NBQW9DO1FBQ3RDLENBQUMsRUFDRDtZQUNFLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTztZQUNyQixPQUFPLEVBQUUsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUU7Z0JBQ3RCLElBQ0UsSUFBSSxDQUFDLFFBQVE7b0JBQ2IsV0FBVztvQkFDWCxnQkFBQyxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLGVBQWUsQ0FBQyxFQUN4QztvQkFDQSxXQUFXLEdBQUcsV0FBVyxHQUFHLEVBQUUsQ0FBQztvQkFDL0IsVUFBRyxDQUFDLElBQUksQ0FDTixrRUFBa0UsV0FBVyxFQUFFLENBQ2hGLENBQUM7aUJBQ0g7Z0JBQ0QsS0FBSyxHQUFHLEVBQUUsQ0FBQztnQkFDWCxVQUFHLENBQUMsSUFBSSxDQUNOLEVBQUUsR0FBRyxFQUFFLEVBQ1AscURBQXFELEtBQUssRUFBRSxDQUM3RCxDQUFDO1lBQ0osQ0FBQztTQUNGLENBQ0YsQ0FBQztRQUVGLE1BQU0sY0FBYyxHQUFHLEtBQUs7YUFDekIsTUFBTSxDQUNMLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FDUCxRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7WUFDNUIsVUFBVSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxHQUFHLElBQUksQ0FDOUM7YUFDQSxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUNaLE1BQU0sRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsS0FBYyxJQUFJLEVBQWIsSUFBSSxVQUFLLElBQUksRUFBNUQsOENBQXFELENBQU8sQ0FBQztZQUVuRSx1Q0FDSyxJQUFJLEtBQ1AsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFLEVBQ3pCLE1BQU0sRUFBRTtvQkFDTixFQUFFLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFO2lCQUNqQyxFQUNELE1BQU0sRUFBRTtvQkFDTixFQUFFLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFO2lCQUNqQyxFQUNELE1BQU0sRUFBRSxVQUFVLENBQUMsbUJBQW1CLENBQUMsRUFDdkMsTUFBTSxFQUFFLFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQyxJQUN2QztRQUNKLENBQUMsQ0FBQyxDQUFDO1FBRUwsVUFBRyxDQUFDLElBQUksQ0FDTixPQUFPLEtBQUssQ0FBQyxNQUFNLGdDQUFnQyxjQUFjLENBQUMsTUFBTSxrQkFBa0IsQ0FDM0YsQ0FBQztRQUVGLE9BQU8sY0FBYyxDQUFDO0lBQ3hCLENBQUM7Q0FDRjtBQTFKRCxnREEwSkMifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YzL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsZ0RBQW1EO0FBQ25ELDhEQUFnQztBQUNoQyxrRUFBb0M7QUFDcEMscURBQXFEO0FBQ3JELG9EQUF1QjtBQUV2QixxQ0FBaUM7QUFrQzFCLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxDQUFpQixFQUFFLEVBQUUsQ0FDdkQsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7QUFEbEMsUUFBQSxtQkFBbUIsdUJBQ2U7QUFFeEMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLENBQWlCLEVBQUUsRUFBRSxDQUN2RCxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLENBQUM7QUFEckIsUUFBQSxtQkFBbUIsdUJBQ0U7QUFFbEMsTUFBTSxxQkFBcUIsR0FBc0M7SUFDL0QsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBQyxFQUNmLDREQUE0RDtJQUM5RCxDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFDLEVBQ2hCLDJFQUEyRTtJQUM3RSxDQUFDLGtCQUFPLENBQUMsWUFBWSxDQUFDLEVBQ3BCLG9FQUFvRTtJQUN0RSxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQ2Ysc0VBQXNFO0lBQ3hFLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFDWixpRUFBaUU7SUFDbkUsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUNkLG9FQUFvRTtJQUN0RSxDQUFDLGtCQUFPLENBQUMsR0FBRyxDQUFDLEVBQ1gsdUVBQXVFO0lBQ3pFLENBQUMsa0JBQU8s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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.d.ts
index eedefd4..ec7fa43 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.d.ts
@@ -2,7 +2,7 @@ import { BaseProvider } from '@ethersproject/providers';
 import { Protocol } from '@uniswap/router-sdk';
 import { ChainId, Currency, TradeType } from '@uniswap/sdk-core';
 import { Position } from '@uniswap/v3-sdk';
-import { IOnChainQuoteProvider, IRouteCachingProvider, ISwapRouterProvider, IV2QuoteProvider, IV2SubgraphProvider, Simulator, UniswapMulticallProvider } from '../../providers';
+import { CacheMode, IOnChainQuoteProvider, IRouteCachingProvider, ISwapRouterProvider, ITokenPropertiesProvider, IV2QuoteProvider, IV2SubgraphProvider, Simulator, UniswapMulticallProvider } from '../../providers';
 import { ITokenListProvider } from '../../providers/caching-token-list-provider';
 import { IGasPriceProvider } from '../../providers/gas-price-provider';
 import { ITokenProvider } from '../../providers/token-provider';
@@ -109,6 +109,10 @@ export declare type AlphaRouterParams = {
      * A provider for caching the best route given an amount, quoteToken, tradeType
      */
     routeCachingProvider?: IRouteCachingProvider;
+    /**
+     * A provider for getting token properties for special tokens like fee-on-transfer tokens.
+     */
+    tokenPropertiesProvider?: ITokenPropertiesProvider;
 };
 export declare class MapWithLowerCaseKey<V> extends Map<string, V> {
     set(key: string, value: V): this;
@@ -218,6 +222,29 @@ export declare type AlphaRouterConfig = {
      * 40% of input => Route 3
      */
     distributionPercent: number;
+    /**
+     * Flag to indicate whether to use the cached routes or not.
+     * By default, the cached routes will be used.
+     */
+    useCachedRoutes?: boolean;
+    /**
+     * Flag to indicate whether to write to the cached routes or not.
+     * By default, the cached routes will be written to.
+     */
+    writeToCachedRoutes?: boolean;
+    /**
+     * Flag to indicate whether to use the CachedRoutes in optimistic mode.
+     * Optimistic mode means that we will allow blocksToLive greater than 1.
+     */
+    optimisticCachedRoutes?: boolean;
+    /**
+     * Debug param that helps to see the short-term latencies improvements without impacting the main path.
+     */
+    debugRouting?: boolean;
+    /**
+     * Flag that allow us to override the cache mode.
+     */
+    overwriteCacheMode?: CacheMode;
 };
 export declare class AlphaRouter implements IRouter<AlphaRouterConfig>, ISwapToRatio<AlphaRouterConfig, SwapAndAddConfig> {
     protected chainId: ChainId;
@@ -243,7 +270,8 @@ export declare class AlphaRouter implements IRouter<AlphaRouterConfig>, ISwapToR
     protected v3Quoter: V3Quoter;
     protected mixedQuoter: MixedQuoter;
     protected routeCachingProvider?: IRouteCachingProvider;
-    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, optimismGasDataProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, }: AlphaRouterParams);
+    protected tokenPropertiesProvider?: ITokenPropertiesProvider;
+    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, optimismGasDataProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, tokenPropertiesProvider, }: AlphaRouterParams);
     routeToRatio(token0Balance: CurrencyAmount, token1Balance: CurrencyAmount, position: Position, swapAndAddConfig: SwapAndAddConfig, swapAndAddOptions?: SwapAndAddOptions, routingConfig?: Partial<AlphaRouterConfig>): Promise<SwapToRatioResponse>;
     /**
      * @inheritdoc IRouter
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.js
index 5517475..98e355c 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/alpha-router.js
@@ -16,6 +16,7 @@ const lodash_1 = __importDefault(require("lodash"));
 const node_cache_1 = __importDefault(require("node-cache"));
 const providers_2 = require("../../providers");
 const caching_token_list_provider_1 = require("../../providers/caching-token-list-provider");
+const token_fee_fetcher_1 = require("../../providers/token-fee-fetcher");
 const token_provider_1 = require("../../providers/token-provider");
 const token_validator_provider_1 = require("../../providers/token-validator-provider");
 const pool_provider_1 = require("../../providers/v2/pool-provider");
@@ -34,8 +35,10 @@ const router_1 = require("../router");
 const config_1 = require("./config");
 const best_swap_route_1 = require("./functions/best-swap-route");
 const calculate_ratio_amount_in_1 = require("./functions/calculate-ratio-amount-in");
+const get_candidate_pools_1 = require("./functions/get-candidate-pools");
 const mixed_route_heuristic_gas_model_1 = require("./gas-models/mixedRoute/mixed-route-heuristic-gas-model");
 const v2_heuristic_gas_model_1 = require("./gas-models/v2/v2-heuristic-gas-model");
+const gas_costs_1 = require("./gas-models/v3/gas-costs");
 const v3_heuristic_gas_model_1 = require("./gas-models/v3/v3-heuristic-gas-model");
 const quoters_1 = require("./quoters");
 class MapWithLowerCaseKey extends Map {
@@ -45,7 +48,7 @@ class MapWithLowerCaseKey extends Map {
 }
 exports.MapWithLowerCaseKey = MapWithLowerCaseKey;
 class AlphaRouter {
-    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, optimismGasDataProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, }) {
+    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, optimismGasDataProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, tokenPropertiesProvider, }) {
         this.chainId = chainId;
         this.provider = provider;
         this.multicall2Provider =
@@ -61,6 +64,29 @@ class AlphaRouter {
             switch (chainId) {
                 case sdk_core_1.ChainId.OPTIMISM:
                 case sdk_core_1.ChainId.OPTIMISM_GOERLI:
+                    this.onChainQuoteProvider = new providers_2.OnChainQuoteProvider(chainId, provider, this.multicall2Provider, {
+                        retries: 2,
+                        minTimeout: 100,
+                        maxTimeout: 1000,
+                    }, {
+                        multicallChunk: 110,
+                        gasLimitPerCall: 1200000,
+                        quoteMinSuccessRate: 0.1,
+                    }, {
+                        gasLimitOverride: 3000000,
+                        multicallChunk: 45,
+                    }, {
+                        gasLimitOverride: 3000000,
+                        multicallChunk: 45,
+                    }, {
+                        baseBlockOffset: -10,
+                        rollback: {
+                            enabled: true,
+                            attemptsBeforeRollback: 1,
+                            rollbackBlockOffset: -10,
+                        },
+                    });
+                    break;
                 case sdk_core_1.ChainId.BASE:
                 case sdk_core_1.ChainId.BASE_GOERLI:
                     this.onChainQuoteProvider = new providers_2.OnChainQuoteProvider(chainId, provider, this.multicall2Provider, {
@@ -68,7 +94,7 @@ class AlphaRouter {
                         minTimeout: 100,
                         maxTimeout: 1000,
                     }, {
-                        multicallChunk: 110,
+                        multicallChunk: 80,
                         gasLimitPerCall: 1200000,
                         quoteMinSuccessRate: 0.1,
                     }, {
@@ -197,6 +223,12 @@ class AlphaRouter {
         else if (this.chainId === sdk_core_1.ChainId.MAINNET) {
             this.tokenValidatorProvider = new token_validator_provider_1.TokenValidatorProvider(this.chainId, this.multicall2Provider, new providers_2.NodeJSCache(new node_cache_1.default({ stdTTL: 30000, useClones: false })));
         }
+        if (tokenPropertiesProvider) {
+            this.tokenPropertiesProvider = tokenPropertiesProvider;
+        }
+        else if (this.chainId === sdk_core_1.ChainId.MAINNET) {
+            this.tokenPropertiesProvider = new providers_2.TokenPropertiesProvider(this.chainId, this.tokenValidatorProvider, new providers_2.NodeJSCache(new node_cache_1.default({ stdTTL: 86400, useClones: false })), new token_fee_fetcher_1.OnChainTokenFeeFetcher(this.chainId, provider));
+        }
         // Initialize the Quoters.
         // Quoters are an abstraction encapsulating the business logic of fetching routes and quotes.
         this.v2Quoter = new quoters_1.V2Quoter(this.v2SubgraphProvider, this.v2PoolProvider, this.v2QuoteProvider, this.v2GasModelFactory, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);
@@ -327,7 +359,7 @@ class AlphaRouter {
      * @inheritdoc IRouter
      */
     async route(amount, quoteCurrency, tradeType, swapConfig, partialRoutingConfig = {}) {
-        var _a, _c, _d;
+        var _a, _c, _d, _e;
         const { currencyIn, currencyOut } = this.determineCurrencyInOutFromTradeType(tradeType, amount, quoteCurrency);
         const tokenIn = currencyIn.wrapped;
         const tokenOut = currencyOut.wrapped;
@@ -340,20 +372,29 @@ class AlphaRouter {
         // Get a block number to specify in all our calls. Ensures data we fetch from chain is
         // from the same block.
         const blockNumber = (_a = partialRoutingConfig.blockNumber) !== null && _a !== void 0 ? _a : this.getBlockNumberPromise();
-        const routingConfig = lodash_1.default.merge({}, (0, config_1.DEFAULT_ROUTING_CONFIG_BY_CHAIN)(this.chainId), partialRoutingConfig, { blockNumber });
+        const routingConfig = lodash_1.default.merge({
+            // These settings could be changed by the partialRoutingConfig
+            useCachedRoutes: true,
+            writeToCachedRoutes: true,
+            optimisticCachedRoutes: false,
+        }, (0, config_1.DEFAULT_ROUTING_CONFIG_BY_CHAIN)(this.chainId), partialRoutingConfig, { blockNumber });
+        if (routingConfig.debugRouting) {
+            log_1.log.warn(`Finalized routing config is ${JSON.stringify(routingConfig)}`);
+        }
         const gasPriceWei = await this.getGasPriceWei();
         const quoteToken = quoteCurrency.wrapped;
-        const [v3GasModel, mixedRouteGasModel] = await this.getGasModels(gasPriceWei, amount.currency.wrapped, quoteToken, { blockNumber });
+        const [v3GasModel, mixedRouteGasModel] = await this.getGasModels(gasPriceWei, amount.currency.wrapped, quoteToken, { blockNumber, additionalGasOverhead: (0, gas_costs_1.NATIVE_OVERHEAD)(this.chainId, amount.currency, quoteCurrency) });
         // Create a Set to sanitize the protocols input, a Set of undefined becomes an empty set,
         // Then create an Array from the values of that Set.
         const protocols = Array.from(new Set(routingConfig.protocols).values());
-        const cacheMode = await ((_c = this.routeCachingProvider) === null || _c === void 0 ? void 0 : _c.getCacheMode(this.chainId, amount, quoteToken, tradeType, protocols));
+        const cacheMode = (_c = routingConfig.overwriteCacheMode) !== null && _c !== void 0 ? _c : await ((_d = this.routeCachingProvider) === null || _d === void 0 ? void 0 : _d.getCacheMode(this.chainId, amount, quoteToken, tradeType, protocols));
         // Fetch CachedRoutes
         let cachedRoutes;
-        if (cacheMode !== providers_2.CacheMode.Darkmode) {
-            cachedRoutes = await ((_d = this.routeCachingProvider) === null || _d === void 0 ? void 0 : _d.getCachedRoute(this.chainId, amount, quoteToken, tradeType, protocols, await blockNumber));
+        if (routingConfig.useCachedRoutes && cacheMode !== providers_2.CacheMode.Darkmode) {
+            cachedRoutes = await ((_e = this.routeCachingProvider) === null || _e === void 0 ? void 0 : _e.getCachedRoute(this.chainId, amount, quoteToken, tradeType, protocols, await blockNumber, routingConfig.optimisticCachedRoutes));
         }
-        if (cacheMode && cacheMode !== providers_2.CacheMode.Darkmode && !cachedRoutes) {
+        metric_1.metric.putMetric(routingConfig.useCachedRoutes ? 'GetQuoteUsingCachedRoutes' : 'GetQuoteNotUsingCachedRoutes', 1, metric_1.MetricLoggerUnit.Count);
+        if (cacheMode && routingConfig.useCachedRoutes && cacheMode !== providers_2.CacheMode.Darkmode && !cachedRoutes) {
             metric_1.metric.putMetric(`GetCachedRoute_miss_${cacheMode}`, 1, metric_1.MetricLoggerUnit.Count);
             log_1.log.info({
                 tokenIn: tokenIn.symbol,
@@ -366,7 +407,7 @@ class AlphaRouter {
                 tradeType: this.tradeTypeStr(tradeType)
             }, `GetCachedRoute miss ${cacheMode} for ${this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType)}`);
         }
-        else if (cachedRoutes) {
+        else if (cachedRoutes && routingConfig.useCachedRoutes) {
             metric_1.metric.putMetric(`GetCachedRoute_hit_${cacheMode}`, 1, metric_1.MetricLoggerUnit.Count);
             log_1.log.info({
                 tokenIn: tokenIn.symbol,
@@ -392,8 +433,10 @@ class AlphaRouter {
             swapRouteFromChainPromise
         ]);
         let swapRouteRaw;
+        let hitsCachedRoute = false;
         if (cacheMode === providers_2.CacheMode.Livemode && swapRouteFromCache) {
             log_1.log.info(`CacheMode is ${cacheMode}, and we are using swapRoute from cache`);
+            hitsCachedRoute = true;
             swapRouteRaw = swapRouteFromCache;
         }
         else {
@@ -432,7 +475,10 @@ class AlphaRouter {
             return null;
         }
         const { quote, quoteGasAdjusted, estimatedGasUsed, routes: routeAmounts, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, } = swapRouteRaw;
-        if (this.routeCachingProvider && cacheMode !== providers_2.CacheMode.Darkmode && swapRouteFromChain) {
+        if (this.routeCachingProvider &&
+            routingConfig.writeToCachedRoutes &&
+            cacheMode !== providers_2.CacheMode.Darkmode &&
+            swapRouteFromChain) {
             // Generate the object to be cached
             const routesToCache = providers_2.CachedRoutes.fromRoutesWithValidQuotes(swapRouteFromChain.routes, this.chainId, tokenIn, tokenOut, protocols.sort(), // sort it for consistency in the order of the protocols.
             await blockNumber, tradeType, amount.toExact());
@@ -450,6 +496,9 @@ class AlphaRouter {
                     metric_1.metric.putMetric(`SetCachedRoute_failure`, 1, metric_1.MetricLoggerUnit.Count);
                 });
             }
+            else {
+                metric_1.metric.putMetric(`SetCachedRoute_unnecessary`, 1, metric_1.MetricLoggerUnit.Count);
+            }
         }
         metric_1.metric.putMetric(`QuoteFoundForChain${this.chainId}`, 1, metric_1.MetricLoggerUnit.Count);
         // Build Trade object that represents the optimal swap.
@@ -471,6 +520,7 @@ class AlphaRouter {
             trade,
             methodParameters,
             blockNumber: bignumber_1.BigNumber.from(await blockNumber),
+            hitsCachedRoute: hitsCachedRoute,
         };
         if (swapConfig &&
             swapConfig.simulate &&
@@ -519,17 +569,30 @@ class AlphaRouter {
         }
         if (v3Routes.length > 0) {
             const v3RoutesFromCache = v3Routes.map((cachedRoute) => cachedRoute.route);
-            quotePromises.push(this.v3Quoter.getQuotes(v3RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, v3GasModel));
+            metric_1.metric.putMetric('SwapRouteFromCache_V3_GetQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
+            const beforeGetQuotes = Date.now();
+            quotePromises.push(this.v3Quoter.getQuotes(v3RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, v3GasModel).then((result) => {
+                metric_1.metric.putMetric(`SwapRouteFromCache_V3_GetQuotes_Load`, Date.now() - beforeGetQuotes, metric_1.MetricLoggerUnit.Milliseconds);
+                return result;
+            }));
         }
         if (v2Routes.length > 0) {
-            quotePromises.push(
-            // When we fetch the quotes in V2, we are not calling the `onChainProvider` like on v3Routes and mixedRoutes
-            // Instead we are using the reserves in the Pool object, so we need to re-load the current reserves.
-            this.v2Quoter.getRoutesThenQuotes(v2Routes[0].tokenIn, v2Routes[0].tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, undefined, gasPriceWei));
+            const v2RoutesFromCache = v2Routes.map((cachedRoute) => cachedRoute.route);
+            metric_1.metric.putMetric('SwapRouteFromCache_V2_GetQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
+            const beforeGetQuotes = Date.now();
+            quotePromises.push(this.v2Quoter.refreshRoutesThenGetQuotes(cachedRoutes.tokenIn, cachedRoutes.tokenOut, v2RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, gasPriceWei).then((result) => {
+                metric_1.metric.putMetric(`SwapRouteFromCache_V2_GetQuotes_Load`, Date.now() - beforeGetQuotes, metric_1.MetricLoggerUnit.Milliseconds);
+                return result;
+            }));
         }
         if (mixedRoutes.length > 0) {
             const mixedRoutesFromCache = mixedRoutes.map((cachedRoute) => cachedRoute.route);
-            quotePromises.push(this.mixedQuoter.getQuotes(mixedRoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, mixedRouteGasModel));
+            metric_1.metric.putMetric('SwapRouteFromCache_Mixed_GetQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
+            const beforeGetQuotes = Date.now();
+            quotePromises.push(this.mixedQuoter.getQuotes(mixedRoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, mixedRouteGasModel).then((result) => {
+                metric_1.metric.putMetric(`SwapRouteFromCache_Mixed_GetQuotes_Load`, Date.now() - beforeGetQuotes, metric_1.MetricLoggerUnit.Milliseconds);
+                return result;
+            }));
         }
         const getQuotesResults = await Promise.all(quotePromises);
         const allRoutesWithValidQuotes = lodash_1.default.flatMap(getQuotesResults, (quoteResult) => quoteResult.routesWithValidQuotes);
@@ -547,23 +610,79 @@ class AlphaRouter {
         const shouldQueryMixedProtocol = protocols.includes(router_sdk_1.Protocol.MIXED) || (noProtocolsSpecified && v2SupportedInChain);
         const mixedProtocolAllowed = [sdk_core_1.ChainId.MAINNET, sdk_core_1.ChainId.GOERLI].includes(this.chainId) &&
             tradeType === sdk_core_1.TradeType.EXACT_INPUT;
+        const beforeGetCandidates = Date.now();
+        let v3CandidatePoolsPromise = Promise.resolve(undefined);
+        if (v3ProtocolSpecified ||
+            noProtocolsSpecified ||
+            (shouldQueryMixedProtocol && mixedProtocolAllowed)) {
+            v3CandidatePoolsPromise = (0, get_candidate_pools_1.getV3CandidatePools)({
+                tokenIn,
+                tokenOut,
+                tokenProvider: this.tokenProvider,
+                blockedTokenListProvider: this.blockedTokenListProvider,
+                poolProvider: this.v3PoolProvider,
+                routeType: tradeType,
+                subgraphProvider: this.v3SubgraphProvider,
+                routingConfig,
+                chainId: this.chainId,
+            }).then((candidatePools) => {
+                metric_1.metric.putMetric('GetV3CandidatePools', Date.now() - beforeGetCandidates, metric_1.MetricLoggerUnit.Milliseconds);
+                return candidatePools;
+            });
+        }
+        let v2CandidatePoolsPromise = Promise.resolve(undefined);
+        if ((v2SupportedInChain && (v2ProtocolSpecified || noProtocolsSpecified)) ||
+            (shouldQueryMixedProtocol && mixedProtocolAllowed)) {
+            // Fetch all the pools that we will consider routing via. There are thousands
+            // of pools, so we filter them to a set of candidate pools that we expect will
+            // result in good prices.
+            v2CandidatePoolsPromise = (0, get_candidate_pools_1.getV2CandidatePools)({
+                tokenIn,
+                tokenOut,
+                tokenProvider: this.tokenProvider,
+                blockedTokenListProvider: this.blockedTokenListProvider,
+                poolProvider: this.v2PoolProvider,
+                routeType: tradeType,
+                subgraphProvider: this.v2SubgraphProvider,
+                routingConfig,
+                chainId: this.chainId,
+            }).then((candidatePools) => {
+                metric_1.metric.putMetric('GetV2CandidatePools', Date.now() - beforeGetCandidates, metric_1.MetricLoggerUnit.Milliseconds);
+                return candidatePools;
+            });
+        }
         const quotePromises = [];
         // Maybe Quote V3 - if V3 is specified, or no protocol is specified
         if (v3ProtocolSpecified || noProtocolsSpecified) {
             log_1.log.info({ protocols, tradeType }, 'Routing across V3');
-            quotePromises.push(this.v3Quoter.getRoutesThenQuotes(tokenIn, tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, v3GasModel));
+            metric_1.metric.putMetric('SwapRouteFromChain_V3_GetRoutesThenQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
+            const beforeGetRoutesThenQuotes = Date.now();
+            quotePromises.push(v3CandidatePoolsPromise.then((v3CandidatePools) => this.v3Quoter.getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, v3CandidatePools, tradeType, routingConfig, v3GasModel).then((result) => {
+                metric_1.metric.putMetric(`SwapRouteFromChain_V3_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, metric_1.MetricLoggerUnit.Milliseconds);
+                return result;
+            })));
         }
         // Maybe Quote V2 - if V2 is specified, or no protocol is specified AND v2 is supported in this chain
         if (v2SupportedInChain && (v2ProtocolSpecified || noProtocolsSpecified)) {
             log_1.log.info({ protocols, tradeType }, 'Routing across V2');
-            quotePromises.push(this.v2Quoter.getRoutesThenQuotes(tokenIn, tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, undefined, gasPriceWei));
+            metric_1.metric.putMetric('SwapRouteFromChain_V2_GetRoutesThenQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
+            const beforeGetRoutesThenQuotes = Date.now();
+            quotePromises.push(v2CandidatePoolsPromise.then((v2CandidatePools) => this.v2Quoter.getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, v2CandidatePools, tradeType, routingConfig, undefined, gasPriceWei).then((result) => {
+                metric_1.metric.putMetric(`SwapRouteFromChain_V2_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, metric_1.MetricLoggerUnit.Milliseconds);
+                return result;
+            })));
         }
         // Maybe Quote mixed routes
         // if MixedProtocol is specified or no protocol is specified and v2 is supported AND tradeType is ExactIn
         // AND is Mainnet or Gorli
         if (shouldQueryMixedProtocol && mixedProtocolAllowed) {
             log_1.log.info({ protocols, tradeType }, 'Routing across MixedRoutes');
-            quotePromises.push(this.mixedQuoter.getRoutesThenQuotes(tokenIn, tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, mixedRouteGasModel));
+            metric_1.metric.putMetric('SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Request', 1, metric_1.MetricLoggerUnit.Count);
+            const beforeGetRoutesThenQuotes = Date.now();
+            quotePromises.push(Promise.all([v3CandidatePoolsPromise, v2CandidatePoolsPromise]).then(([v3CandidatePools, v2CandidatePools]) => this.mixedQuoter.getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, [v3CandidatePools, v2CandidatePools], tradeType, routingConfig, mixedRouteGasModel).then((result) => {
+                metric_1.metric.putMetric(`SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, metric_1.MetricLoggerUnit.Milliseconds);
+                return result;
+            })));
         }
         const getQuotesResults = await Promise.all(quotePromises);
         const allRoutesWithValidQuotes = [];
@@ -830,4 +949,4 @@ class AlphaRouter {
     }
 }
 exports.AlphaRouter = AlphaRouter;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/compute-all-routes.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/compute-all-routes.js
index f17badc..f26cd88 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/compute-all-routes.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/compute-all-routes.js
@@ -33,7 +33,7 @@ function computeAllRoutes(tokenIn, tokenOut, buildRoute, pools, maxHops) {
     var _a;
     const poolsUsed = Array(pools.length).fill(false);
     const routes = [];
-    const computeRoutes = (tokenIn, tokenOut, currentRoute, poolsUsed, _previousTokenOut) => {
+    const computeRoutes = (tokenIn, tokenOut, currentRoute, poolsUsed, tokensVisited, _previousTokenOut) => {
         if (currentRoute.length > maxHops) {
             return;
         }
@@ -54,14 +54,19 @@ function computeAllRoutes(tokenIn, tokenOut, buildRoute, pools, maxHops) {
             const currentTokenOut = curPool.token0.equals(previousTokenOut)
                 ? curPool.token1
                 : curPool.token0;
+            if (tokensVisited.has(currentTokenOut.address.toLowerCase())) {
+                continue;
+            }
+            tokensVisited.add(currentTokenOut.address.toLowerCase());
             currentRoute.push(curPool);
             poolsUsed[i] = true;
-            computeRoutes(tokenIn, tokenOut, currentRoute, poolsUsed, currentTokenOut);
+            computeRoutes(tokenIn, tokenOut, currentRoute, poolsUsed, tokensVisited, currentTokenOut);
             poolsUsed[i] = false;
             currentRoute.pop();
+            tokensVisited.delete(currentTokenOut.address.toLowerCase());
         }
     };
-    computeRoutes(tokenIn, tokenOut, [], poolsUsed);
+    computeRoutes(tokenIn, tokenOut, [], poolsUsed, new Set([tokenIn.address.toLowerCase()]));
     log_1.log.info({
         routes: routes.map(routes_1.routeToString),
         pools: pools.map(routes_1.poolToString),
@@ -69,4 +74,4 @@ function computeAllRoutes(tokenIn, tokenOut, buildRoute, pools, maxHops) {
     return routes;
 }
 exports.computeAllRoutes = computeAllRoutes;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZS1hbGwtcm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2Z1bmN0aW9ucy9jb21wdXRlLWFsbC1yb3V0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsNENBQXVDO0FBQ3ZDLDRDQUF1QztBQUV2QywyQ0FBd0M7QUFDeEMsaURBQW1FO0FBQ25FLHlDQUE0RDtBQUU1RCxTQUFnQixrQkFBa0IsQ0FDaEMsT0FBYyxFQUNkLFFBQWUsRUFDZixLQUFhLEVBQ2IsT0FBZTtJQUVmLE9BQU8sZ0JBQWdCLENBQ3JCLE9BQU8sRUFDUCxRQUFRLEVBQ1IsQ0FBQyxLQUFhLEVBQUUsT0FBYyxFQUFFLFFBQWUsRUFBRSxFQUFFO1FBQ2pELE9BQU8sSUFBSSxnQkFBTyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDL0MsQ0FBQyxFQUNELEtBQUssRUFDTCxPQUFPLENBQ1IsQ0FBQztBQUNKLENBQUM7QUFmRCxnREFlQztBQUVELFNBQWdCLGtCQUFrQixDQUNoQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQWEsRUFDYixPQUFlO0lBRWYsT0FBTyxnQkFBZ0IsQ0FDckIsT0FBTyxFQUNQLFFBQVEsRUFDUixDQUFDLEtBQWEsRUFBRSxPQUFjLEVBQUUsUUFBZSxFQUFFLEVBQUU7UUFDakQsT0FBTyxJQUFJLGdCQUFPLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUMvQyxDQUFDLEVBQ0QsS0FBSyxFQUNMLE9BQU8sQ0FDUixDQUFDO0FBQ0osQ0FBQztBQWZELGdEQWVDO0FBRUQsU0FBZ0IscUJBQXFCLENBQ25DLE9BQWMsRUFDZCxRQUFlLEVBQ2YsS0FBc0IsRUFDdEIsT0FBZTtJQUVmLE1BQU0sU0FBUyxHQUFHLGdCQUFnQixDQUNoQyxPQUFPLEVBQ1AsUUFBUSxFQUNSLENBQUMsS0FBc0IsRUFBRSxP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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZS1hbGwtcm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2Z1bmN0aW9ucy9jb21wdXRlLWFsbC1yb3V0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsNENBQXVDO0FBQ3ZDLDRDQUF1QztBQUV2QywyQ0FBd0M7QUFDeEMsaURBQW1FO0FBQ25FLHlDQUE0RDtBQUU1RCxTQUFnQixrQkFBa0IsQ0FDaEMsT0FBYyxFQUNkLFFBQWUsRUFDZixLQUFhLEVBQ2IsT0FBZTtJQUVmLE9BQU8sZ0JBQWdCLENBQ3JCLE9BQU8sRUFDUCxRQUFRLEVBQ1IsQ0FBQyxLQUFhLEVBQUUsT0FBYyxFQUFFLFFBQWUsRUFBRSxFQUFFO1FBQ2pELE9BQU8sSUFBSSxnQkFBTyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDL0MsQ0FBQyxFQUNELEtBQUssRUFDTCxPQUFPLENBQ1IsQ0FBQztBQUNKLENBQUM7QUFmRCxnREFlQztBQUVELFNBQWdCLGtCQUFrQixDQUNoQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQWEsRUFDYixPQUFlO0lBRWYsT0FBTyxnQkFBZ0IsQ0FDckIsT0FBTyxFQUNQLFFBQVEsRUFDUixDQUFDLEtBQWEsRUFBRSxPQUFjLEVBQUUsUUFBZSxFQUFFLEVBQUU7UUFDakQsT0FBTyxJQUFJLGdCQUFPLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUMvQyxDQUFDLEVBQ0QsS0FBSyxFQUNMLE9BQU8sQ0FDUixDQUFDO0FBQ0osQ0FBQztBQWZELGdEQWVDO0FBRUQsU0FBZ0IscUJBQXFCLENBQ25DLE9BQWMsRUFDZCxRQUFlLEVBQ2YsS0FBc0IsRUFDdEIsT0FBZTtJQUVmLE1BQU0sU0FBUyxHQUFHLGdCQUFnQixDQUNoQyxPQUFPLEVBQ1AsUUFBUSxFQUNSLENBQUMsS0FBc0IsRUFBRSxP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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.d.ts
index a3f760d..07db71c 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.d.ts
@@ -47,31 +47,31 @@ export declare type V2GetCandidatePoolsParams = {
     chainId: ChainId;
 };
 export declare type MixedRouteGetCandidatePoolsParams = {
-    tokenIn: Token;
-    tokenOut: Token;
-    routeType: TradeType;
+    v3CandidatePools: V3CandidatePools;
+    v2CandidatePools: V2CandidatePools;
     routingConfig: AlphaRouterConfig;
-    v2subgraphProvider: IV2SubgraphProvider;
-    v3subgraphProvider: IV3SubgraphProvider;
     tokenProvider: ITokenProvider;
     v2poolProvider: IV2PoolProvider;
     v3poolProvider: IV3PoolProvider;
     blockedTokenListProvider?: ITokenListProvider;
     chainId: ChainId;
 };
-export declare function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }: V3GetCandidatePoolsParams): Promise<{
+export declare type V3CandidatePools = {
     poolAccessor: V3PoolAccessor;
     candidatePools: CandidatePoolsBySelectionCriteria;
     subgraphPools: V3SubgraphPool[];
-}>;
-export declare function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }: V2GetCandidatePoolsParams): Promise<{
+};
+export declare function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }: V3GetCandidatePoolsParams): Promise<V3CandidatePools>;
+export declare type V2CandidatePools = {
     poolAccessor: V2PoolAccessor;
     candidatePools: CandidatePoolsBySelectionCriteria;
     subgraphPools: V2SubgraphPool[];
-}>;
-export declare function getMixedRouteCandidatePools({ tokenIn, tokenOut, routeType, routingConfig, v3subgraphProvider, v2subgraphProvider, tokenProvider, v3poolProvider, v2poolProvider, blockedTokenListProvider, chainId, }: MixedRouteGetCandidatePoolsParams): Promise<{
+};
+export declare function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }: V2GetCandidatePoolsParams): Promise<V2CandidatePools>;
+export declare type MixedCandidatePools = {
     V2poolAccessor: V2PoolAccessor;
     V3poolAccessor: V3PoolAccessor;
     candidatePools: CandidatePoolsBySelectionCriteria;
     subgraphPools: (V2SubgraphPool | V3SubgraphPool)[];
-}>;
+};
+export declare function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools, routingConfig, tokenProvider, v3poolProvider, v2poolProvider, }: MixedRouteGetCandidatePoolsParams): Promise<MixedCandidatePools>;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.js
index 3bace7d..8b78be9 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/functions/get-candidate-pools.js
@@ -72,37 +72,52 @@ const baseTokensByChain = {
     [sdk_core_1.ChainId.BASE]: [
         token_provider_1.USDC_BASE,
     ],
+    [sdk_core_1.ChainId.TENET]: [
+        token_provider_1.USDT_TENET
+    ]
 };
+class SubcategorySelectionPools {
+    constructor(pools, poolsNeeded) {
+        this.pools = pools;
+        this.poolsNeeded = poolsNeeded;
+    }
+    hasEnoughPools() {
+        return this.pools.length >= this.poolsNeeded;
+    }
+}
 async function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }) {
     var _a, _b, _c, _d, _e;
     const { blockNumber, v3PoolSelection: { topN, topNDirectSwaps, topNTokenInOut, topNSecondHop, topNSecondHopForTokenAddress, topNWithEachBaseToken, topNWithBaseToken, }, } = routingConfig;
     const tokenInAddress = tokenIn.address.toLowerCase();
     const tokenOutAddress = tokenOut.address.toLowerCase();
     const beforeSubgraphPools = Date.now();
-    const allPoolsRaw = await subgraphProvider.getPools(tokenIn, tokenOut, {
+    const allPools = await subgraphProvider.getPools(tokenIn, tokenOut, {
         blockNumber,
     });
-    log_1.log.info({ samplePools: allPoolsRaw.slice(0, 3) }, 'Got all pools from V3 subgraph provider');
-    const allPools = lodash_1.default.map(allPoolsRaw, (pool) => {
-        return Object.assign(Object.assign({}, pool), { token0: Object.assign(Object.assign({}, pool.token0), { id: pool.token0.id.toLowerCase() }), token1: Object.assign(Object.assign({}, pool.token1), { id: pool.token1.id.toLowerCase() }) });
-    });
+    log_1.log.info({ samplePools: allPools.slice(0, 3) }, 'Got all pools from V3 subgraph provider');
+    // Although this is less of an optimization than the V2 equivalent,
+    // save some time copying objects by mutating the underlying pool directly.
+    for (const pool of allPools) {
+        pool.token0.id = pool.token0.id.toLowerCase();
+        pool.token1.id = pool.token1.id.toLowerCase();
+    }
     metric_1.metric.putMetric('V3SubgraphPoolsLoad', Date.now() - beforeSubgraphPools, metric_1.MetricLoggerUnit.Milliseconds);
+    const beforePoolsFiltered = Date.now();
     // Only consider pools where neither tokens are in the blocked token list.
     let filteredPools = allPools;
     if (blockedTokenListProvider) {
         filteredPools = [];
         for (const pool of allPools) {
-            const token0InBlocklist = await blockedTokenListProvider.getTokenByAddress(pool.token0.id);
-            const token1InBlocklist = await blockedTokenListProvider.getTokenByAddress(pool.token1.id);
+            const token0InBlocklist = await blockedTokenListProvider.hasTokenByAddress(pool.token0.id);
+            const token1InBlocklist = await blockedTokenListProvider.hasTokenByAddress(pool.token1.id);
             if (token0InBlocklist || token1InBlocklist) {
                 continue;
             }
             filteredPools.push(pool);
         }
     }
-    const subgraphPoolsSorted = (0, lodash_1.default)(filteredPools)
-        .sortBy((tokenListPool) => -tokenListPool.tvlUSD)
-        .value();
+    // Sort by tvlUSD in descending order
+    const subgraphPoolsSorted = filteredPools.sort((a, b) => b.tvlUSD - a.tvlUSD);
     log_1.log.info(`After filtering blocked tokens went from ${allPools.length} to ${subgraphPoolsSorted.length}.`);
     const poolAddressesSoFar = new Set();
     const addToAddressSet = (pools) => {
@@ -163,7 +178,7 @@ async function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig
             const { token0, token1, poolAddress } = poolProvider.getPoolAddress(tokenIn, tokenOut, feeAmount);
             return {
                 id: poolAddress,
-                feeTier: (0, amounts_1.unparseFeeAmount)(feeAmount),
+                feeTier: (0, util_1.unparseFeeAmount)(feeAmount),
                 liquidity: '10000',
                 token0: {
                     id: token0.address,
@@ -177,7 +192,7 @@ async function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig
         });
     }
     addToAddressSet(top2DirectSwapPool);
-    const wrappedNativeAddress = (_b = util_1.WRAPPED_NATIVE_CURRENCY[chainId]) === null || _b === void 0 ? void 0 : _b.address;
+    const wrappedNativeAddress = (_b = util_1.WRAPPED_NATIVE_CURRENCY[chainId]) === null || _b === void 0 ? void 0 : _b.address.toLowerCase();
     // Main reason we need this is for gas estimates, only needed if token out is not native.
     // We don't check the seen address set because if we've already added pools for getting native quotes
     // theres no need to add more.
@@ -330,6 +345,7 @@ async function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig
         return [tokenA, tokenB, fee];
     });
     const tokenPairs = lodash_1.default.compact(tokenPairsRaw);
+    metric_1.metric.putMetric('V3PoolsFilterLoad', Date.now() - beforePoolsFiltered, metric_1.MetricLoggerUnit.Milliseconds);
     const beforePoolsLoad = Date.now();
     const poolAccessor = await poolProvider.getPools(tokenPairs, {
         blockNumber,
@@ -354,81 +370,31 @@ async function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig
 exports.getV3CandidatePools = getV3CandidatePools;
 async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }) {
     var _a;
-    const { blockNumber, v2PoolSelection: { topN, topNDirectSwaps, topNTokenInOut, topNSecondHop, topNWithEachBaseToken, topNWithBaseToken, }, } = routingConfig;
+    const { blockNumber, v2PoolSelection: { topN, topNDirectSwaps, topNTokenInOut, topNSecondHop, topNWithEachBaseToken, topNWithBaseToken, }, debugRouting, } = routingConfig;
     const tokenInAddress = tokenIn.address.toLowerCase();
     const tokenOutAddress = tokenOut.address.toLowerCase();
     const beforeSubgraphPools = Date.now();
     const allPoolsRaw = await subgraphProvider.getPools(tokenIn, tokenOut, {
         blockNumber,
     });
-    const allPools = lodash_1.default.map(allPoolsRaw, (pool) => {
-        return Object.assign(Object.assign({}, pool), { token0: Object.assign(Object.assign({}, pool.token0), { id: pool.token0.id.toLowerCase() }), token1: Object.assign(Object.assign({}, pool.token1), { id: pool.token1.id.toLowerCase() }) });
-    });
-    metric_1.metric.putMetric('V2SubgraphPoolsLoad', Date.now() - beforeSubgraphPools, metric_1.MetricLoggerUnit.Milliseconds);
-    // Only consider pools where neither tokens are in the blocked token list.
-    let filteredPools = allPools;
-    if (blockedTokenListProvider) {
-        filteredPools = [];
-        for (const pool of allPools) {
-            const token0InBlocklist = await blockedTokenListProvider.getTokenByAddress(pool.token0.id);
-            const token1InBlocklist = await blockedTokenListProvider.getTokenByAddress(pool.token1.id);
-            if (token0InBlocklist || token1InBlocklist) {
-                continue;
-            }
-            filteredPools.push(pool);
-        }
+    // With tens of thousands of V2 pools, operations that copy pools become costly.
+    // Mutate the pool directly rather than creating a new pool / token to optimmize for speed.
+    for (const pool of allPoolsRaw) {
+        pool.token0.id = pool.token0.id.toLowerCase();
+        pool.token1.id = pool.token1.id.toLowerCase();
     }
-    const subgraphPoolsSorted = (0, lodash_1.default)(filteredPools)
-        .sortBy((tokenListPool) => -tokenListPool.reserve)
-        .value();
-    log_1.log.info(`After filtering blocked tokens went from ${allPools.length} to ${subgraphPoolsSorted.length}.`);
+    metric_1.metric.putMetric('V2SubgraphPoolsLoad', Date.now() - beforeSubgraphPools, metric_1.MetricLoggerUnit.Milliseconds);
+    const beforePoolsFiltered = Date.now();
+    // Sort by pool reserve in descending order.
+    const subgraphPoolsSorted = allPoolsRaw.sort((a, b) => b.reserve - a.reserve);
     const poolAddressesSoFar = new Set();
-    const addToAddressSet = (pools) => {
-        (0, lodash_1.default)(pools)
-            .map((pool) => pool.id)
-            .forEach((poolAddress) => poolAddressesSoFar.add(poolAddress));
-    };
-    const baseTokens = (_a = baseTokensByChain[chainId]) !== null && _a !== void 0 ? _a : [];
-    const topByBaseWithTokenIn = (0, lodash_1.default)(baseTokens)
-        .flatMap((token) => {
-        return (0, lodash_1.default)(subgraphPoolsSorted)
-            .filter((subgraphPool) => {
-            const tokenAddress = token.address.toLowerCase();
-            return ((subgraphPool.token0.id == tokenAddress &&
-                subgraphPool.token1.id == tokenInAddress) ||
-                (subgraphPool.token1.id == tokenAddress &&
-                    subgraphPool.token0.id == tokenInAddress));
-        })
-            .sortBy((tokenListPool) => -tokenListPool.reserve)
-            .slice(0, topNWithEachBaseToken)
-            .value();
-    })
-        .sortBy((tokenListPool) => -tokenListPool.reserve)
-        .slice(0, topNWithBaseToken)
-        .value();
-    const topByBaseWithTokenOut = (0, lodash_1.default)(baseTokens)
-        .flatMap((token) => {
-        return (0, lodash_1.default)(subgraphPoolsSorted)
-            .filter((subgraphPool) => {
-            const tokenAddress = token.address.toLowerCase();
-            return ((subgraphPool.token0.id == tokenAddress &&
-                subgraphPool.token1.id == tokenOutAddress) ||
-                (subgraphPool.token1.id == tokenAddress &&
-                    subgraphPool.token0.id == tokenOutAddress));
-        })
-            .sortBy((tokenListPool) => -tokenListPool.reserve)
-            .slice(0, topNWithEachBaseToken)
-            .value();
-    })
-        .sortBy((tokenListPool) => -tokenListPool.reserve)
-        .slice(0, topNWithBaseToken)
-        .value();
     // Always add the direct swap pool into the mix regardless of if it exists in the subgraph pool list.
     // Ensures that new pools can be swapped on immediately, and that if a pool was filtered out of the
     // subgraph query for some reason (e.g. trackedReserveETH was 0), then we still consider it.
     let topByDirectSwapPool = [];
-    if (topNDirectSwaps != 0) {
+    if (topNDirectSwaps > 0) {
         const { token0, token1, poolAddress } = poolProvider.getPoolAddress(tokenIn, tokenOut);
+        poolAddressesSoFar.add(poolAddress.toLowerCase());
         topByDirectSwapPool = [
             {
                 id: poolAddress,
@@ -444,98 +410,244 @@ async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig
             },
         ];
     }
-    addToAddressSet(topByDirectSwapPool);
-    const wethAddress = util_1.WRAPPED_NATIVE_CURRENCY[chainId].address;
-    // Main reason we need this is for gas estimates, only needed if token out is not ETH.
-    // We don't check the seen address set because if we've already added pools for getting ETH quotes
-    // theres no need to add more.
-    // Note: we do not need to check other native currencies for the V2 Protocol
-    let topByEthQuoteTokenPool = [];
-    if (tokenOut.symbol != 'WETH' &&
-        tokenOut.symbol != 'WETH9' &&
-        tokenOut.symbol != 'ETH') {
-        topByEthQuoteTokenPool = (0, lodash_1.default)(subgraphPoolsSorted)
-            .filter((subgraphPool) => {
-            if (routeType == sdk_core_1.TradeType.EXACT_INPUT) {
-                return ((subgraphPool.token0.id == wethAddress &&
-                    subgraphPool.token1.id == tokenOutAddress) ||
-                    (subgraphPool.token1.id == wethAddress &&
-                        subgraphPool.token0.id == tokenOutAddress));
+    const wethAddress = util_1.WRAPPED_NATIVE_CURRENCY[chainId].address.toLowerCase();
+    const topByBaseWithTokenInMap = new Map();
+    const topByBaseWithTokenOutMap = new Map();
+    const baseTokens = (_a = baseTokensByChain[chainId]) !== null && _a !== void 0 ? _a : [];
+    const baseTokensAddresses = new Set();
+    baseTokens.forEach((token) => {
+        const baseTokenAddr = token.address.toLowerCase();
+        baseTokensAddresses.add(baseTokenAddr);
+        topByBaseWithTokenInMap.set(baseTokenAddr, new SubcategorySelectionPools([], topNWithEachBaseToken));
+        topByBaseWithTokenOutMap.set(baseTokenAddr, new SubcategorySelectionPools([], topNWithEachBaseToken));
+    });
+    let topByBaseWithTokenInPoolsFound = 0;
+    let topByBaseWithTokenOutPoolsFound = 0;
+    // Main reason we need this is for gas estimates
+    // There can ever only be 1 Token/ETH pool, so we will only look for 1
+    let topNEthQuoteToken = 1;
+    // but, we only need it if token out is not ETH.
+    if (tokenOut.symbol == 'WETH' || tokenOut.symbol == 'WETH9' || tokenOut.symbol == 'ETH') {
+        // if it's eth we change the topN to 0, so we can break early from the loop.
+        topNEthQuoteToken = 0;
+    }
+    const topByEthQuoteTokenPool = [];
+    const topByTVLUsingTokenIn = [];
+    const topByTVLUsingTokenOut = [];
+    const topByTVL = [];
+    // Used to track how many iterations we do in the first loop
+    let loopsInFirstIteration = 0;
+    // Filtering step for up to first hop
+    // The pools are pre-sorted, so we can just iterate through them and fill our heuristics.
+    for (const subgraphPool of subgraphPoolsSorted) {
+        loopsInFirstIteration += 1;
+        // Check if we have satisfied all the heuristics, if so, we can stop.
+        if (topByBaseWithTokenInPoolsFound >= topNWithBaseToken &&
+            topByBaseWithTokenOutPoolsFound >= topNWithBaseToken &&
+            topByEthQuoteTokenPool.length >= topNEthQuoteToken &&
+            topByTVL.length >= topN &&
+            topByTVLUsingTokenIn.length >= topNTokenInOut &&
+            topByTVLUsingTokenOut.length >= topNTokenInOut) {
+            // We have satisfied all the heuristics, so we can stop.
+            break;
+        }
+        if (poolAddressesSoFar.has(subgraphPool.id)) {
+            // We've already added this pool, so skip it.
+            continue;
+        }
+        // Only consider pools where neither tokens are in the blocked token list.
+        if (blockedTokenListProvider) {
+            const [token0InBlocklist, token1InBlocklist] = await Promise.all([
+                blockedTokenListProvider.hasTokenByAddress(subgraphPool.token0.id),
+                blockedTokenListProvider.hasTokenByAddress(subgraphPool.token1.id)
+            ]);
+            if (token0InBlocklist || token1InBlocklist) {
+                continue;
             }
-            else {
-                return ((subgraphPool.token0.id == wethAddress &&
-                    subgraphPool.token1.id == tokenInAddress) ||
-                    (subgraphPool.token1.id == wethAddress &&
-                        subgraphPool.token0.id == tokenInAddress));
+        }
+        const tokenInToken0TopByBase = topByBaseWithTokenInMap.get(subgraphPool.token0.id);
+        if (topByBaseWithTokenInPoolsFound < topNWithBaseToken &&
+            tokenInToken0TopByBase &&
+            subgraphPool.token0.id != tokenOutAddress &&
+            subgraphPool.token1.id == tokenInAddress) {
+            topByBaseWithTokenInPoolsFound += 1;
+            poolAddressesSoFar.add(subgraphPool.id);
+            if (topByTVLUsingTokenIn.length < topNTokenInOut) {
+                topByTVLUsingTokenIn.push(subgraphPool);
             }
-        })
-            .slice(0, 1)
-            .value();
+            if (routeType === sdk_core_1.TradeType.EXACT_OUTPUT && subgraphPool.token0.id == wethAddress) {
+                topByEthQuoteTokenPool.push(subgraphPool);
+            }
+            tokenInToken0TopByBase.pools.push(subgraphPool);
+            continue;
+        }
+        const tokenInToken1TopByBase = topByBaseWithTokenInMap.get(subgraphPool.token1.id);
+        if (topByBaseWithTokenInPoolsFound < topNWithBaseToken &&
+            tokenInToken1TopByBase &&
+            subgraphPool.token0.id == tokenInAddress &&
+            subgraphPool.token1.id != tokenOutAddress) {
+            topByBaseWithTokenInPoolsFound += 1;
+            poolAddressesSoFar.add(subgraphPool.id);
+            if (topByTVLUsingTokenIn.length < topNTokenInOut) {
+                topByTVLUsingTokenIn.push(subgraphPool);
+            }
+            if (routeType === sdk_core_1.TradeType.EXACT_OUTPUT && subgraphPool.token1.id == wethAddress) {
+                topByEthQuoteTokenPool.push(subgraphPool);
+            }
+            tokenInToken1TopByBase.pools.push(subgraphPool);
+            continue;
+        }
+        const tokenOutToken0TopByBase = topByBaseWithTokenOutMap.get(subgraphPool.token0.id);
+        if (topByBaseWithTokenOutPoolsFound < topNWithBaseToken &&
+            tokenOutToken0TopByBase &&
+            subgraphPool.token0.id != tokenInAddress &&
+            subgraphPool.token1.id == tokenOutAddress) {
+            topByBaseWithTokenOutPoolsFound += 1;
+            poolAddressesSoFar.add(subgraphPool.id);
+            if (topByTVLUsingTokenOut.length < topNTokenInOut) {
+                topByTVLUsingTokenOut.push(subgraphPool);
+            }
+            if (routeType === sdk_core_1.TradeType.EXACT_INPUT && subgraphPool.token0.id == wethAddress) {
+                topByEthQuoteTokenPool.push(subgraphPool);
+            }
+            tokenOutToken0TopByBase.pools.push(subgraphPool);
+            continue;
+        }
+        const tokenOutToken1TopByBase = topByBaseWithTokenOutMap.get(subgraphPool.token1.id);
+        if (topByBaseWithTokenOutPoolsFound < topNWithBaseToken &&
+            tokenOutToken1TopByBase &&
+            subgraphPool.token0.id == tokenOutAddress &&
+            subgraphPool.token1.id != tokenInAddress) {
+            topByBaseWithTokenOutPoolsFound += 1;
+            poolAddressesSoFar.add(subgraphPool.id);
+            if (topByTVLUsingTokenOut.length < topNTokenInOut) {
+                topByTVLUsingTokenOut.push(subgraphPool);
+            }
+            if (routeType === sdk_core_1.TradeType.EXACT_INPUT && subgraphPool.token1.id == wethAddress) {
+                topByEthQuoteTokenPool.push(subgraphPool);
+            }
+            tokenOutToken1TopByBase.pools.push(subgraphPool);
+            continue;
+        }
+        // Note: we do not need to check other native currencies for the V2 Protocol
+        if (topByEthQuoteTokenPool.length < topNEthQuoteToken &&
+            (routeType === sdk_core_1.TradeType.EXACT_INPUT && ((subgraphPool.token0.id == wethAddress && subgraphPool.token1.id == tokenOutAddress) ||
+                (subgraphPool.token1.id == wethAddress && subgraphPool.token0.id == tokenOutAddress)) ||
+                routeType === sdk_core_1.TradeType.EXACT_OUTPUT && ((subgraphPool.token0.id == wethAddress && subgraphPool.token1.id == tokenInAddress) ||
+                    (subgraphPool.token1.id == wethAddress && subgraphPool.token0.id == tokenInAddress)))) {
+            poolAddressesSoFar.add(subgraphPool.id);
+            topByEthQuoteTokenPool.push(subgraphPool);
+            continue;
+        }
+        if (topByTVL.length < topN) {
+            poolAddressesSoFar.add(subgraphPool.id);
+            topByTVL.push(subgraphPool);
+            continue;
+        }
+        if (topByTVLUsingTokenIn.length < topNTokenInOut &&
+            (subgraphPool.token0.id == tokenInAddress || subgraphPool.token1.id == tokenInAddress)) {
+            poolAddressesSoFar.add(subgraphPool.id);
+            topByTVLUsingTokenIn.push(subgraphPool);
+            continue;
+        }
+        if (topByTVLUsingTokenOut.length < topNTokenInOut &&
+            (subgraphPool.token0.id == tokenOutAddress || subgraphPool.token1.id == tokenOutAddress)) {
+            poolAddressesSoFar.add(subgraphPool.id);
+            topByTVLUsingTokenOut.push(subgraphPool);
+            continue;
+        }
+    }
+    metric_1.metric.putMetric('V2SubgraphLoopsInFirstIteration', loopsInFirstIteration, metric_1.MetricLoggerUnit.Count);
+    const topByBaseWithTokenIn = [];
+    for (const topByBaseWithTokenInSelection of topByBaseWithTokenInMap.values()) {
+        topByBaseWithTokenIn.push(...topByBaseWithTokenInSelection.pools);
+    }
+    const topByBaseWithTokenOut = [];
+    for (const topByBaseWithTokenOutSelection of topByBaseWithTokenOutMap.values()) {
+        topByBaseWithTokenOut.push(...topByBaseWithTokenOutSelection.pools);
+    }
+    // Filtering step for second hops
+    const topByTVLUsingTokenInSecondHopsMap = new Map();
+    const topByTVLUsingTokenOutSecondHopsMap = new Map();
+    const tokenInSecondHopAddresses = topByTVLUsingTokenIn.map((pool) => tokenInAddress == pool.token0.id ? pool.token1.id : pool.token0.id);
+    const tokenOutSecondHopAddresses = topByTVLUsingTokenOut.map((pool) => tokenOutAddress == pool.token0.id ? pool.token1.id : pool.token0.id);
+    for (const secondHopId of tokenInSecondHopAddresses) {
+        topByTVLUsingTokenInSecondHopsMap.set(secondHopId, new SubcategorySelectionPools([], topNSecondHop));
+    }
+    for (const secondHopId of tokenOutSecondHopAddresses) {
+        topByTVLUsingTokenOutSecondHopsMap.set(secondHopId, new SubcategorySelectionPools([], topNSecondHop));
+    }
+    // Used to track how many iterations we do in the second loop
+    let loopsInSecondIteration = 0;
+    if (tokenInSecondHopAddresses.length > 0 || tokenOutSecondHopAddresses.length > 0) {
+        for (const subgraphPool of subgraphPoolsSorted) {
+            loopsInSecondIteration += 1;
+            let allTokenInSecondHopsHaveTheirTopN = true;
+            for (const secondHopPools of topByTVLUsingTokenInSecondHopsMap.values()) {
+                if (!secondHopPools.hasEnoughPools()) {
+                    allTokenInSecondHopsHaveTheirTopN = false;
+                    break;
+                }
+            }
+            let allTokenOutSecondHopsHaveTheirTopN = true;
+            for (const secondHopPools of topByTVLUsingTokenOutSecondHopsMap.values()) {
+                if (!secondHopPools.hasEnoughPools()) {
+                    allTokenOutSecondHopsHaveTheirTopN = false;
+                    break;
+                }
+            }
+            if (allTokenInSecondHopsHaveTheirTopN && allTokenOutSecondHopsHaveTheirTopN) {
+                // We have satisfied all the heuristics, so we can stop.
+                break;
+            }
+            if (poolAddressesSoFar.has(subgraphPool.id)) {
+                continue;
+            }
+            // Only consider pools where neither tokens are in the blocked token list.
+            if (blockedTokenListProvider) {
+                const [token0InBlocklist, token1InBlocklist] = await Promise.all([
+                    blockedTokenListProvider.hasTokenByAddress(subgraphPool.token0.id),
+                    blockedTokenListProvider.hasTokenByAddress(subgraphPool.token1.id)
+                ]);
+                if (token0InBlocklist || token1InBlocklist) {
+                    continue;
+                }
+            }
+            const tokenInToken0SecondHop = topByTVLUsingTokenInSecondHopsMap.get(subgraphPool.token0.id);
+            if (tokenInToken0SecondHop && !tokenInToken0SecondHop.hasEnoughPools()) {
+                poolAddressesSoFar.add(subgraphPool.id);
+                tokenInToken0SecondHop.pools.push(subgraphPool);
+                continue;
+            }
+            const tokenInToken1SecondHop = topByTVLUsingTokenInSecondHopsMap.get(subgraphPool.token1.id);
+            if (tokenInToken1SecondHop && !tokenInToken1SecondHop.hasEnoughPools()) {
+                poolAddressesSoFar.add(subgraphPool.id);
+                tokenInToken1SecondHop.pools.push(subgraphPool);
+                continue;
+            }
+            const tokenOutToken0SecondHop = topByTVLUsingTokenOutSecondHopsMap.get(subgraphPool.token0.id);
+            if (tokenOutToken0SecondHop && !tokenOutToken0SecondHop.hasEnoughPools()) {
+                poolAddressesSoFar.add(subgraphPool.id);
+                tokenOutToken0SecondHop.pools.push(subgraphPool);
+                continue;
+            }
+            const tokenOutToken1SecondHop = topByTVLUsingTokenOutSecondHopsMap.get(subgraphPool.token1.id);
+            if (tokenOutToken1SecondHop && !tokenOutToken1SecondHop.hasEnoughPools()) {
+                poolAddressesSoFar.add(subgraphPool.id);
+                tokenOutToken1SecondHop.pools.push(subgraphPool);
+                continue;
+            }
+        }
+    }
+    metric_1.metric.putMetric('V2SubgraphLoopsInSecondIteration', loopsInSecondIteration, metric_1.MetricLoggerUnit.Count);
+    const topByTVLUsingTokenInSecondHops = [];
+    for (const secondHopPools of topByTVLUsingTokenInSecondHopsMap.values()) {
+        topByTVLUsingTokenInSecondHops.push(...secondHopPools.pools);
+    }
+    const topByTVLUsingTokenOutSecondHops = [];
+    for (const secondHopPools of topByTVLUsingTokenOutSecondHopsMap.values()) {
+        topByTVLUsingTokenOutSecondHops.push(...secondHopPools.pools);
     }
-    addToAddressSet(topByEthQuoteTokenPool);
-    const topByTVL = (0, lodash_1.default)(subgraphPoolsSorted)
-        .filter((subgraphPool) => {
-        return !poolAddressesSoFar.has(subgraphPool.id);
-    })
-        .slice(0, topN)
-        .value();
-    addToAddressSet(topByTVL);
-    const topByTVLUsingTokenIn = (0, lodash_1.default)(subgraphPoolsSorted)
-        .filter((subgraphPool) => {
-        return (!poolAddressesSoFar.has(subgraphPool.id) &&
-            (subgraphPool.token0.id == tokenInAddress ||
-                subgraphPool.token1.id == tokenInAddress));
-    })
-        .slice(0, topNTokenInOut)
-        .value();
-    addToAddressSet(topByTVLUsingTokenIn);
-    const topByTVLUsingTokenOut = (0, lodash_1.default)(subgraphPoolsSorted)
-        .filter((subgraphPool) => {
-        return (!poolAddressesSoFar.has(subgraphPool.id) &&
-            (subgraphPool.token0.id == tokenOutAddress ||
-                subgraphPool.token1.id == tokenOutAddress));
-    })
-        .slice(0, topNTokenInOut)
-        .value();
-    addToAddressSet(topByTVLUsingTokenOut);
-    const topByTVLUsingTokenInSecondHops = (0, lodash_1.default)(topByTVLUsingTokenIn)
-        .map((subgraphPool) => {
-        return tokenInAddress == subgraphPool.token0.id
-            ? subgraphPool.token1.id
-            : subgraphPool.token0.id;
-    })
-        .flatMap((secondHopId) => {
-        return (0, lodash_1.default)(subgraphPoolsSorted)
-            .filter((subgraphPool) => {
-            return (!poolAddressesSoFar.has(subgraphPool.id) &&
-                (subgraphPool.token0.id == secondHopId ||
-                    subgraphPool.token1.id == secondHopId));
-        })
-            .slice(0, topNSecondHop)
-            .value();
-    })
-        .uniqBy((pool) => pool.id)
-        .value();
-    addToAddressSet(topByTVLUsingTokenInSecondHops);
-    const topByTVLUsingTokenOutSecondHops = (0, lodash_1.default)(topByTVLUsingTokenOut)
-        .map((subgraphPool) => {
-        return tokenOutAddress == subgraphPool.token0.id
-            ? subgraphPool.token1.id
-            : subgraphPool.token0.id;
-    })
-        .flatMap((secondHopId) => {
-        return (0, lodash_1.default)(subgraphPoolsSorted)
-            .filter((subgraphPool) => {
-            return (!poolAddressesSoFar.has(subgraphPool.id) &&
-                (subgraphPool.token0.id == secondHopId ||
-                    subgraphPool.token1.id == secondHopId));
-        })
-            .slice(0, topNSecondHop)
-            .value();
-    })
-        .uniqBy((pool) => pool.id)
-        .value();
-    addToAddressSet(topByTVLUsingTokenOutSecondHops);
     const subgraphPools = (0, lodash_1.default)([
         ...topByBaseWithTokenIn,
         ...topByBaseWithTokenOut,
@@ -547,14 +659,14 @@ async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig
         ...topByTVLUsingTokenInSecondHops,
         ...topByTVLUsingTokenOutSecondHops,
     ])
-        .compact()
         .uniqBy((pool) => pool.id)
         .value();
-    const tokenAddresses = (0, lodash_1.default)(subgraphPools)
-        .flatMap((subgraphPool) => [subgraphPool.token0.id, subgraphPool.token1.id])
-        .compact()
-        .uniq()
-        .value();
+    const tokenAddressesSet = new Set();
+    for (const pool of subgraphPools) {
+        tokenAddressesSet.add(pool.token0.id);
+        tokenAddressesSet.add(pool.token1.id);
+    }
+    const tokenAddresses = Array.from(tokenAddressesSet);
     log_1.log.info(`Getting the ${tokenAddresses.length} tokens within the ${subgraphPools.length} V2 pools we are considering`);
     const tokenAccessor = await tokenProvider.getTokens(tokenAddresses, {
         blockNumber,
@@ -584,8 +696,9 @@ async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig
         return [tokenA, tokenB];
     });
     const tokenPairs = lodash_1.default.compact(tokenPairsRaw);
+    metric_1.metric.putMetric('V2PoolsFilterLoad', Date.now() - beforePoolsFiltered, metric_1.MetricLoggerUnit.Milliseconds);
     const beforePoolsLoad = Date.now();
-    const poolAccessor = await poolProvider.getPools(tokenPairs, { blockNumber });
+    const poolAccessor = await poolProvider.getPools(tokenPairs, { blockNumber, debugRouting });
     metric_1.metric.putMetric('V2PoolsLoad', Date.now() - beforePoolsLoad, metric_1.MetricLoggerUnit.Milliseconds);
     const poolsBySelection = {
         protocol: router_sdk_1.Protocol.V2,
@@ -593,7 +706,7 @@ async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig
             topByBaseWithTokenIn,
             topByBaseWithTokenOut,
             topByDirectSwapPool,
-            topByEthQuoteTokenPool: topByEthQuoteTokenPool,
+            topByEthQuoteTokenPool,
             topByTVL,
             topByTVLUsingTokenIn,
             topByTVLUsingTokenOut,
@@ -604,30 +717,12 @@ async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig
     return { poolAccessor, candidatePools: poolsBySelection, subgraphPools };
 }
 exports.getV2CandidatePools = getV2CandidatePools;
-async function getMixedRouteCandidatePools({ tokenIn, tokenOut, routeType, routingConfig, v3subgraphProvider, v2subgraphProvider, tokenProvider, v3poolProvider, v2poolProvider, blockedTokenListProvider, chainId, }) {
-    const { blockNumber } = routingConfig;
-    const { subgraphPools: V3subgraphPools, candidatePools: V3candidatePools } = await getV3CandidatePools({
-        tokenIn,
-        tokenOut,
-        tokenProvider,
-        blockedTokenListProvider,
-        poolProvider: v3poolProvider,
-        routeType,
-        subgraphProvider: v3subgraphProvider,
-        routingConfig,
-        chainId,
-    });
-    const { subgraphPools: V2subgraphPools, candidatePools: V2candidatePools } = await getV2CandidatePools({
-        tokenIn,
-        tokenOut,
-        tokenProvider,
-        blockedTokenListProvider,
-        poolProvider: v2poolProvider,
-        routeType,
-        subgraphProvider: v2subgraphProvider,
-        routingConfig,
-        chainId,
-    });
+async function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools, routingConfig, tokenProvider, v3poolProvider, v2poolProvider, }) {
+    const beforeSubgraphPools = Date.now();
+    const { blockNumber, debugRouting } = routingConfig;
+    const [{ subgraphPools: V3subgraphPools, candidatePools: V3candidatePools }, { subgraphPools: V2subgraphPools, candidatePools: V2candidatePools }] = [v3CandidatePools, v2CandidatePools];
+    metric_1.metric.putMetric('MixedSubgraphPoolsLoad', Date.now() - beforeSubgraphPools, metric_1.MetricLoggerUnit.Milliseconds);
+    const beforePoolsFiltered = Date.now();
     /**
      * Main heuristic for pruning mixedRoutes:
      * - we pick V2 pools with higher liq than respective V3 pools, or if the v3 pool doesn't exist
@@ -719,14 +814,19 @@ async function getMixedRouteCandidatePools({ tokenIn, tokenOut, routeType, routi
         return [tokenA, tokenB];
     });
     const V2tokenPairs = lodash_1.default.compact(V2tokenPairsRaw);
+    metric_1.metric.putMetric('MixedPoolsFilterLoad', Date.now() - beforePoolsFiltered, metric_1.MetricLoggerUnit.Milliseconds);
+    const beforePoolsLoad = Date.now();
     const [V2poolAccessor, V3poolAccessor] = await Promise.all([
         v2poolProvider.getPools(V2tokenPairs, {
             blockNumber,
+            debugRouting,
         }),
         v3poolProvider.getPools(V3tokenPairs, {
             blockNumber,
+            debugRouting
         }),
     ]);
+    metric_1.metric.putMetric('MixedPoolsLoad', Date.now() - beforePoolsLoad, metric_1.MetricLoggerUnit.Milliseconds);
     /// @dev a bit tricky here since the original V2CandidateSelections object included pools that we may have dropped
     /// as part of the heuristic. We need to reconstruct a new object with the v3 pools too.
     const buildPoolsBySelection = (key) => {
@@ -757,4 +857,4 @@ async function getMixedRouteCandidatePools({ tokenIn, tokenOut, routeType, routi
     };
 }
 exports.getMixedRouteCandidatePools = getMixedRouteCandidatePools;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.d.ts
index ac30e39..b21f426 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.d.ts
@@ -29,6 +29,7 @@ export declare type BuildV2GasModelFactoryType = {
     gasPriceWei: BigNumber;
     poolProvider: IV2PoolProvider;
     token: Token;
+    providerConfig?: ProviderConfig;
 };
 export declare type LiquidityCalculationPools = {
     usdPool: Pool;
@@ -71,7 +72,7 @@ export declare type IGasModel<TRouteWithValidQuote extends RouteWithValidQuote>
  * @class IV2GasModelFactory
  */
 export declare abstract class IV2GasModelFactory {
-    abstract buildGasModel({ chainId, gasPriceWei, poolProvider, token, }: BuildV2GasModelFactoryType): Promise<IGasModel<V2RouteWithValidQuote>>;
+    abstract buildGasModel({ chainId, gasPriceWei, poolProvider, token, providerConfig, }: BuildV2GasModelFactoryType): Promise<IGasModel<V2RouteWithValidQuote>>;
 }
 /**
  * Factory for building gas models that can be used with any route to generate
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.js
index 2496ebe..0a56153 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/gas-model.js
@@ -27,6 +27,7 @@ exports.usdGasTokensByChain = {
     [sdk_core_1.ChainId.BNB]: [token_provider_1.USDT_BNB, token_provider_1.USDC_BNB, token_provider_1.DAI_BNB],
     [sdk_core_1.ChainId.AVALANCHE]: [token_provider_1.DAI_AVAX, token_provider_1.USDC_AVAX],
     [sdk_core_1.ChainId.BASE]: [token_provider_1.USDC_BASE],
+    [sdk_core_1.ChainId.TENET]: [token_provider_1.USDT_TENET],
 };
 /**
  * Factory for building gas models that can be used with any route to generate
@@ -56,4 +57,4 @@ exports.IV2GasModelFactory = IV2GasModelFactory;
 class IOnChainGasModelFactory {
 }
 exports.IOnChainGasModelFactory = IOnChainGasModelFactory;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvZ2FzLW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLGdEQUFtRDtBQUluRCxzRUFnQzJDO0FBWTNDLGlFQUFpRTtBQUNqRSxxRUFBcUU7QUFDckUsNEVBQTRFO0FBQy9ELFFBQUEsbUJBQW1CLEdBQXVDO0lBQ3JFLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLDRCQUFXLEVBQUUsNkJBQVksRUFBRSw2QkFBWSxDQUFDO0lBQzVELENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLDZCQUFZLEVBQUUsOEJBQWEsRUFBRSw4QkFBYSxDQUFDO0lBQ3BFLENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLDZCQUFZLEVBQUUsOEJBQWEsRUFBRSw4QkFBYSxDQUFDO0lBQ2hFLENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRTtRQUN6QixvQ0FBbUI7UUFDbkIscUNBQW9CO1FBQ3BCLHFDQUFvQjtLQUNyQjtJQUNELENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRSxDQUFDLHFDQUFvQixDQUFDO0lBQ2pELENBQUMsa0JBQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLDJCQUFVLEVBQUUsNEJBQVcsRUFBRSw0QkFBVyxFQUFFLDRCQUFXLENBQUM7SUFDckUsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsNkJBQVksRUFBRSw0QkFBVyxDQUFDO0lBQzlDLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLDZCQUFZLENBQUM7SUFDakMsQ0FBQyxrQkFBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsbUNBQWtCLENBQUM7SUFDOUMsQ0FBQyxrQkFBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsMEJBQVMsQ0FBQztJQUMzQixDQUFDLGtCQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxvQ0FBbUIsQ0FBQztJQUMvQyxDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxxQ0FBb0IsQ0FBQztJQUN4QyxDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyw4QkFBYSxDQUFDO0lBQ25DLENBQUMsa0JBQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLHlCQUFRLEVBQUUseUJBQVEsRUFBRSx3QkFBTyxDQUFDO0lBQzVDLENBQUMsa0JBQU8sQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLHlCQUFRLEVBQUUsMEJBQVMsQ0FBQztJQUMxQyxDQUFDLGtCQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQywwQkFBUyxDQUFDO0NBQzVCLENBQUM7QUEyREY7Ozs7Ozs7Ozs7R0FVRztBQUNILE1BQXNCLGtCQUFrQjtDQU92QztBQVBELGdEQU9DO0FBRUQ7Ozs7Ozs7Ozs7R0FVRztBQUNILE1BQXNCLHVCQUF1QjtDQVk1QztBQVpELDBEQVlDIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvZ2FzLW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLGdEQUFtRDtBQUluRCxzRUFnQzJDO0FBZTNDLGdFQUFnRTtBQUNoRSxxRUFBcUU7QUFDckUsNEVBQTRFO0FBQy9ELFFBQUEsbUJBQW1CLEdBQXVDO0lBQ3JFLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLDRCQUFXLEVBQUUsNkJBQVksRUFBRSw2QkFBWSxDQUFDO0lBQzVELENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLDZCQUFZLEVBQUUsOEJBQWEsRUFBRSw4QkFBYSxDQUFDO0lBQ3BFLENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLDZCQUFZLEVBQUUsOEJBQWEsRUFBRSw4QkFBYSxDQUFDO0lBQ2hFLENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRTtRQUN6QixvQ0FBbUI7UUFDbkIscUNBQW9CO1FBQ3BCLHFDQUFvQjtLQUNyQjtJQUNELENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUMsRUFBRSxDQUFDLHFDQUFvQixDQUFDO0lBQ2pELENBQUMsa0JBQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLDJCQUFVLEVBQUUsNEJBQVcsRUFBRSw0QkFBVyxFQUFFLDRCQUFXLENBQUM7SUFDckUsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsNkJBQVksRUFBRSw0QkFBVyxDQUFDO0lBQzlDLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLDZCQUFZLENBQUM7SUFDakMsQ0FBQyxrQkFBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsbUNBQWtCLENBQUM7SUFDOUMsQ0FBQyxrQkFBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsMEJBQVMsQ0FBQztJQUMzQixDQUFDLGtCQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxvQ0FBbUIsQ0FBQztJQUMvQyxDQUFDLGtCQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxxQ0FBb0IsQ0FBQztJQUN4QyxDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyw4QkFBYSxDQUFDO0lBQ25DLENBQUMsa0JBQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLHlCQUFRLEVBQUUseUJBQVEsRUFBRSx3QkFBTyxDQUFDO0lBQzVDLENBQUMsa0JBQU8sQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLHlCQUFRLEVBQUUsMEJBQVMsQ0FBQztJQUMxQyxDQUFDLGtCQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQywwQkFBUyxDQUFDO0lBQzNCLENBQUMsa0JBQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLDJCQUFVLENBQUM7Q0FDOUIsQ0FBQztBQTRERjs7Ozs7Ozs7OztHQVVHO0FBQ0gsTUFBc0Isa0JBQWtCO0NBUXZDO0FBUkQsZ0RBUUM7QUFFRDs7Ozs7Ozs7OztHQVVHO0FBQ0gsTUFBc0IsdUJBQXVCO0NBWTVDO0FBWkQsMERBWUMifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts
index adaaee8..9291918 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts
@@ -20,6 +20,6 @@ import { BuildOnChainGasModelFactoryType, IGasModel, IOnChainGasModelFactory } f
  */
 export declare class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory {
     constructor();
-    buildGasModel({ chainId, gasPriceWei, pools, quoteToken, v2poolProvider: V2poolProvider, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<MixedRouteWithValidQuote>>;
+    buildGasModel({ chainId, gasPriceWei, pools, quoteToken, v2poolProvider: V2poolProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<MixedRouteWithValidQuote>>;
     private estimateGas;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js
index c26e28f..2476e98 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js
@@ -39,7 +39,7 @@ class MixedRouteHeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFac
     constructor() {
         super();
     }
-    async buildGasModel({ chainId, gasPriceWei, pools, quoteToken, v2poolProvider: V2poolProvider, }) {
+    async buildGasModel({ chainId, gasPriceWei, pools, quoteToken, v2poolProvider: V2poolProvider, providerConfig, }) {
         const usdPool = pools.usdPool;
         // If our quote token is WETH, we don't need to convert our gas use to be in terms
         // of the quote token in order to produce a gas adjusted amount.
@@ -47,7 +47,7 @@ class MixedRouteHeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFac
         const nativeCurrency = __1.WRAPPED_NATIVE_CURRENCY[chainId];
         if (quoteToken.equals(nativeCurrency)) {
             const estimateGasCost = (routeWithValidQuote) => {
-                const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);
+                const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
                 const token0 = usdPool.token0.address == nativeCurrency.address;
                 const nativeTokenPrice = token0
                     ? usdPool.token0Price
@@ -69,13 +69,13 @@ class MixedRouteHeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFac
         let nativeV2Pool;
         if (V2poolProvider) {
             /// MixedRoutes
-            nativeV2Pool = await (0, gas_factory_helpers_1.getV2NativePool)(quoteToken, V2poolProvider);
+            nativeV2Pool = await (0, gas_factory_helpers_1.getV2NativePool)(quoteToken, V2poolProvider, providerConfig);
         }
         const usdToken = usdPool.token0.address == nativeCurrency.address
             ? usdPool.token1
             : usdPool.token0;
         const estimateGasCost = (routeWithValidQuote) => {
-            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);
+            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
             if (!nativeV3Pool && !nativeV2Pool) {
                 util_1.log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol} to produce gas adjusted costs. Route will not account for gas.`);
                 return {
@@ -136,7 +136,7 @@ class MixedRouteHeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFac
             estimateGasCost: estimateGasCost.bind(this),
         };
     }
-    estimateGas(routeWithValidQuote, gasPriceWei, chainId) {
+    estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig) {
         const totalInitializedTicksCrossed = bignumber_1.BigNumber.from(Math.max(1, lodash_1.default.sum(routeWithValidQuote.initializedTicksCrossedList)));
         /**
          * Since we must make a separate call to multicall for each v3 and v2 section, we will have to
@@ -161,6 +161,9 @@ class MixedRouteHeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFac
         const uninitializedTickGasUse = gas_costs_1.COST_PER_UNINIT_TICK.mul(0);
         // base estimate gas used based on chainId estimates for hops and ticks gas useage
         baseGasUse = baseGasUse.add(tickGasUse).add(uninitializedTickGasUse);
+        if (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.additionalGasOverhead) {
+            baseGasUse = baseGasUse.add(providerConfig.additionalGasOverhead);
+        }
         const baseGasCostWei = gasPriceWei.mul(baseGasUse);
         const wrappedCurrency = __1.WRAPPED_NATIVE_CURRENCY[chainId];
         const totalGasCostNativeCurrency = amounts_1.CurrencyAmount.fromRawAmount(wrappedCurrency, baseGasCostWei.toString());
@@ -172,4 +175,4 @@ class MixedRouteHeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFac
     }
 }
 exports.MixedRouteHeuristicGasModelFactory = MixedRouteHeuristicGasModelFactory;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL21peGVkUm91dGUvbWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSx3REFBcUQ7QUFDckQsb0RBQW9FO0FBRXBFLDRDQUF1QztBQUN2Qyw0Q0FBdUM7QUFDdkMsZ0RBQXdCO0FBQ3hCLG9EQUF1QjtBQUV2QixtQ0FBc0Q7QUFDdEQsMkNBQXVDO0FBQ3ZDLHNEQUEwRDtBQUMxRCw4RUFFOEM7QUFFOUMsNENBSXNCO0FBQ3RCLHlFQUdzQztBQUN0QywrQ0FLeUI7QUFFekI7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHO0FBQ0gsTUFBYSxrQ0FBbUMsU0FBUSxtQ0FBdUI7SUFDN0U7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQ3pCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsS0FBSyxFQUNMLFVBQVUsRUFDVixjQUFjLEVBQUUsY0FBYyxHQUNFO1FBR2hDLE1BQU0sT0FBTyxHQUFTLEtBQUssQ0FBQyxPQUFPLENBQUE7UUFFbkMsa0ZBQWtGO1FBQ2xGLGdFQUFnRTtRQUNoRSxxRUFBcUU7UUFDckUsTUFBTSxjQUFjLEdBQUcsMkJBQXVCLENBQUMsT0FBTyxDQUFFLENBQUM7UUFDekQsSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxFQUFFO1lBQ3JDLE1BQU0sZUFBZSxHQUFHLENBQ3RCLG1CQUE2QyxFQUs3QyxFQUFFO2dCQUNGLE1BQU0sRUFBRSwwQkFBMEIsRUFBRSxVQUFVLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUNqRSxtQkFBbUIsRUFDbkIsV0FBVyxFQUNYLE9BQU8sQ0FDUixDQUFDO2dCQUVGLE1BQU0s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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL21peGVkUm91dGUvbWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSx3REFBcUQ7QUFDckQsb0RBQW9FO0FBRXBFLDRDQUF1QztBQUN2Qyw0Q0FBdUM7QUFDdkMsZ0RBQXdCO0FBQ3hCLG9EQUF1QjtBQUV2QixtQ0FBc0Q7QUFFdEQsMkNBQXVDO0FBQ3ZDLHNEQUEwRDtBQUMxRCw4RUFBdUU7QUFFdkUsNENBSXNCO0FBQ3RCLHlFQUdzQztBQUN0QywrQ0FLeUI7QUFFekI7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHO0FBQ0gsTUFBYSxrQ0FBbUMsU0FBUSxtQ0FBdUI7SUFDN0U7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQ3pCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsS0FBSyxFQUNMLFVBQVUsRUFDVixjQUFjLEVBQUUsY0FBYyxFQUM5QixjQUFjLEdBQ2tCO1FBR2hDLE1BQU0sT0FBTyxHQUFTLEtBQUssQ0FBQyxPQUFPLENBQUM7UUFFcEMsa0ZBQWtGO1FBQ2xGLGdFQUFnRTtRQUNoRSxxRUFBcUU7UUFDckUsTUFBTSxjQUFjLEdBQUcsMkJBQXVCLENBQUMsT0FBTyxDQUFFLENBQUM7UUFDekQsSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxFQUFFO1lBQ3JDLE1BQU0sZUFBZSxHQUFHLENBQ3RCLG1CQUE2QyxFQUs3QyxFQUFFO2dCQUNGLE1BQU0sRUFBRSwwQkFBMEIsRUFBRSxVQUFVLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUNqRSxtQkFBbUIsRUFDbkIsV0FBVyxFQUNYLE9BQU8sRUFDUCxjQUFj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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts
index 4bae4d4..a319a95 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts
@@ -22,7 +22,7 @@ export declare const COST_PER_EXTRA_HOP: BigNumber;
  */
 export declare class V2HeuristicGasModelFactory extends IV2GasModelFactory {
     constructor();
-    buildGasModel({ chainId, gasPriceWei, poolProvider, token, }: BuildV2GasModelFactoryType): Promise<IGasModel<V2RouteWithValidQuote>>;
+    buildGasModel({ chainId, gasPriceWei, poolProvider, token, providerConfig, }: BuildV2GasModelFactoryType): Promise<IGasModel<V2RouteWithValidQuote>>;
     private estimateGas;
     private getEthPool;
     private getHighestLiquidityUSDPool;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js
index 62cf5db..eb8234d 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js
@@ -34,12 +34,12 @@ class V2HeuristicGasModelFactory extends gas_model_1.IV2GasModelFactory {
     constructor() {
         super();
     }
-    async buildGasModel({ chainId, gasPriceWei, poolProvider, token, }) {
+    async buildGasModel({ chainId, gasPriceWei, poolProvider, token, providerConfig, }) {
         if (token.equals(util_1.WRAPPED_NATIVE_CURRENCY[chainId])) {
-            const usdPool = await this.getHighestLiquidityUSDPool(chainId, poolProvider);
+            const usdPool = await this.getHighestLiquidityUSDPool(chainId, poolProvider, providerConfig);
             return {
                 estimateGasCost: (routeWithValidQuote) => {
-                    const { gasCostInEth, gasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);
+                    const { gasCostInEth, gasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
                     const ethToken0 = usdPool.token0.address == util_1.WRAPPED_NATIVE_CURRENCY[chainId].address;
                     const ethTokenPrice = ethToken0
                         ? usdPool.token0Price
@@ -55,17 +55,21 @@ class V2HeuristicGasModelFactory extends gas_model_1.IV2GasModelFactory {
         }
         // If the quote token is not WETH, we convert the gas cost to be in terms of the quote token.
         // We do this by getting the highest liquidity <token>/ETH pool.
-        const ethPool = await this.getEthPool(chainId, token, poolProvider);
+        const ethPoolPromise = this.getEthPool(chainId, token, poolProvider, providerConfig);
+        const usdPoolPromise = this.getHighestLiquidityUSDPool(chainId, poolProvider, providerConfig);
+        const [ethPool, usdPool] = await Promise.all([
+            ethPoolPromise,
+            usdPoolPromise,
+        ]);
         if (!ethPool) {
             util_1.log.info('Unable to find ETH pool with the quote token to produce gas adjusted costs. Route will not account for gas.');
         }
-        const usdPool = await this.getHighestLiquidityUSDPool(chainId, poolProvider);
         return {
             estimateGasCost: (routeWithValidQuote) => {
                 const usdToken = usdPool.token0.address == util_1.WRAPPED_NATIVE_CURRENCY[chainId].address
                     ? usdPool.token1
                     : usdPool.token0;
-                const { gasCostInEth, gasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);
+                const { gasCostInEth, gasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, Object.assign({}, providerConfig));
                 if (!ethPool) {
                     return {
                         gasEstimate: gasUse,
@@ -113,17 +117,20 @@ class V2HeuristicGasModelFactory extends gas_model_1.IV2GasModelFactory {
             },
         };
     }
-    estimateGas(routeWithValidQuote, gasPriceWei, chainId) {
+    estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig) {
         const hops = routeWithValidQuote.route.pairs.length;
-        const gasUse = exports.BASE_SWAP_COST.add(exports.COST_PER_EXTRA_HOP.mul(hops - 1));
+        let gasUse = exports.BASE_SWAP_COST.add(exports.COST_PER_EXTRA_HOP.mul(hops - 1));
+        if (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.additionalGasOverhead) {
+            gasUse = gasUse.add(providerConfig.additionalGasOverhead);
+        }
         const totalGasCostWei = gasPriceWei.mul(gasUse);
         const weth = util_1.WRAPPED_NATIVE_CURRENCY[chainId];
         const gasCostInEth = amounts_1.CurrencyAmount.fromRawAmount(weth, totalGasCostWei.toString());
         return { gasCostInEth, gasUse };
     }
-    async getEthPool(chainId, token, poolProvider) {
+    async getEthPool(chainId, token, poolProvider, providerConfig) {
         const weth = util_1.WRAPPED_NATIVE_CURRENCY[chainId];
-        const poolAccessor = await poolProvider.getPools([[weth, token]]);
+        const poolAccessor = await poolProvider.getPools([[weth, token]], providerConfig);
         const pool = poolAccessor.getPool(weth, token);
         if (!pool || pool.reserve0.equalTo(0) || pool.reserve1.equalTo(0)) {
             util_1.log.error({
@@ -136,7 +143,7 @@ class V2HeuristicGasModelFactory extends gas_model_1.IV2GasModelFactory {
         }
         return pool;
     }
-    async getHighestLiquidityUSDPool(chainId, poolProvider) {
+    async getHighestLiquidityUSDPool(chainId, poolProvider, providerConfig) {
         const usdTokens = gas_model_1.usdGasTokensByChain[chainId];
         if (!usdTokens) {
             throw new Error(`Could not find a USD token for computing gas costs on ${chainId}`);
@@ -145,7 +152,7 @@ class V2HeuristicGasModelFactory extends gas_model_1.IV2GasModelFactory {
             usdToken,
             util_1.WRAPPED_NATIVE_CURRENCY[chainId],
         ]);
-        const poolAccessor = await poolProvider.getPools(usdPools);
+        const poolAccessor = await poolProvider.getPools(usdPools, providerConfig);
         const poolsRaw = poolAccessor.getAllPools();
         const pools = lodash_1.default.filter(poolsRaw, (pool) => pool.reserve0.greaterThan(0) && pool.reserve1.greaterThan(0));
         if (pools.length == 0) {
@@ -164,4 +171,4 @@ class V2HeuristicGasModelFactory extends gas_model_1.IV2GasModelFactory {
     }
 }
 exports.V2HeuristicGasModelFactory = V2HeuristicGasModelFactory;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YyL3YyLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsd0RBQXFEO0FBR3JELG9EQUF1QjtBQUd2QiwyQ0FBZ0U7QUFDaEUsc0RBQTBEO0FBRTFELDRDQUtzQjtBQUV0Qix3REFBd0Q7QUFDM0MsUUFBQSxjQUFjLEdBQUcscUJBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyw2Q0FBNkM7QUFFbkcsdUNBQXVDO0FBQzFCLFFBQUEsa0JBQWtCLEdBQUcscUJBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyw0Q0FBNEM7QUFFckc7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFDSCxNQUFhLDBCQUEyQixTQUFRLDhCQUFrQjtJQUNoRTtRQUNFLEtBQUssRUFBRSxDQUFDO0lBQ1YsQ0FBQztJQUVNLEtBQUssQ0FBQyxhQUFhLENBQUMsRUFDekIsT0FBTyxFQUNQLFdBQVcsRUFDWCxZQUFZLEVBQ1osS0FBSyxHQUNzQjtRQUMzQixJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsOEJBQXVCLENBQUMsT0FBTyxDQUFFLENBQUMsRUFBRTtZQUNuRCxNQUFNLE9BQU8sR0FBUyxNQUFNLElBQUksQ0FBQywwQkFBMEIsQ0FDekQsT0FBTyxFQUNQLFlBQVksQ0FDYixDQUFDO1lBRUYsT0FBTztnQkFDTCxlQUFlLEVBQUUsQ0FBQyxtQkFBMEMsRUFBRSxFQUFFO29CQUM5RCxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQy9DLG1CQUFtQixFQUNuQixXQUFXLEVBQ1gsT0FBTyxDQUNSLENBQUM7b0JBRUYsTUFBTSxTQUFTLEdBQ2IsT0FBTyxDQUFD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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YyL3YyLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsd0RBQXFEO0FBR3JELG9EQUF1QjtBQUl2QiwyQ0FBZ0U7QUFDaEUsc0RBQTBEO0FBRTFELDRDQUtzQjtBQUV0Qix3REFBd0Q7QUFDM0MsUUFBQSxjQUFjLEdBQUcscUJBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyw2Q0FBNkM7QUFFbkcsdUNBQXVDO0FBQzFCLFFBQUEsa0JBQWtCLEdBQUcscUJBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyw0Q0FBNEM7QUFFckc7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFDSCxNQUFhLDBCQUEyQixTQUFRLDhCQUFrQjtJQUNoRTtRQUNFLEtBQUssRUFBRSxDQUFDO0lBQ1YsQ0FBQztJQUVNLEtBQUssQ0FBQyxhQUFhLENBQUMsRUFDekIsT0FBTyxFQUNQLFdBQVcsRUFDWCxZQUFZLEVBQ1osS0FBSyxFQUNMLGNBQWMsR0FDYTtRQUMzQixJQUFJLEtBQUssQ0FBQyxNQUFNLENBQUMsOEJBQXVCLENBQUMsT0FBTyxDQUFFLENBQUMsRUFBRTtZQUNuRCxNQUFNLE9BQU8sR0FBUyxNQUFNLElBQUksQ0FBQywwQkFBMEIsQ0FDekQsT0FBTyxFQUNQLFlBQVksRUFDWixjQUFjLENBQ2YsQ0FBQztZQUVGLE9BQU87Z0JBQ0wsZUFBZSxFQUFFLENBQUMsbUJBQTBDLEVBQUUsRUFBRTtvQkFDOUQsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUMvQyxtQkFBbUIsRUFDbkIsV0FBVyxFQUNYLE9BQU8sRUFDUCxjQUFjLENBQ2YsQ0FBQztv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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.d.ts
index d580c0a..af0d85b 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.d.ts
@@ -1,5 +1,5 @@
 import { BigNumber } from '@ethersproject/bignumber';
-import { ChainId } from '@uniswap/sdk-core';
+import { ChainId, Currency } from '@uniswap/sdk-core';
 import { V3Route } from '../../../router';
 export declare const COST_PER_UNINIT_TICK: BigNumber;
 export declare const BASE_SWAP_COST: (id: ChainId) => BigNumber;
@@ -7,3 +7,6 @@ export declare const COST_PER_INIT_TICK: (id: ChainId) => BigNumber;
 export declare const COST_PER_HOP: (id: ChainId) => BigNumber;
 export declare const SINGLE_HOP_OVERHEAD: (_id: ChainId) => BigNumber;
 export declare const TOKEN_OVERHEAD: (id: ChainId, route: V3Route) => BigNumber;
+export declare const NATIVE_WRAP_OVERHEAD: (id: ChainId) => BigNumber;
+export declare const NATIVE_UNWRAP_OVERHEAD: (id: ChainId) => BigNumber;
+export declare const NATIVE_OVERHEAD: (chainId: ChainId, amount: Currency, quote: Currency) => BigNumber;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.js
index 76cd9f0..2062bee 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/gas-costs.js
@@ -1,6 +1,6 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.TOKEN_OVERHEAD = exports.SINGLE_HOP_OVERHEAD = exports.COST_PER_HOP = exports.COST_PER_INIT_TICK = exports.BASE_SWAP_COST = exports.COST_PER_UNINIT_TICK = void 0;
+exports.NATIVE_OVERHEAD = exports.NATIVE_UNWRAP_OVERHEAD = exports.NATIVE_WRAP_OVERHEAD = exports.TOKEN_OVERHEAD = exports.SINGLE_HOP_OVERHEAD = exports.COST_PER_HOP = exports.COST_PER_INIT_TICK = exports.BASE_SWAP_COST = exports.COST_PER_UNINIT_TICK = void 0;
 const bignumber_1 = require("@ethersproject/bignumber");
 const sdk_core_1 = require("@uniswap/sdk-core");
 const providers_1 = require("../../../../providers");
@@ -32,6 +32,7 @@ const BASE_SWAP_COST = (id) => {
         case sdk_core_1.ChainId.GNOSIS:
             return bignumber_1.BigNumber.from(2000);
         case sdk_core_1.ChainId.MOONBEAM:
+        case sdk_core_1.ChainId.TENET:
             return bignumber_1.BigNumber.from(2000);
     }
 };
@@ -61,6 +62,7 @@ const COST_PER_INIT_TICK = (id) => {
         case sdk_core_1.ChainId.GNOSIS:
             return bignumber_1.BigNumber.from(31000);
         case sdk_core_1.ChainId.MOONBEAM:
+        case sdk_core_1.ChainId.TENET:
             return bignumber_1.BigNumber.from(31000);
     }
 };
@@ -89,6 +91,7 @@ const COST_PER_HOP = (id) => {
         case sdk_core_1.ChainId.GNOSIS:
             return bignumber_1.BigNumber.from(80000);
         case sdk_core_1.ChainId.MOONBEAM:
+        case sdk_core_1.ChainId.TENET:
             return bignumber_1.BigNumber.from(80000);
     }
 };
@@ -115,4 +118,31 @@ const TOKEN_OVERHEAD = (id, route) => {
     return overhead;
 };
 exports.TOKEN_OVERHEAD = TOKEN_OVERHEAD;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLWNvc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvdjMvZ2FzLWNvc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdEQUFxRDtBQUNyRCxnREFBbUQ7QUFDbkQscURBQW1FO0FBSW5FLDJDQUEyQztBQUM5QixRQUFBLG9CQUFvQixHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRXRELDZEQUE2RDtBQUN0RCxNQUFNLGNBQWMsR0FBRyxDQUFDLEVBQVcsRUFBYSxFQUFFO0lBQ3ZELFFBQVEsRUFBRSxFQUFFO1FBQ1YsS0FBSyxrQkFBTyxDQUFDLE9BQU8sQ0FBQztRQUNyQixLQUFLLGtCQUFPLENBQUMsTUFBTSxDQUFDO1FBQ3BCLEtBQUssa0JBQU8sQ0FBQyxPQUFPLENBQUM7UUFDckIsS0FBSyxrQkFBTyxDQUFDLFFBQVEsQ0FBQztRQUN0QixLQUFLLGtCQUFPLENBQUMsZUFBZSxDQUFDO1FBQzdCLEtBQUssa0JBQU8sQ0FBQyxHQUFHLENBQUM7UUFDakIsS0FBSyxrQkFBTyxDQUFDLFNBQVMsQ0FBQztRQUN2QixLQUFLLGtCQUFPLENBQUMsSUFBSSxDQUFDO1FBQ2xCLEtBQUssa0JBQU8sQ0FBQyxXQUFXO1lBQ3RCLE9BQU8scUJBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsS0FBSyxrQkFBTyxDQUFDLFlBQVksQ0FBQztRQUMxQixLQUFLLGtCQUFPLENBQUMsZUFBZTtZQUMxQixPQUFPLHFCQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLEtBQUssa0JBQU8sQ0FBQyxPQUFPLENBQUM7UUFDckIsS0FBSyxrQkFBTyxDQUFDLGNBQWM7WUFDekIsT0FBTyxxQkFBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUU5QixLQUFLLGtC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
\ No newline at end of file
+// TODO: change per chain
+const NATIVE_WRAP_OVERHEAD = (id) => {
+    switch (id) {
+        default:
+            return bignumber_1.BigNumber.from(27938);
+    }
+};
+exports.NATIVE_WRAP_OVERHEAD = NATIVE_WRAP_OVERHEAD;
+const NATIVE_UNWRAP_OVERHEAD = (id) => {
+    switch (id) {
+        default:
+            return bignumber_1.BigNumber.from(36000);
+    }
+};
+exports.NATIVE_UNWRAP_OVERHEAD = NATIVE_UNWRAP_OVERHEAD;
+const NATIVE_OVERHEAD = (chainId, amount, quote) => {
+    if (amount.isNative) {
+        // need to wrap eth in
+        return (0, exports.NATIVE_WRAP_OVERHEAD)(chainId);
+    }
+    if (quote.isNative) {
+        // need to unwrap eth out
+        return (0, exports.NATIVE_UNWRAP_OVERHEAD)(chainId);
+    }
+    return bignumber_1.BigNumber.from(0);
+};
+exports.NATIVE_OVERHEAD = NATIVE_OVERHEAD;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLWNvc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvdjMvZ2FzLWNvc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdEQUFxRDtBQUNyRCxnREFBNkQ7QUFFN0QscURBQW1FO0FBR25FLDJDQUEyQztBQUM5QixRQUFBLG9CQUFvQixHQUFHLHFCQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRXRELDZEQUE2RDtBQUN0RCxNQUFNLGNBQWMsR0FBRyxDQUFDLEVBQVcsRUFBYSxFQUFFO0lBQ3ZELFFBQVEsRUFBRSxFQUFFO1FBQ1YsS0FBSyxrQkFBTyxDQUFDLE9BQU8sQ0FBQztRQUNyQixLQUFLLGtCQUFPLENBQUMsTUFBTSxDQUFDO1FBQ3BCLEtBQUssa0JBQU8sQ0FBQyxPQUFPLENBQUM7UUFDckIsS0FBSyxrQkFBTyxDQUFDLFFBQVEsQ0FBQztRQUN0QixLQUFLLGtCQUFPLENBQUMsZUFBZSxDQUFDO1FBQzdCLEtBQUssa0JBQU8sQ0FBQyxHQUFHLENBQUM7UUFDakIsS0FBSyxrQkFBTyxDQUFDLFNBQVMsQ0FBQztRQUN2QixLQUFLLGtCQUFPLENBQUMsSUFBSSxDQUFDO1FBQ2xCLEtBQUssa0JBQU8sQ0FBQyxXQUFXO1lBQ3RCLE9BQU8scUJBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsS0FBSyxrQkFBTyxDQUFDLFlBQVksQ0FBQztRQUMxQixLQUFLLGtCQUFPLENBQUMsZUFBZTtZQUMxQixPQUFPLHFCQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLEtBQUssa0JBQU8sQ0FBQyxPQUFPLENBQUM7UUFDckIsS0FBSyxrQkFBTyxDQUFDLGNBQWM7WUFDekIsT0FBTyxxQkFBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUU5QixLQUFLLGtC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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts
index 9b2271d..60f2a74 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts
@@ -20,7 +20,7 @@ import { BuildOnChainGasModelFactoryType, IGasModel, IOnChainGasModelFactory } f
  */
 export declare class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {
     constructor();
-    buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<V3RouteWithValidQuote>>;
+    buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<V3RouteWithValidQuote>>;
     private estimateGas;
     /**
      * To avoid having a call to optimism's L1 security fee contract for every route and amount combination,
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
index 3edaff9..5caff7a 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
@@ -36,7 +36,7 @@ class V3HeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFactory {
     constructor() {
         super();
     }
-    async buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, }) {
+    async buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, providerConfig, }) {
         const l2GasData = l2GasDataProvider
             ? await l2GasDataProvider.getGasData()
             : undefined;
@@ -100,7 +100,7 @@ class V3HeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFactory {
         const nativeCurrency = __1.WRAPPED_NATIVE_CURRENCY[chainId];
         if (quoteToken.equals(nativeCurrency)) {
             const estimateGasCost = (routeWithValidQuote) => {
-                const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);
+                const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
                 const token0 = usdPool.token0.address == nativeCurrency.address;
                 const nativeTokenPrice = token0
                     ? usdPool.token0Price
@@ -128,7 +128,7 @@ class V3HeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFactory {
             ? usdPool.token1
             : usdPool.token0;
         const estimateGasCost = (routeWithValidQuote) => {
-            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);
+            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
             let gasCostInTermsOfQuoteToken = null;
             if (nativePool) {
                 const token0 = nativePool.token0.address == nativeCurrency.address;
@@ -221,7 +221,8 @@ class V3HeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFactory {
             calculateL1GasFees,
         };
     }
-    estimateGas(routeWithValidQuote, gasPriceWei, chainId) {
+    estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig) {
+        var _a;
         const totalInitializedTicksCrossed = bignumber_1.BigNumber.from(Math.max(1, lodash_1.default.sum(routeWithValidQuote.initializedTicksCrossedList)));
         const totalHops = bignumber_1.BigNumber.from(routeWithValidQuote.route.pools.length);
         let hopsGasUse = (0, gas_costs_1.COST_PER_HOP)(chainId).mul(totalHops);
@@ -241,7 +242,8 @@ class V3HeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFactory {
             .add(hopsGasUse)
             .add(tokenOverhead)
             .add(tickGasUse)
-            .add(uninitializedTickGasUse);
+            .add(uninitializedTickGasUse)
+            .add((_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.additionalGasOverhead) !== null && _a !== void 0 ? _a : bignumber_1.BigNumber.from(0));
         const baseGasCostWei = gasPriceWei.mul(baseGasUse);
         const wrappedCurrency = __1.WRAPPED_NATIVE_CURRENCY[chainId];
         const totalGasCostNativeCurrency = amounts_1.CurrencyAmount.fromRawAmount(wrappedCurrency, baseGasCostWei.toString());
@@ -297,4 +299,4 @@ class V3HeuristicGasModelFactory extends gas_model_1.IOnChainGasModelFactory {
     }
 }
 exports.V3HeuristicGasModelFactory = V3HeuristicGasModelFactory;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.d.ts
index 28a93c4..9a16400 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.d.ts
@@ -1,4 +1,5 @@
 import { BigNumber } from '@ethersproject/bignumber';
+import { Protocol } from '@uniswap/router-sdk';
 import { ChainId, Currency, Token, TradeType } from '@uniswap/sdk-core';
 import { Pair } from '@uniswap/v2-sdk';
 import { Pool } from '@uniswap/v3-sdk';
@@ -7,7 +8,7 @@ import { CurrencyAmount } from '../../../util';
 import { MixedRoute, V2Route, V3Route } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { RouteWithValidQuote } from '../entities/route-with-valid-quote';
-import { CandidatePoolsBySelectionCriteria } from '../functions/get-candidate-pools';
+import { CandidatePoolsBySelectionCriteria, V2CandidatePools, V3CandidatePools } from '../functions/get-candidate-pools';
 import { IGasModel } from '../gas-models';
 import { GetQuotesResult, GetRoutesResult } from './model/results';
 /**
@@ -15,14 +16,16 @@ import { GetQuotesResult, GetRoutesResult } from './model/results';
  * Defines the base dependencies, helper methods and interface for how to fetch quotes.
  *
  * @abstract
+ * @template CandidatePools
  * @template Route
  */
-export declare abstract class BaseQuoter<Route extends V2Route | V3Route | MixedRoute> {
+export declare abstract class BaseQuoter<CandidatePools extends V2CandidatePools | V3CandidatePools | [V3CandidatePools, V2CandidatePools], Route extends V2Route | V3Route | MixedRoute> {
     protected tokenProvider: ITokenProvider;
     protected chainId: ChainId;
+    protected protocol: Protocol;
     protected blockedTokenListProvider?: ITokenListProvider;
     protected tokenValidatorProvider?: ITokenValidatorProvider;
-    constructor(tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
+    constructor(tokenProvider: ITokenProvider, chainId: ChainId, protocol: Protocol, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
     /**
      * Protected method in charge of fetching the routes for the tokenIn/tokenOut pair.
      *
@@ -30,11 +33,12 @@ export declare abstract class BaseQuoter<Route extends V2Route | V3Route | Mixed
      * @abstract
      * @param tokenIn The token that the user wants to provide
      * @param tokenOut The token that the usaw wants to receive
+     * @param candidatePools the candidate pools that are used to generate the routes
      * @param tradeType The type of quote the user wants. He could want to provide exactly X tokenIn or receive exactly X tokenOut
      * @param routingConfig
      * @returns Promise<GetRoutesResult<Route>>
      */
-    protected abstract getRoutes(tokenIn: Token, tokenOut: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<Route>>;
+    protected abstract getRoutes(tokenIn: Token, tokenOut: Token, candidatePools: CandidatePools, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<Route>>;
     /**
      * Public method that will fetch quotes for the combination of every route and every amount.
      *
@@ -58,11 +62,12 @@ export declare abstract class BaseQuoter<Route extends V2Route | V3Route | Mixed
      * @param amounts the list of amounts to query for EACH route.
      * @param percents the percentage of each amount.
      * @param quoteToken
+     * @param candidatePools
      * @param tradeType
      * @param routingConfig
      * @param gasModel the gasModel to be used for estimating gas cost
      * @param gasPriceWei instead of passing gasModel, gasPriceWei is used to generate a gasModel
      */
-    getRoutesThenQuotes(tokenIn: Token, tokenOut: Token, amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig, gasModel?: IGasModel<RouteWithValidQuote>, gasPriceWei?: BigNumber): Promise<GetQuotesResult>;
+    getRoutesThenQuotes(tokenIn: Token, tokenOut: Token, amount: CurrencyAmount, amounts: CurrencyAmount[], percents: number[], quoteToken: Token, candidatePools: CandidatePools, tradeType: TradeType, routingConfig: AlphaRouterConfig, gasModel?: IGasModel<RouteWithValidQuote>, gasPriceWei?: BigNumber): Promise<GetQuotesResult>;
     protected applyTokenValidatorToPools<T extends Pool | Pair>(pools: T[], isInvalidFn: (token: Currency, tokenValidation: TokenValidationResult | undefined) => boolean): Promise<T[]>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.js
index 310eaf5..5b4f162 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/base-quoter.js
@@ -11,12 +11,14 @@ const util_1 = require("../../../util");
  * Defines the base dependencies, helper methods and interface for how to fetch quotes.
  *
  * @abstract
+ * @template CandidatePools
  * @template Route
  */
 class BaseQuoter {
-    constructor(tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
+    constructor(tokenProvider, chainId, protocol, blockedTokenListProvider, tokenValidatorProvider) {
         this.tokenProvider = tokenProvider;
         this.chainId = chainId;
+        this.protocol = protocol;
         this.blockedTokenListProvider = blockedTokenListProvider;
         this.tokenValidatorProvider = tokenValidatorProvider;
     }
@@ -28,14 +30,28 @@ class BaseQuoter {
      * @param amounts the list of amounts to query for EACH route.
      * @param percents the percentage of each amount.
      * @param quoteToken
+     * @param candidatePools
      * @param tradeType
      * @param routingConfig
      * @param gasModel the gasModel to be used for estimating gas cost
      * @param gasPriceWei instead of passing gasModel, gasPriceWei is used to generate a gasModel
      */
-    getRoutesThenQuotes(tokenIn, tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, gasModel, gasPriceWei) {
-        return this.getRoutes(tokenIn, tokenOut, tradeType, routingConfig)
-            .then((routesResult) => this.getQuotes(routesResult.routes, amounts, percents, quoteToken, tradeType, routingConfig, routesResult.candidatePools, gasModel, gasPriceWei));
+    getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, candidatePools, tradeType, routingConfig, gasModel, gasPriceWei) {
+        return this.getRoutes(tokenIn, tokenOut, candidatePools, tradeType, routingConfig)
+            .then((routesResult) => {
+            if (routesResult.routes.length == 1) {
+                util_1.metric.putMetric(`${this.protocol}QuoterSingleRoute`, 1, util_1.MetricLoggerUnit.Count);
+                percents = [100];
+                amounts = [amount];
+            }
+            if (routesResult.routes.length > 0) {
+                util_1.metric.putMetric(`${this.protocol}QuoterRoutesFound`, routesResult.routes.length, util_1.MetricLoggerUnit.Count);
+            }
+            else {
+                util_1.metric.putMetric(`${this.protocol}QuoterNoRoutesFound`, routesResult.routes.length, util_1.MetricLoggerUnit.Count);
+            }
+            return this.getQuotes(routesResult.routes, amounts, percents, quoteToken, tradeType, routingConfig, routesResult.candidatePools, gasModel, gasPriceWei);
+        });
     }
     async applyTokenValidatorToPools(pools, isInvalidFn) {
         if (!this.tokenValidatorProvider) {
@@ -58,4 +74,4 @@ class BaseQuoter {
     }
 }
 exports.BaseQuoter = BaseQuoter;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1xdW90ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcm91dGVycy9hbHBoYS1yb3V0ZXIvcXVvdGVycy9iYXNlLXF1b3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFJQSxvREFBdUI7QUFHdkIsd0NBQWtFO0FBU2xFOzs7Ozs7R0FNRztBQUNILE1BQXNCLFVBQVU7SUFNOUIsWUFDRSxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELElBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDO1FBQ25DLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyx3QkFBd0IsR0FBRyx3QkFBd0IsQ0FBQztRQUN6RCxJQUFJLENBQUMsc0JBQXNCLEdBQUcsc0JBQXNCLENBQUM7SUFDdkQsQ0FBQztJQThDRDs7Ozs7Ozs7Ozs7O09BWUc7SUFDSSxtQkFBbUIsQ0FDeEIsT0FBYyxFQUNkLFFBQWUsRUFDZixPQUF5QixFQUN6QixRQUFrQixFQUNsQixVQUFpQixFQUNqQixTQUFvQixFQUNwQixhQUFnQyxFQUNoQyxRQUF5QyxFQUN6QyxXQUF1QjtRQUV2QixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsYUFBYSxDQUFDO2FBQy9ELElBQUksQ0FBQyxDQUFDLFlBQVksRUFBRSxFQUFFLENBQ3JCLElBQUksQ0FBQyxTQUFTLENBQ1osWUFBWSxDQUFDLE1BQU0sRUFDbkIsT0FBTyxFQUNQLFFBQVEsRUFDUixVQUFVLEVBQ1YsU0FBUyxFQUNULGFBQWEsRUFDYixZQUFZLENBQUMsY0FBYyxFQUMzQixRQUFRLEVBQ1IsV0FBVyxDQUNaLENBQ0YsQ0FBQztJQUNOLENBQUM7SUFFUyxLQUFLLENBQUMsMEJBQTBCLENBQ3hDLEtBQVUsRUFDVixXQUdZO1FBRVosSUFBSSxDQUFDLElBQUksQ0FBQyxzQkFBc0IsRUFBRTtZQUNoQyxPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsVUFBRyxDQUFDLElBQUksQ0FBQyw4QkFBOEIsS0FBSyxDQUFDLE1BQU0sUUFBUSxDQUFDLENBQUM7UUFFN0QsTUFBTSxNQUFNLEdBQUcsZ0JBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUM7UUFFdEUsTUFBTSxzQkFBc0IsR0FBRyxNQUFNLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7UUFFeEYsTUFBTSxhQUFhLEdBQUcsZ0JBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsSUFBTyxFQUFFLEVBQUU7WUFDaEQsTUFBTSxnQkFBZ0IsR0FBRyxzQkFBc0IsQ0FBQyxvQkFBb0IsQ0FDbEUsSUFBSSxDQUFDLE1BQU0sQ0FDWixDQUFDO1lBQ0YsTUFBTSxnQkFBZ0IsR0FBRyxzQkFBc0IsQ0FBQyxvQkFBb0IsQ0FDbEUsSUFBSSxDQUFDLE1BQU0sQ0FDWixDQUFDO1lBRUYsTUFBTSxhQUFhLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztZQUNqRSxNQUFNLGFBQWEsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1lBRWpFLElBQUksYUFBYSxJQUFJLGFBQWEsRUFBRTtnQkFDbEMsVUFBRyxDQUFDLElBQUksQ0FDTixpQkFBaUIsSUFBQSxtQkFBWSxFQUFDLElBQUksQ0FBQyw4QkFBOEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUM3RSxLQUFLLGdCQUFnQixLQUFLLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFLLGdCQUFnQixFQUFFLENBQ3BFLENBQUM7YUFDSDtZQUVELE9BQU8sQ0FBQyxhQUFhLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDMUMsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLGFBQWEsQ0FBQztJQUN2QixDQUFDO0NBQ0Y7QUE5SUQsZ0NBOElDIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1xdW90ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcm91dGVycy9hbHBoYS1yb3V0ZXIvcXVvdGVycy9iYXNlLXF1b3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFLQSxvREFBdUI7QUFHdkIsd0NBQTRGO0FBYTVGOzs7Ozs7O0dBT0c7QUFDSCxNQUFzQixVQUFVO0lBVTlCLFlBQ0UsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsUUFBa0IsRUFDbEIsd0JBQTZDLEVBQzdDLHNCQUFnRDtRQUVoRCxJQUFJLENBQUMsYUFBYSxHQUFHLGFBQWEsQ0FBQztRQUNuQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsd0JBQXdCLEdBQUcsd0JBQXdCLENBQUM7UUFDekQsSUFBSSxDQUFDLHNCQUFzQixHQUFHLHNCQUFzQixDQUFDO0lBQ3ZELENBQUM7SUFnREQ7Ozs7Ozs7Ozs7Ozs7T0FhRztJQUNJLG1CQUFtQixDQUN4QixPQUFjLEVBQ2QsUUFBZSxFQUNmLE1BQXNCLEVBQ3RCLE9BQXlCLEVBQ3pCLFFBQWtCLEVBQ2xCLFVBQWlCLEVBQ2pCLGNBQThCLEVBQzlCLFNBQW9CLEVBQ3BCLGFBQWdDLEVBQ2hDLFFBQXlDLEVBQ3pDLFdBQXVCO1FBRXZCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLGNBQWMsRUFBRSxTQUFTLEVBQUUsYUFBYSxDQUFDO2FBQy9FLElBQUksQ0FBQyxDQUFDLFlBQVksRUFBRSxFQUFFO1lBQ3JCLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO2dCQUNuQyxhQUFNLENBQUMsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsbUJBQW1CLEVBQUUsQ0FBQyxFQUFFLHVCQUFnQixDQUFDLEtBQUss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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.d.ts
index 75a6b49..ac31ae9 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.d.ts
@@ -4,17 +4,17 @@ import { CurrencyAmount } from '../../../util';
 import { MixedRoute } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { MixedRouteWithValidQuote } from '../entities';
-import { CandidatePoolsBySelectionCriteria } from '../functions/get-candidate-pools';
+import { CandidatePoolsBySelectionCriteria, V2CandidatePools, V3CandidatePools } from '../functions/get-candidate-pools';
 import { IGasModel } from '../gas-models';
 import { BaseQuoter } from './base-quoter';
 import { GetQuotesResult, GetRoutesResult } from './model';
-export declare class MixedQuoter extends BaseQuoter<MixedRoute> {
+export declare class MixedQuoter extends BaseQuoter<[V3CandidatePools, V2CandidatePools], MixedRoute> {
     protected v3SubgraphProvider: IV3SubgraphProvider;
     protected v3PoolProvider: IV3PoolProvider;
     protected v2SubgraphProvider: IV2SubgraphProvider;
     protected v2PoolProvider: IV2PoolProvider;
     protected onChainQuoteProvider: IOnChainQuoteProvider;
     constructor(v3SubgraphProvider: IV3SubgraphProvider, v3PoolProvider: IV3PoolProvider, v2SubgraphProvider: IV2SubgraphProvider, v2PoolProvider: IV2PoolProvider, onChainQuoteProvider: IOnChainQuoteProvider, tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
-    protected getRoutes(tokenIn: Token, tokenOut: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<MixedRoute>>;
+    protected getRoutes(tokenIn: Token, tokenOut: Token, v3v2candidatePools: [V3CandidatePools, V2CandidatePools], tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<MixedRoute>>;
     getQuotes(routes: MixedRoute[], amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig, candidatePools?: CandidatePoolsBySelectionCriteria, gasModel?: IGasModel<MixedRouteWithValidQuote>): Promise<GetQuotesResult>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.js
index f239a95..65e8064 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/mixed-quoter.js
@@ -4,6 +4,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.MixedQuoter = void 0;
+const router_sdk_1 = require("@uniswap/router-sdk");
 const sdk_core_1 = require("@uniswap/sdk-core");
 const lodash_1 = __importDefault(require("lodash"));
 const providers_1 = require("../../../providers");
@@ -14,29 +15,27 @@ const get_candidate_pools_1 = require("../functions/get-candidate-pools");
 const base_quoter_1 = require("./base-quoter");
 class MixedQuoter extends base_quoter_1.BaseQuoter {
     constructor(v3SubgraphProvider, v3PoolProvider, v2SubgraphProvider, v2PoolProvider, onChainQuoteProvider, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
-        super(tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider);
+        super(tokenProvider, chainId, router_sdk_1.Protocol.MIXED, blockedTokenListProvider, tokenValidatorProvider);
         this.v3SubgraphProvider = v3SubgraphProvider;
         this.v3PoolProvider = v3PoolProvider;
         this.v2SubgraphProvider = v2SubgraphProvider;
         this.v2PoolProvider = v2PoolProvider;
         this.onChainQuoteProvider = onChainQuoteProvider;
     }
-    async getRoutes(tokenIn, tokenOut, tradeType, routingConfig) {
+    async getRoutes(tokenIn, tokenOut, v3v2candidatePools, tradeType, routingConfig) {
+        const beforeGetRoutes = Date.now();
         if (tradeType != sdk_core_1.TradeType.EXACT_INPUT) {
             throw new Error('Mixed route quotes are not supported for EXACT_OUTPUT');
         }
+        const [v3CandidatePools, v2CandidatePools] = v3v2candidatePools;
         const { V2poolAccessor, V3poolAccessor, candidatePools: mixedRouteCandidatePools, } = await (0, get_candidate_pools_1.getMixedRouteCandidatePools)({
-            tokenIn,
-            tokenOut,
+            v3CandidatePools,
+            v2CandidatePools,
             tokenProvider: this.tokenProvider,
-            blockedTokenListProvider: this.blockedTokenListProvider,
             v3poolProvider: this.v3PoolProvider,
             v2poolProvider: this.v2PoolProvider,
-            routeType: tradeType,
-            v3subgraphProvider: this.v3SubgraphProvider,
-            v2subgraphProvider: this.v2SubgraphProvider,
             routingConfig,
-            chainId: this.chainId,
+            chainId: this.chainId
         });
         const V3poolsRaw = V3poolAccessor.getAllPools();
         const V2poolsRaw = V2poolAccessor.getAllPools();
@@ -62,12 +61,14 @@ class MixedQuoter extends base_quoter_1.BaseQuoter {
         });
         const { maxSwapsPerPath } = routingConfig;
         const routes = (0, compute_all_routes_1.computeAllMixedRoutes)(tokenIn, tokenOut, pools, maxSwapsPerPath);
+        util_1.metric.putMetric('MixedGetRoutesLoad', Date.now() - beforeGetRoutes, util_1.MetricLoggerUnit.Milliseconds);
         return {
             routes,
             candidatePools
         };
     }
     async getQuotes(routes, amounts, percents, quoteToken, tradeType, routingConfig, candidatePools, gasModel) {
+        const beforeGetQuotes = Date.now();
         util_1.log.info('Starting to get mixed quotes');
         if (gasModel === undefined) {
             throw new Error('GasModel for MixedRouteWithValidQuote is required to getQuotes');
@@ -120,6 +121,7 @@ class MixedQuoter extends base_quoter_1.BaseQuoter {
                 routesWithValidQuotes.push(routeWithValidQuote);
             }
         }
+        util_1.metric.putMetric('MixedGetQuotesLoad', Date.now() - beforeGetQuotes, util_1.MetricLoggerUnit.Milliseconds);
         return {
             routesWithValidQuotes,
             candidatePools
@@ -127,4 +129,4 @@ class MixedQuoter extends base_quoter_1.BaseQuoter {
     }
 }
 exports.MixedQuoter = MixedQuoter;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvbWl4ZWQtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGdEQUF3RTtBQUN4RSxvREFBdUI7QUFFdkIsa0RBVTRCO0FBQzVCLHdDQUE2RjtBQUc3RiwwQ0FBdUQ7QUFDdkQsd0VBQXdFO0FBQ3hFLDBFQUFrSDtBQUdsSCwrQ0FBMkM7QUFHM0MsTUFBYSxXQUFZLFNBQVEsd0JBQXNCO0lBT3JELFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixvQkFBMkMsRUFDM0MsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsd0JBQTZDLEVBQzdDLHNCQUFnRDtRQUVoRCxLQUFLLENBQUMsYUFBYSxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO1FBQ2hGLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7UUFDN0MsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLG9CQUFvQixHQUFHLG9CQUFvQixDQUFDO0lBQ25ELENBQUM7SUFFUyxLQUFLLENBQUMsU0FBUyxDQUN2QixPQUFjLEVBQ2QsUUFBZSxFQUNmLFNBQW9CLEVBQ3BCLGFBQWdDO1FBRWhDLElBQUksU0FBUyxJQUFJLG9CQUFTLENBQUMsV0FBVyxFQUFFO1lBQ3RDLE1BQU0sSUFBSSxLQUFLLENBQUMsdURBQXVELENBQUMsQ0FBQztTQUMxRTtRQUVELE1BQU0sRUFDSixjQUFjLEVBQ2QsY0FBYyxFQUNkLGNBQWMsRUFBRSx3QkFBd0IsR0FDekMsR0FBRyxNQUFN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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvbWl4ZWQtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9EQUErQztBQUMvQyxnREFBd0U7QUFDeEUsb0RBQXVCO0FBRXZCLGtEQVU0QjtBQUM1Qix3Q0FBNkY7QUFHN0YsMENBQXVEO0FBQ3ZELHdFQUF3RTtBQUN4RSwwRUFLMEM7QUFHMUMsK0NBQTJDO0FBRzNDLE1BQWEsV0FBWSxTQUFRLHdCQUE0RDtJQU8zRixZQUNFLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixrQkFBdUMsRUFDdkMsY0FBK0IsRUFDL0Isb0JBQTJDLEVBQzNDLGFBQTZCLEVBQzdCLE9BQWdCLEVBQ2hCLHdCQUE2QyxFQUM3QyxzQkFBZ0Q7UUFFaEQsS0FBSyxDQUFDLGFBQWEsRUFBRSxPQUFPLEVBQUUscUJBQVEsQ0FBQyxLQUFLLEVBQUUsd0JBQXdCLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztRQUNoRyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7UUFDN0MsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztJQUNuRCxDQUFDO0lBRVMsS0FBSyxDQUFDLFNBQVMsQ0FDdkIsT0FBYyxFQUNkLFFBQWUsRUFDZixrQkFBd0QsRUFDeEQsU0FBb0IsRUFDcEIsYUFBZ0M7UUFFaEMsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBRW5DLElBQUksU0FBUyxJQUFJLG9CQUFTLENBQUMsV0FBVyxFQUFFO1lBQ3RDLE1BQU0sSUFBSSxLQUFLLENB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.d.ts
index f413634..b1009ba 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.d.ts
@@ -5,17 +5,18 @@ import { CurrencyAmount } from '../../../util';
 import { V2Route } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { V2RouteWithValidQuote } from '../entities';
-import { CandidatePoolsBySelectionCriteria } from '../functions/get-candidate-pools';
+import { CandidatePoolsBySelectionCriteria, V2CandidatePools } from '../functions/get-candidate-pools';
 import { IGasModel, IV2GasModelFactory } from '../gas-models';
 import { BaseQuoter } from './base-quoter';
 import { GetQuotesResult } from './model/results/get-quotes-result';
 import { GetRoutesResult } from './model/results/get-routes-result';
-export declare class V2Quoter extends BaseQuoter<V2Route> {
+export declare class V2Quoter extends BaseQuoter<V2CandidatePools, V2Route> {
     protected v2SubgraphProvider: IV2SubgraphProvider;
     protected v2PoolProvider: IV2PoolProvider;
     protected v2QuoteProvider: IV2QuoteProvider;
     protected v2GasModelFactory: IV2GasModelFactory;
     constructor(v2SubgraphProvider: IV2SubgraphProvider, v2PoolProvider: IV2PoolProvider, v2QuoteProvider: IV2QuoteProvider, v2GasModelFactory: IV2GasModelFactory, tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
-    protected getRoutes(tokenIn: Token, tokenOut: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<V2Route>>;
+    protected getRoutes(tokenIn: Token, tokenOut: Token, v2CandidatePools: V2CandidatePools, _tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<V2Route>>;
     getQuotes(routes: V2Route[], amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, _routingConfig: AlphaRouterConfig, candidatePools?: CandidatePoolsBySelectionCriteria, _gasModel?: IGasModel<V2RouteWithValidQuote>, gasPriceWei?: BigNumber): Promise<GetQuotesResult>;
+    refreshRoutesThenGetQuotes(tokenIn: Token, tokenOut: Token, routes: V2Route[], amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig, gasPriceWei?: BigNumber): Promise<GetQuotesResult>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.js
index e861b39..62eb56d 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v2-quoter.js
@@ -4,37 +4,28 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.V2Quoter = void 0;
+const router_sdk_1 = require("@uniswap/router-sdk");
 const sdk_core_1 = require("@uniswap/sdk-core");
 const lodash_1 = __importDefault(require("lodash"));
 const providers_1 = require("../../../providers");
 const util_1 = require("../../../util");
 const entities_1 = require("../entities");
 const compute_all_routes_1 = require("../functions/compute-all-routes");
-const get_candidate_pools_1 = require("../functions/get-candidate-pools");
 const base_quoter_1 = require("./base-quoter");
 class V2Quoter extends base_quoter_1.BaseQuoter {
     constructor(v2SubgraphProvider, v2PoolProvider, v2QuoteProvider, v2GasModelFactory, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
-        super(tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider);
+        super(tokenProvider, chainId, router_sdk_1.Protocol.V2, blockedTokenListProvider, tokenValidatorProvider);
         this.v2SubgraphProvider = v2SubgraphProvider;
         this.v2PoolProvider = v2PoolProvider;
         this.v2QuoteProvider = v2QuoteProvider;
         this.v2GasModelFactory = v2GasModelFactory;
     }
-    async getRoutes(tokenIn, tokenOut, tradeType, routingConfig) {
+    async getRoutes(tokenIn, tokenOut, v2CandidatePools, _tradeType, routingConfig) {
+        const beforeGetRoutes = Date.now();
         // Fetch all the pools that we will consider routing via. There are thousands
         // of pools, so we filter them to a set of candidate pools that we expect will
         // result in good prices.
-        const { poolAccessor, candidatePools } = await (0, get_candidate_pools_1.getV2CandidatePools)({
-            tokenIn,
-            tokenOut,
-            tokenProvider: this.tokenProvider,
-            blockedTokenListProvider: this.blockedTokenListProvider,
-            poolProvider: this.v2PoolProvider,
-            routeType: tradeType,
-            subgraphProvider: this.v2SubgraphProvider,
-            routingConfig,
-            chainId: this.chainId,
-        });
+        const { poolAccessor, candidatePools } = v2CandidatePools;
         const poolsRaw = poolAccessor.getAllPools();
         // Drop any pools that contain tokens that can not be transferred according to the token validator.
         const pools = await this.applyTokenValidatorToPools(poolsRaw, (token, tokenValidation) => {
@@ -55,12 +46,14 @@ class V2Quoter extends base_quoter_1.BaseQuoter {
         // Given all our candidate pools, compute all the possible ways to route from tokenIn to tokenOut.
         const { maxSwapsPerPath } = routingConfig;
         const routes = (0, compute_all_routes_1.computeAllV2Routes)(tokenIn, tokenOut, pools, maxSwapsPerPath);
+        util_1.metric.putMetric('V2GetRoutesLoad', Date.now() - beforeGetRoutes, util_1.MetricLoggerUnit.Milliseconds);
         return {
             routes,
             candidatePools,
         };
     }
     async getQuotes(routes, amounts, percents, quoteToken, tradeType, _routingConfig, candidatePools, _gasModel, gasPriceWei) {
+        const beforeGetQuotes = Date.now();
         util_1.log.info('Starting to get V2 quotes');
         if (gasPriceWei === undefined) {
             throw new Error('GasPriceWei for V2Routes is required to getQuotes');
@@ -80,6 +73,7 @@ class V2Quoter extends base_quoter_1.BaseQuoter {
             gasPriceWei,
             poolProvider: this.v2PoolProvider,
             token: quoteToken,
+            // TODO: implement wrap overhead for v2 routes
         });
         util_1.metric.putMetric('V2QuotesLoad', Date.now() - beforeQuotes, util_1.MetricLoggerUnit.Milliseconds);
         util_1.metric.putMetric('V2QuotesFetched', (0, lodash_1.default)(routesWithQuotes)
@@ -112,11 +106,22 @@ class V2Quoter extends base_quoter_1.BaseQuoter {
                 routesWithValidQuotes.push(routeWithValidQuote);
             }
         }
+        util_1.metric.putMetric('V2GetQuotesLoad', Date.now() - beforeGetQuotes, util_1.MetricLoggerUnit.Milliseconds);
         return {
             routesWithValidQuotes,
-            candidatePools
+            candidatePools,
         };
     }
+    async refreshRoutesThenGetQuotes(tokenIn, tokenOut, routes, amounts, percents, quoteToken, tradeType, routingConfig, gasPriceWei) {
+        const tokenPairs = [];
+        routes.forEach((route) => route.pairs.forEach((pair) => tokenPairs.push([pair.token0, pair.token1])));
+        return this.v2PoolProvider
+            .getPools(tokenPairs, routingConfig)
+            .then((poolAccesor) => {
+            const routes = (0, compute_all_routes_1.computeAllV2Routes)(tokenIn, tokenOut, poolAccesor.getAllPools(), routingConfig.maxSwapsPerPath);
+            return this.getQuotes(routes, amounts, percents, quoteToken, tradeType, routingConfig, undefined, undefined, gasPriceWei);
+        });
+    }
 }
 exports.V2Quoter = V2Quoter;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjItcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLGdEQUF3RTtBQUN4RSxvREFBdUI7QUFFdkIsa0RBUTRCO0FBQzVCLHdDQUE2RjtBQUc3RiwwQ0FBb0Q7QUFDcEQsd0VBQXFFO0FBQ3JFLDBFQUEwRztBQUcxRywrQ0FBMkM7QUFJM0MsTUFBYSxRQUFTLFNBQVEsd0JBQW1CO0lBTS9DLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLGVBQWlDLEVBQ2pDLGlCQUFxQyxFQUNyQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FBQyxhQUFhLEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLHNCQUFzQixDQUFDLENBQUM7UUFDaEYsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztJQUM3QyxDQUFDO0lBRVMsS0FBSyxDQUFDLFNBQVMsQ0FDdkIsT0FBYyxFQUNkLFFBQWUsRUFDZixTQUFvQixFQUNwQixhQUFnQztRQUVoQyw2RUFBNkU7UUFDN0UsOEVBQThFO1FBQzlFLHlCQUF5QjtRQUN6QixNQUFNLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxHQUFHLE1BQU0sSUFBQSx5Q0FBbUIsRUFBQztZQUNqRSxPQUFPO1lBQ1AsUUFBUTtZQUNSLGFBQWEsRUFBRSxJQUFJLENBQUMsYUFBYTtZQUNqQyx3QkFBd0IsRUFBRSxJQUFJLENBQUMsd0JBQXdCO1lBQ3ZELFlBQVksRUFBRSxJQUFJLENBQUMsY0FB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjItcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLG9EQUErQztBQUMvQyxnREFBd0U7QUFDeEUsb0RBQXVCO0FBRXZCLGtEQVE0QjtBQUM1Qix3Q0FBOEY7QUFHOUYsMENBQW9EO0FBQ3BELHdFQUFxRTtBQUlyRSwrQ0FBMkM7QUFJM0MsTUFBYSxRQUFTLFNBQVEsd0JBQXFDO0lBTWpFLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLGVBQWlDLEVBQ2pDLGlCQUFxQyxFQUNyQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FDSCxhQUFhLEVBQ2IsT0FBTyxFQUNQLHFCQUFRLENBQUMsRUFBRSxFQUNYLHdCQUF3QixFQUN4QixzQkFBc0IsQ0FDdkIsQ0FBQztRQUNGLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsZUFBZSxHQUFHLGVBQWUsQ0FBQztRQUN2QyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsaUJBQWlCLENBQUM7SUFDN0MsQ0FBQztJQUVTLEtBQUssQ0FBQyxTQUFTLENBQ3ZCLE9BQWMsRUFDZCxRQUFlLEVBQ2YsZ0JBQWtDLEVBQ2xDLFVBQXFCLEVBQ3JCLGFBQWdDO1FBRWhDLE1BQU0sZUFBZSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNuQyw2RUFBNkU7UUFDN0UsOEVBQThFO1FBQzlFLHlCQUF5QjtRQUN6QixNQUFNLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxHQUFHLGdCQUFnQixDQUFDO1FBQzFELE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.d.ts
index 7def6da..39550d6 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.d.ts
@@ -4,16 +4,16 @@ import { CurrencyAmount } from '../../../util';
 import { V3Route } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { V3RouteWithValidQuote } from '../entities';
-import { CandidatePoolsBySelectionCriteria } from '../functions/get-candidate-pools';
+import { CandidatePoolsBySelectionCriteria, V3CandidatePools } from '../functions/get-candidate-pools';
 import { IGasModel } from '../gas-models';
 import { BaseQuoter } from './base-quoter';
 import { GetQuotesResult } from './model/results/get-quotes-result';
 import { GetRoutesResult } from './model/results/get-routes-result';
-export declare class V3Quoter extends BaseQuoter<V3Route> {
+export declare class V3Quoter extends BaseQuoter<V3CandidatePools, V3Route> {
     protected v3SubgraphProvider: IV3SubgraphProvider;
     protected v3PoolProvider: IV3PoolProvider;
     protected onChainQuoteProvider: IOnChainQuoteProvider;
     constructor(v3SubgraphProvider: IV3SubgraphProvider, v3PoolProvider: IV3PoolProvider, onChainQuoteProvider: IOnChainQuoteProvider, tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
-    protected getRoutes(tokenIn: Token, tokenOut: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<V3Route>>;
+    protected getRoutes(tokenIn: Token, tokenOut: Token, v3CandidatePools: V3CandidatePools, _tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<V3Route>>;
     getQuotes(routes: V3Route[], amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig, candidatePools?: CandidatePoolsBySelectionCriteria, gasModel?: IGasModel<V3RouteWithValidQuote>): Promise<GetQuotesResult>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.js b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.js
index 2521629..10314f1 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/alpha-router/quoters/v3-quoter.js
@@ -4,36 +4,27 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.V3Quoter = void 0;
+const router_sdk_1 = require("@uniswap/router-sdk");
 const sdk_core_1 = require("@uniswap/sdk-core");
 const lodash_1 = __importDefault(require("lodash"));
 const providers_1 = require("../../../providers");
 const util_1 = require("../../../util");
 const entities_1 = require("../entities");
 const compute_all_routes_1 = require("../functions/compute-all-routes");
-const get_candidate_pools_1 = require("../functions/get-candidate-pools");
 const base_quoter_1 = require("./base-quoter");
 class V3Quoter extends base_quoter_1.BaseQuoter {
     constructor(v3SubgraphProvider, v3PoolProvider, onChainQuoteProvider, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
-        super(tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider);
+        super(tokenProvider, chainId, router_sdk_1.Protocol.V3, blockedTokenListProvider, tokenValidatorProvider);
         this.v3SubgraphProvider = v3SubgraphProvider;
         this.v3PoolProvider = v3PoolProvider;
         this.onChainQuoteProvider = onChainQuoteProvider;
     }
-    async getRoutes(tokenIn, tokenOut, tradeType, routingConfig) {
+    async getRoutes(tokenIn, tokenOut, v3CandidatePools, _tradeType, routingConfig) {
+        const beforeGetRoutes = Date.now();
         // Fetch all the pools that we will consider routing via. There are thousands
         // of pools, so we filter them to a set of candidate pools that we expect will
         // result in good prices.
-        const { poolAccessor, candidatePools } = await (0, get_candidate_pools_1.getV3CandidatePools)({
-            tokenIn,
-            tokenOut,
-            tokenProvider: this.tokenProvider,
-            blockedTokenListProvider: this.blockedTokenListProvider,
-            poolProvider: this.v3PoolProvider,
-            routeType: tradeType,
-            subgraphProvider: this.v3SubgraphProvider,
-            routingConfig,
-            chainId: this.chainId,
-        });
+        const { poolAccessor, candidatePools } = v3CandidatePools;
         const poolsRaw = poolAccessor.getAllPools();
         // Drop any pools that contain fee on transfer tokens (not supported by v3) or have issues with being transferred.
         const pools = await this.applyTokenValidatorToPools(poolsRaw, (token, tokenValidation) => {
@@ -56,12 +47,14 @@ class V3Quoter extends base_quoter_1.BaseQuoter {
         // Given all our candidate pools, compute all the possible ways to route from tokenIn to tokenOut.
         const { maxSwapsPerPath } = routingConfig;
         const routes = (0, compute_all_routes_1.computeAllV3Routes)(tokenIn, tokenOut, pools, maxSwapsPerPath);
+        util_1.metric.putMetric('V3GetRoutesLoad', Date.now() - beforeGetRoutes, util_1.MetricLoggerUnit.Milliseconds);
         return {
             routes,
             candidatePools,
         };
     }
     async getQuotes(routes, amounts, percents, quoteToken, tradeType, routingConfig, candidatePools, gasModel) {
+        const beforeGetQuotes = Date.now();
         util_1.log.info('Starting to get V3 quotes');
         if (gasModel === undefined) {
             throw new Error('GasModel for V3RouteWithValidQuote is required to getQuotes');
@@ -115,6 +108,7 @@ class V3Quoter extends base_quoter_1.BaseQuoter {
                 routesWithValidQuotes.push(routeWithValidQuote);
             }
         }
+        util_1.metric.putMetric('V3GetQuotesLoad', Date.now() - beforeGetQuotes, util_1.MetricLoggerUnit.Milliseconds);
         return {
             routesWithValidQuotes,
             candidatePools
@@ -122,4 +116,4 @@ class V3Quoter extends base_quoter_1.BaseQuoter {
     }
 }
 exports.V3Quoter = V3Quoter;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjMtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGdEQUF3RTtBQUN4RSxvREFBdUI7QUFFdkIsa0RBUTRCO0FBQzVCLHdDQUE2RjtBQUc3RiwwQ0FBb0Q7QUFDcEQsd0VBQXFFO0FBQ3JFLDBFQUEwRztBQUcxRywrQ0FBMkM7QUFJM0MsTUFBYSxRQUFTLFNBQVEsd0JBQW1CO0lBSy9DLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLG9CQUEyQyxFQUMzQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FBQyxhQUFhLEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLHNCQUFzQixDQUFDLENBQUM7UUFDaEYsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztJQUNuRCxDQUFDO0lBRVMsS0FBSyxDQUFDLFNBQVMsQ0FDdkIsT0FBYyxFQUNkLFFBQWUsRUFDZixTQUFvQixFQUNwQixhQUFnQztRQUVoQyw2RUFBNkU7UUFDN0UsOEVBQThFO1FBQzlFLHlCQUF5QjtRQUN6QixNQUFNLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBRSxHQUFHLE1BQU0sSUFBQSx5Q0FBbUIsRUFBQztZQUNqRSxPQUFPO1lBQ1AsUUFBUTtZQUNSLGFBQWEsRUFBRSxJQUFJLENBQUMsYUFBYTtZQUNqQyx3QkFBd0IsRUFBRSxJQUFJLENBQUMsd0JBQXdCO1lBQ3ZELFlBQVksRUFBRSxJQUFJLENBQUMsY0FBYztZQUNqQyxTQUFTLEVBQUUsU0FBUztZQUNwQixnQkFBZ0IsRUFBRSxJQUFJLENB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjMtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9EQUErQztBQUMvQyxnREFBd0U7QUFDeEUsb0RBQXVCO0FBRXZCLGtEQVE0QjtBQUM1Qix3Q0FBNkY7QUFHN0YsMENBQW9EO0FBQ3BELHdFQUFxRTtBQUlyRSwrQ0FBMkM7QUFJM0MsTUFBYSxRQUFTLFNBQVEsd0JBQXFDO0lBS2pFLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLG9CQUEyQyxFQUMzQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FBQyxhQUFhLEVBQUUsT0FBTyxFQUFFLHFCQUFRLENBQUMsRUFBRSxFQUFFLHdCQUF3QixFQUFFLHNCQUFzQixDQUFDLENBQUM7UUFDN0YsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztJQUNuRCxDQUFDO0lBRVMsS0FBSyxDQUFDLFNBQVMsQ0FDdkIsT0FBYyxFQUNkLFFBQWUsRUFDZixnQkFBa0MsRUFDbEMsVUFBcUIsRUFDckIsYUFBZ0M7UUFFaEMsTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1FBQ25DLDZFQUE2RTtRQUM3RSw4RUFBOEU7UUFDOUUseUJBQXlCO1FBQ3pCLE1BQU0sRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLEdBQUcsZ0JBQWdCLENBQUM7UUFDMUQsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBRTVDLGtIQUFrSDtRQUNsSCxNQUFNLEtBQUssR0FBRyxNQUFNLElBQUksQ0FB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.d.ts
index 88d38ff..3467b5f 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.d.ts
@@ -56,6 +56,9 @@ export declare const ADDITIONAL_BASES: (tokenProvider: ITokenProvider) => Promis
     8453?: {
         [tokenAddress: string]: Token[];
     } | undefined;
+    1024?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
 }>;
 /**
  * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these
@@ -113,5 +116,8 @@ export declare const CUSTOM_BASES: (tokenProvider: ITokenProvider) => Promise<{
     8453?: {
         [tokenAddress: string]: Token[];
     } | undefined;
+    1024?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
 }>;
 export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.js b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.js
index 94db888..49379d7 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/legacy-router/bases.js
@@ -41,6 +41,7 @@ const BASES_TO_CHECK_TRADES_AGAINST = (_tokenProvider) => {
         [sdk_core_1.ChainId.AVALANCHE]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.AVALANCHE], token_provider_1.USDC_AVAX, token_provider_1.DAI_AVAX],
         [sdk_core_1.ChainId.BASE]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BASE], token_provider_1.USDC_BASE],
         [sdk_core_1.ChainId.BASE_GOERLI]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.BASE_GOERLI]],
+        [sdk_core_1.ChainId.TENET]: [chains_1.WRAPPED_NATIVE_CURRENCY[sdk_core_1.ChainId.TENET]],
     };
 };
 exports.BASES_TO_CHECK_TRADES_AGAINST = BASES_TO_CHECK_TRADES_AGAINST;
@@ -69,4 +70,4 @@ const CUSTOM_BASES = async (tokenProvider) => {
     };
 };
 exports.CUSTOM_BASES = CUSTOM_BASES;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcm91dGVycy9sZWdhY3ktcm91dGVyL2Jhc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZEQUE2RDtBQUM3RCxnREFBbUQ7QUFFbkQsbUVBaUJ3QztBQUN4Qyw4Q0FBNEQ7QUFNckQsTUFBTSw2QkFBNkIsR0FBRyxDQUMzQyxjQUE4QixFQUNkLEVBQUU7SUFDbEIsT0FBTztRQUNMLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUNqQixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRTtZQUN6Qyw0QkFBVztZQUNYLDZCQUFZO1lBQ1osNkJBQVk7WUFDWiw2QkFBWTtTQUNiO1FBQ0QsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxNQUFNLENBQUUsQ0FBQztRQUM1RCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRSxDQUFDO1FBQzlELENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFFLENBQUM7UUFDaEUsQ0FBQyxrQkFBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFO1lBQ3pCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFFO1NBQ2xEO1FBQ0QsQ0FBQyxrQkFBTyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUUsQ0FBQztRQUN4RSxDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFDLEVBQUU7WUFDekIsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUU7U0FDbEQ7UUFDRCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQywrQkFBYyxDQUFD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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcm91dGVycy9sZWdhY3ktcm91dGVyL2Jhc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZEQUE2RDtBQUM3RCxnREFBbUQ7QUFFbkQsbUVBaUJ3QztBQUN4Qyw4Q0FBNEQ7QUFNckQsTUFBTSw2QkFBNkIsR0FBRyxDQUMzQyxjQUE4QixFQUNkLEVBQUU7SUFDbEIsT0FBTztRQUNMLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUNqQixnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRTtZQUN6Qyw0QkFBVztZQUNYLDZCQUFZO1lBQ1osNkJBQVk7WUFDWiw2QkFBWTtTQUNiO1FBQ0QsQ0FBQyxrQkFBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxNQUFNLENBQUUsQ0FBQztRQUM1RCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxnQ0FBdUIsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBRSxDQUFDO1FBQzlELENBQUMsa0JBQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsUUFBUSxDQUFFLENBQUM7UUFDaEUsQ0FBQyxrQkFBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFO1lBQ3pCLGdDQUF1QixDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFFO1NBQ2xEO1FBQ0QsQ0FBQyxrQkFBTyxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxZQUFZLENBQUUsQ0FBQztRQUN4RSxDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFDLEVBQUU7WUFDekIsZ0NBQXVCLENBQUMsa0JBQU8sQ0FBQyxlQUFlLENBQUU7U0FDbEQ7UUFDRCxDQUFDLGtCQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQywrQkFBYyxDQUFD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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/router.d.ts b/node_modules/@uniswap/smart-order-router/build/main/routers/router.d.ts
index c36c874..fe67d61 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/router.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/router.d.ts
@@ -69,6 +69,11 @@ export declare type SwapRoute = {
      * 2 if simulation was successful (simulated gas estimates are returned)
      */
     simulationStatus?: SimulationStatus;
+    /**
+     * Used internally within routing-api to see how many route requests
+     * hit the cached routes. This is used further down the line for future perf optimizations.
+     */
+    hitsCachedRoute?: boolean;
 };
 export declare type MethodParameters = SDKMethodParameters & {
     to: string;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/routers/router.js b/node_modules/@uniswap/smart-order-router/build/main/routers/router.js
index 0491a08..ad26ecb 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/routers/router.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/routers/router.js
@@ -49,4 +49,4 @@ exports.IRouter = IRouter;
 class ISwapToRatio {
 }
 exports.ISwapToRatio = ISwapToRatio;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcnMvcm91dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLG9EQUs2QjtBQVM3Qiw0Q0FBc0Q7QUFDdEQsNENBS3lCO0FBT3pCLE1BQWEsT0FBUSxTQUFRLGNBQXdCO0lBQXJEOztRQUNFLGFBQVEsR0FBZ0IscUJBQVEsQ0FBQyxFQUFFLENBQUM7SUFDdEMsQ0FBQztDQUFBO0FBRkQsMEJBRUM7QUFDRCxNQUFhLE9BQVEsU0FBUSxjQUF3QjtJQUFyRDs7UUFDRSxhQUFRLEdBQWdCLHFCQUFRLENBQUMsRUFBRSxDQUFDO0lBQ3RDLENBQUM7Q0FBQTtBQUZELDBCQUVDO0FBQ0QsTUFBYSxVQUFXLFNBQVEsMEJBQTJCO0lBQTNEOztRQUNFLGFBQVEsR0FBbUIscUJBQVEsQ0FBQyxLQUFLLENBQUM7SUFDNUMsQ0FBQztDQUFBO0FBRkQsZ0NBRUM7QUFnRUQsSUFBWSxpQkFJWDtBQUpELFdBQVksaUJBQWlCO0lBQzNCLCtEQUFXLENBQUE7SUFDWCw2RUFBa0IsQ0FBQTtJQUNsQiw2RUFBa0IsQ0FBQTtBQUNwQixDQUFDLEVBSlcsaUJBQWlCLEdBQWpCLHlCQUFpQixLQUFqQix5QkFBaUIsUUFJNUI7QUFxQkQsSUFBWSxRQUdYO0FBSEQsV0FBWSxRQUFRO0lBQ2xCLCtEQUFnQixDQUFBO0lBQ2hCLDJEQUFjLENBQUE7QUFDaEIsQ0FBQyxFQUhXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBR25CO0FBMEREOzs7Ozs7R0FNRztBQUNILE1BQXNCLE9BQU87Q0FvQjVCO0FBcEJELDBCQW9CQztBQUVELE1BQXNCLFlBQVk7Q0FTakM7QUFURCxvQ0FTQyJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcnMvcm91dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLG9EQUs2QjtBQVM3Qiw0Q0FBc0Q7QUFDdEQsNENBS3lCO0FBT3pCLE1BQWEsT0FBUSxTQUFRLGNBQXdCO0lBQXJEOztRQUNFLGFBQVEsR0FBZ0IscUJBQVEsQ0FBQyxFQUFFLENBQUM7SUFDdEMsQ0FBQztDQUFBO0FBRkQsMEJBRUM7QUFDRCxNQUFhLE9BQVEsU0FBUSxjQUF3QjtJQUFyRDs7UUFDRSxhQUFRLEdBQWdCLHFCQUFRLENBQUMsRUFBRSxDQUFDO0lBQ3RDLENBQUM7Q0FBQTtBQUZELDBCQUVDO0FBQ0QsTUFBYSxVQUFXLFNBQVEsMEJBQTJCO0lBQTNEOztRQUNFLGFBQVEsR0FBbUIscUJBQVEsQ0FBQyxLQUFLLENBQUM7SUFDNUMsQ0FBQztDQUFBO0FBRkQsZ0NBRUM7QUFxRUQsSUFBWSxpQkFJWDtBQUpELFdBQVksaUJBQWlCO0lBQzNCLCtEQUFXLENBQUE7SUFDWCw2RUFBa0IsQ0FBQTtJQUNsQiw2RUFBa0IsQ0FBQTtBQUNwQixDQUFDLEVBSlcsaUJBQWlCLEdBQWpCLHlCQUFpQixLQUFqQix5QkFBaUIsUUFJNUI7QUFxQkQsSUFBWSxRQUdYO0FBSEQsV0FBWSxRQUFRO0lBQ2xCLCtEQUFnQixDQUFBO0lBQ2hCLDJEQUFjLENBQUE7QUFDaEIsQ0FBQyxFQUhXLFFBQVEsR0FBUixnQkFBUSxLQUFSLGdCQUFRLFFBR25CO0FBMEREOzs7Ozs7R0FNRztBQUNILE1BQXNCLE9BQU87Q0FvQjVCO0FBcEJELDBCQW9CQztBQUVELE1BQXNCLFlBQVk7Q0FTakM7QUFURCxvQ0FTQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/tsconfig.tsbuildinfo b/node_modules/@uniswap/smart-order-router/build/main/tsconfig.tsbuildinfo
index 6006839..2bbb6d3 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/tsconfig.tsbuildinfo
+++ b/node_modules/@uniswap/smart-order-router/build/main/tsconfig.tsbuildinfo
@@ -1 +1 @@
-{"program":{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../src/providers/cache.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostic_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/util/types.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/globals.global.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/ts3.6/base.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/base.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/node-cache/index.d.ts","../../src/providers/cache-node.ts","../../node_modules/@uniswap/sdk-core/dist/chains.d.ts","../../node_modules/@uniswap/sdk-core/dist/addresses.d.ts","../../node_modules/jsbi/jsbi.d.ts","../../node_modules/@uniswap/sdk-core/dist/constants.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/token.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/basecurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/nativecurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/currency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyamount.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/price.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/ether.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/weth9.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/computepriceimpact.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sortedinsert.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sqrt.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/validateandparseaddress.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/index.d.ts","../../node_modules/@types/bunyan/index.d.ts","../../src/util/log.ts","../../node_modules/@ethersproject/bytes/lib/index.d.ts","../../node_modules/@ethersproject/bignumber/lib/bignumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/fixednumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/index.d.ts","../../src/providers/gas-price-provider.ts","../../src/providers/caching-gas-provider.ts","../../node_modules/@uniswap/token-lists/dist/tokenlist.schema.json","../../node_modules/@uniswap/token-lists/dist/types.d.ts","../../node_modules/@uniswap/token-lists/dist/isversionupdate.d.ts","../../node_modules/@uniswap/token-lists/dist/getversionupgrade.d.ts","../../node_modules/@uniswap/token-lists/dist/difftokenlists.d.ts","../../node_modules/@uniswap/token-lists/dist/minversionbump.d.ts","../../node_modules/@uniswap/token-lists/dist/nextversion.d.ts","../../node_modules/@uniswap/token-lists/dist/versioncomparator.d.ts","../../node_modules/@uniswap/token-lists/dist/index.d.ts","../../node_modules/axios/index.d.ts","../../node_modules/@types/lodash/common/common.d.ts","../../node_modules/@types/lodash/common/array.d.ts","../../node_modules/@types/lodash/common/collection.d.ts","../../node_modules/@types/lodash/common/date.d.ts","../../node_modules/@types/lodash/common/function.d.ts","../../node_modules/@types/lodash/common/lang.d.ts","../../node_modules/@types/lodash/common/math.d.ts","../../node_modules/@types/lodash/common/number.d.ts","../../node_modules/@types/lodash/common/object.d.ts","../../node_modules/@types/lodash/common/seq.d.ts","../../node_modules/@types/lodash/common/string.d.ts","../../node_modules/@types/lodash/common/util.d.ts","../../node_modules/@types/lodash/index.d.ts","../../src/util/metric.ts","../../node_modules/@ethersproject/abi/lib/fragments.d.ts","../../node_modules/@ethersproject/abi/lib/coders/abstract-coder.d.ts","../../node_modules/@ethersproject/abi/lib/abi-coder.d.ts","../../node_modules/@ethersproject/properties/lib/index.d.ts","../../node_modules/@ethersproject/abi/lib/interface.d.ts","../../node_modules/@ethersproject/abi/lib/index.d.ts","../../node_modules/@ethersproject/strings/lib/bytes32.d.ts","../../node_modules/@ethersproject/strings/lib/idna.d.ts","../../node_modules/@ethersproject/strings/lib/utf8.d.ts","../../node_modules/@ethersproject/strings/lib/index.d.ts","../../node_modules/@ethersproject/networks/lib/types.d.ts","../../node_modules/@ethersproject/networks/lib/index.d.ts","../../node_modules/@ethersproject/transactions/lib/index.d.ts","../../node_modules/@ethersproject/web/lib/index.d.ts","../../node_modules/@ethersproject/abstract-provider/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/formatter.d.ts","../../node_modules/@ethersproject/providers/lib/base-provider.d.ts","../../node_modules/@ethersproject/abstract-signer/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/websocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/url-json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/alchemy-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ankr-provider.d.ts","../../node_modules/@ethersproject/providers/lib/cloudflare-provider.d.ts","../../node_modules/@ethersproject/providers/lib/etherscan-provider.d.ts","../../node_modules/@ethersproject/providers/lib/fallback-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ipc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/infura-provider.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-batch-provider.d.ts","../../node_modules/@ethersproject/providers/lib/nodesmith-provider.d.ts","../../node_modules/@ethersproject/providers/lib/pocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/web3-provider.d.ts","../../node_modules/@ethersproject/providers/lib/index.d.ts","../../node_modules/@ethersproject/contracts/lib/index.d.ts","../../node_modules/@ethersproject/logger/lib/index.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlist.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlists.d.ts","../../node_modules/@ethersproject/wordlists/lib/index.d.ts","../../node_modules/@ethersproject/hdnode/lib/index.d.ts","../../node_modules/@ethersproject/signing-key/lib/index.d.ts","../../node_modules/@ethersproject/json-wallets/lib/crowdsale.d.ts","../../node_modules/@ethersproject/json-wallets/lib/inspect.d.ts","../../node_modules/@ethersproject/json-wallets/lib/keystore.d.ts","../../node_modules/@ethersproject/json-wallets/lib/index.d.ts","../../node_modules/@ethersproject/wallet/lib/index.d.ts","../../node_modules/@ethersproject/constants/lib/addresses.d.ts","../../node_modules/@ethersproject/constants/lib/bignumbers.d.ts","../../node_modules/@ethersproject/constants/lib/hashes.d.ts","../../node_modules/@ethersproject/constants/lib/strings.d.ts","../../node_modules/@ethersproject/constants/lib/index.d.ts","../../node_modules/@ethersproject/address/lib/index.d.ts","../../node_modules/@ethersproject/base64/lib/base64.d.ts","../../node_modules/@ethersproject/base64/lib/index.d.ts","../../node_modules/@ethersproject/basex/lib/index.d.ts","../../node_modules/@ethersproject/hash/lib/id.d.ts","../../node_modules/@ethersproject/hash/lib/namehash.d.ts","../../node_modules/@ethersproject/hash/lib/message.d.ts","../../node_modules/@ethersproject/hash/lib/typed-data.d.ts","../../node_modules/@ethersproject/hash/lib/index.d.ts","../../node_modules/@ethersproject/keccak256/lib/index.d.ts","../../node_modules/@ethersproject/sha2/lib/types.d.ts","../../node_modules/@ethersproject/sha2/lib/sha2.d.ts","../../node_modules/@ethersproject/sha2/lib/index.d.ts","../../node_modules/@ethersproject/solidity/lib/index.d.ts","../../node_modules/@ethersproject/random/lib/random.d.ts","../../node_modules/@ethersproject/random/lib/shuffle.d.ts","../../node_modules/@ethersproject/random/lib/index.d.ts","../../node_modules/@ethersproject/rlp/lib/index.d.ts","../../node_modules/@ethersproject/units/lib/index.d.ts","../../node_modules/ethers/lib/utils.d.ts","../../node_modules/ethers/lib/_version.d.ts","../../node_modules/ethers/lib/ethers.d.ts","../../node_modules/ethers/lib/index.d.ts","../../src/types/v3/commons.ts","../../src/types/v3/ierc20metadata.d.ts","../../src/types/v3/factories/ierc20metadata__factory.ts","../../node_modules/@uniswap/v3-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tickdataprovider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/ticklistdataprovider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/calldata.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/computepooladdress.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encoderoutetopath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encodesqrtratiox96.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/fullmath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/issorted.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/liquiditymath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/maxliquidityforamounts.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/mostsignificantbit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/nearestusabletick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/pricetickconversions.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/sqrtpricemath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/swapmath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/ticklibrary.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/ticklist.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickmath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/multicall.d.ts","../../node_modules/@uniswap/v3-sdk/dist/selfpermit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/nonfungiblepositionmanager.d.ts","../../node_modules/@uniswap/v3-sdk/dist/payments.d.ts","../../node_modules/@uniswap/v3-sdk/dist/quoter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/staker.d.ts","../../node_modules/@uniswap/v3-sdk/dist/swaprouter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/index.d.ts","../../src/util/chains.ts","../../src/util/addresses.ts","../../src/util/amounts.ts","../../node_modules/@uniswap/router-sdk/dist/constants.d.ts","../../node_modules/@uniswap/router-sdk/dist/approveandcall.d.ts","../../node_modules/@uniswap/router-sdk/dist/multicallextended.d.ts","../../node_modules/@uniswap/router-sdk/dist/paymentsextended.d.ts","../../node_modules/@uniswap/v2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v2-sdk/dist/errors.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/pair.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v2-sdk/dist/router.d.ts","../../node_modules/@uniswap/v2-sdk/dist/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedroute/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/protocol.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedroute/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/swaprouter.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/encodemixedroutetopath.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/index.d.ts","../../src/util/protocols.ts","../../node_modules/@uniswap/default-token-list/build/uniswap-default.tokenlist.json","../../node_modules/@types/retry/index.d.ts","../../node_modules/@types/async-retry/index.d.ts","../../src/providers/provider.ts","../../src/types/other/commons.ts","../../src/types/other/itokenvalidator.d.ts","../../src/types/other/factories/itokenvalidator__factory.ts","../../src/providers/multicall-provider.ts","../../src/providers/token-validator-provider.ts","../../src/types/v2/commons.ts","../../src/types/v2/iuniswapv2pair.d.ts","../../src/types/v2/factories/iuniswapv2pair__factory.ts","../../src/providers/v2/pool-provider.ts","../../src/types/other/gasdataarbitrum.d.ts","../../src/types/other/factories/gasdataarbitrum__factory.ts","../../src/types/other/gaspriceoracle.d.ts","../../src/types/other/factories/gaspriceoracle__factory.ts","../../src/providers/v3/gas-data-provider.ts","../../src/types/v3/iuniswapv3poolstate.d.ts","../../src/types/v3/factories/iuniswapv3poolstate__factory.ts","../../src/providers/v3/pool-provider.ts","../../node_modules/@types/await-timeout/index.d.ts","../../node_modules/graphql/language/source.d.ts","../../node_modules/graphql/language/tokenkind.d.ts","../../node_modules/graphql/language/ast.d.ts","../../node_modules/graphql-request/dist/types.d.ts","../../node_modules/graphql-request/dist/types.dom.d.ts","../../node_modules/graphql-request/dist/index.d.ts","../../src/providers/v2/subgraph-provider.ts","../../src/providers/v3/subgraph-provider.ts","../../src/types/other/erc20.d.ts","../../src/types/other/factories/erc20__factory.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/routercommands.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/command.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/allowancetransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/signaturetransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/allowanceprovider.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/index.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/inputtokens.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/seaport.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/foundation.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nftx.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nft20.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/sudoswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/cryptopunk.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/x2y2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/element-market.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/looksrarev2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/nfttrade.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/uniswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/swaprouter.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/unwrapweth.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/constants.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/index.d.ts","../../src/routers/router.ts","../../src/routers/legacy-router/bases.ts","../../src/routers/legacy-router/legacy-router.ts","../../src/routers/legacy-router/index.ts","../../src/routers/index.ts","../../src/util/methodparameters.ts","../../src/util/gas-factory-helpers.ts","../../src/util/unsupported-tokens.ts","../../src/routers/alpha-router/config.ts","../../src/routers/alpha-router/gas-models/gas-model.ts","../../src/routers/alpha-router/entities/route-with-valid-quote.ts","../../node_modules/mnemonist/utils/types.d.ts","../../node_modules/mnemonist/fixed-reverse-heap.d.ts","../../node_modules/mnemonist/queue.d.ts","../../src/routers/alpha-router/gas-models/v3/gas-costs.ts","../../src/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/index.ts","../../src/routers/alpha-router/functions/best-swap-route.ts","../../src/routers/alpha-router/functions/calculate-ratio-amount-in.ts","../../src/routers/alpha-router/functions/get-candidate-pools.ts","../../src/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/mixedroute/mixed-route-heuristic-gas-model.ts","../../src/routers/alpha-router/quoters/model/results/get-routes-result.ts","../../src/routers/alpha-router/entities/index.ts","../../src/routers/alpha-router/quoters/model/results/get-quotes-result.ts","../../src/routers/alpha-router/quoters/model/results/index.ts","../../src/routers/alpha-router/quoters/model/index.ts","../../src/routers/alpha-router/quoters/base-quoter.ts","../../src/routers/alpha-router/functions/compute-all-routes.ts","../../src/routers/alpha-router/quoters/v2-quoter.ts","../../src/routers/alpha-router/quoters/v3-quoter.ts","../../src/routers/alpha-router/quoters/mixed-quoter.ts","../../src/routers/alpha-router/quoters/index.ts","../../src/routers/alpha-router/alpha-router.ts","../../src/routers/alpha-router/index.ts","../../src/util/routes.ts","../../src/util/index.ts","../../src/providers/token-provider.ts","../../src/providers/caching-token-list-provider.ts","../../src/providers/caching-token-provider.ts","../../src/providers/eip-1559-gas-price-provider.ts","../../src/types/other/permit2.d.ts","../../src/types/other/factories/permit2__factory.ts","../../src/providers/simulation-provider.ts","../../src/providers/eth-estimate-gas-provider.ts","../../src/providers/eth-gas-station-info-gas-price-provider.ts","../../src/providers/legacy-gas-price-provider.ts","../../node_modules/@types/stats-lite/index.d.ts","../../src/types/v3/uniswapinterfacemulticall.d.ts","../../src/types/v3/factories/uniswapinterfacemulticall__factory.ts","../../src/providers/multicall-uniswap-provider.ts","../../src/providers/on-chain-gas-price-provider.ts","../../src/types/other/imixedroutequoterv1.d.ts","../../src/types/other/factories/imixedroutequoterv1__factory.ts","../../src/types/v3/iquoterv2.d.ts","../../src/types/v3/factories/iquoterv2__factory.ts","../../src/providers/on-chain-quote-provider.ts","../../src/providers/static-gas-price-provider.ts","../../src/types/other/swaprouter02.d.ts","../../src/types/other/factories/swaprouter02__factory.ts","../../src/providers/swap-router-provider.ts","../../src/util/calldata.ts","../../src/providers/tenderly-simulation-provider.ts","../../src/providers/uri-subgraph-provider.ts","../../src/providers/caching/route/model/cached-route.ts","../../src/providers/caching/route/model/cached-routes.ts","../../src/providers/caching/route/model/cache-mode.ts","../../src/providers/caching/route/model/index.ts","../../src/providers/caching/route/route-caching-provider.ts","../../src/providers/caching/route/index.ts","../../src/providers/v2/caching-pool-provider.ts","../../src/providers/v2/caching-subgraph-provider.ts","../../src/providers/v2/quote-provider.ts","../../src/providers/v2/static-subgraph-provider.ts","../../src/providers/v2/subgraph-provider-with-fallback.ts","../../src/providers/v2/uri-subgraph-provider.ts","../../src/providers/v3/caching-pool-provider.ts","../../src/providers/v3/caching-subgraph-provider.ts","../../src/providers/v3/static-subgraph-provider.ts","../../src/providers/v3/subgraph-provider-with-fallback.ts","../../src/providers/v3/uri-subgraph-provider.ts","../../src/providers/index.ts","../../src/index.ts","../../node_modules/chalk/index.d.ts","../../node_modules/jest-diff/build/cleanupsemantic.d.ts","../../node_modules/pretty-format/build/types.d.ts","../../node_modules/pretty-format/build/index.d.ts","../../node_modules/jest-diff/build/types.d.ts","../../node_modules/jest-diff/build/difflines.d.ts","../../node_modules/jest-diff/build/printdiffs.d.ts","../../node_modules/jest-diff/build/index.d.ts","../../node_modules/jest-matcher-utils/build/index.d.ts","../../node_modules/@types/jest/index.d.ts"],"fileInfos":[{"version":"f5c28122bee592cfaf5c72ed7bcc47f453b79778ffa6e301f45d21a0970719d4","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06",{"version":"3f149f903dd20dfeb7c80e228b659f0e436532de772469980dbd00702cc05cc1","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"43fb1d932e4966a39a41b464a12a81899d9ae5f2c829063f5571b6b87e6d2f9c","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"0d5f52b3174bee6edb81260ebcd792692c32c81fd55499d69531496f3f2b25e7","affectsGlobalScope":true},{"version":"810627a82ac06fb5166da5ada4159c4ec11978dfbb0805fe804c86406dab8357","affectsGlobalScope":true},{"version":"181f1784c6c10b751631b24ce60c7f78b20665db4550b335be179217bacc0d5f","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"75ec0bdd727d887f1b79ed6619412ea72ba3c81d92d0787ccb64bab18d261f14","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"12a310447c5d23c7d0d5ca2af606e3bd08afda69100166730ab92c62999ebb9d","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"cd483c056da900716879771893a3c9772b66c3c88f8943b4205aec738a94b1d0","affectsGlobalScope":true},{"version":"c37f8a49593a0030eecb51bbfa270e709bec9d79a6cc3bb851ef348d4e6b26f8","affectsGlobalScope":true},{"version":"3d413706ea4efe4afc0c3411415490925d1df3e7ab5e4ca372c2ff36e07fd2ac","signature":"6856f77eaf973a9c9e258291655a8d89756449d2ba6e48c84b1672803d307e18"},"c7bdc99177a2a94d25fb13722adaaf5b3291bf70b4d1b27584ba189dd3889ba3",{"version":"d1c92b66c4105659fcad4eb76a1481f7311033e117d0678a1ec545e8ddb8d4c6","affectsGlobalScope":true},"e23424b97418eca3226fd24de079f1203eb70360622e4e093af2aff14d4be6ec","dee93c07b4df5e26010dc9ec4cdf4d6e4076bb4474d2a8371529217c8b2740a4","ed40f2f184db052dc8df62d1f199823c8bbccc487c0a2a7c54eeea0badcf4378","04eaa93bd75f937f9184dcb95a7983800c5770cf8ddd8ac0f3734dc02f5b20ef",{"version":"c8155caf28fc7b0a564156a5df28ad8a844a3bd32d331d148d8f3ce88025c870","affectsGlobalScope":true},"45ac321f2e15d268fd74a90ddaa6467dcaaff2c5b13f95b4b85831520fb7a491","dfc747ab8dd5f623055a4c26fd35e8cceca869fd3f1cf09701c941ca3679665a","c9f5f2920ff61d7158417b8440d5181ddc34a3dfef811a5677dd8a9fb91471e9","5cc0a492da3602510b8f5ed1852b1e0390002780d8758fbc8c0cd023ca7085f8","ec7dafafe751a5121f8f1c80201ebe7e7238c47e6329280a73c4d1ca4bb7fa28","64debeb10e4b7ae4ec9e89bfb4e04c6101ab98c3cc806d14e5488607cfec2753",{"version":"2866a528b2708aa272ec3eaafd3c980abb23aec1ef831cfc5eb2186b98c37ce5","affectsGlobalScope":true},{"version":"a5782d6cea81fe43d2db7ed41e789458c933ab3ab60602f7b5b14c4da3370496","affectsGlobalScope":true},"f258ba66915f0196ec344bc53afe1888240bbcc855ebd151b6cc072275533319","6194335ee3353f7226ba31f31d6301d0c6be87228419c0a08976ccd9d4f1213e","3ac12a54cfaa84683506db8d4cf779135a271d9f0ec18930cf53e61fbeea0c5d","cf3d3b087d1a8a3355eec47d206162c75e912315b9b5c1cd49fda93e948fb80a","36f316c066c4a72dd6f19fec49a074f935744fc9ccbe75c87ebc07fb2feb9062","42176966283d3835c34278b9b5c0f470d484c0c0c6a55c20a2c916a1ce69b6e8","0cff7901aedfe78e314f7d44088f07e2afa1b6e4f0473a4169b8456ca2fb245d","ec70fd6f8a9a83f850dab2960a6789e93d5b034b354a16814cad5daabf62a360","e2236264a811ed1d09a2487a433e8f5216ae62378cf233954ae220cf886f6717","3ec1e108d587a5661ec790db607f482605ba9f3830e118ce578e3ffa3c42e22b","100b3bb9d39d2b1b5340f1bf45a52e94ef1692b45232b4ba00fac5c3cc56d331",{"version":"04fe7e7d8008887943260af1fde2bfd4877e0dc57bf634e0f0b2f3d1794dfd11","affectsGlobalScope":true},"7f77304372efe3c9967e5f9ea2061f1b4bf41dc3cda3c83cdd676f2e5af6b7e6","992c6f6be16c0a1d2eec13ece33adeea2c747ba27fcd078353a8f4bb5b4fea58","2597718d91e306949d89e285bf34c44192014ef541c3bd7cbb825c022749e974","a6b0abdb67d63ebe964ba5fee31bc3daf10c12eecd46b24d778426010c04c67e","ac4801ebc2355ba32329070123b1cd15891bf71b41dcaf9e75b4744832126a59","fd2298fba0640e7295e7bd545e2dfbfcccbb00c27019e501c87965a02bbdebf6","4fd3c4debadce3e9ab9dec3eb45f7f5e2e3d4ad65cf975a6d938d883cfb25a50","71ddd49185b68f27bfac127ef5d22cb2672c278e53e5370d9020ef50ca9c377d","b1ea7a6eaa7608e0e0529aebd323b526a79c6c05a4e519ae5c779675004dcdf1","9fcb033a6208485d8f3fadde31eb5cbcaf99149cff3e40c0dc53ebc6d0dff4e9","7df562288f949945cf69c21cd912100c2afedeeb7cdb219085f7f4b46cb7dde4","9d16690485ff1eb4f6fc57aebe237728fd8e03130c460919da3a35f4d9bd97f5","dcc6910d95a3625fd2b0487fda055988e46ab46c357a1b3618c27b4a8dd739c9","f4149f1aa299474c7040a35fe8f8ac2ad078cc1b190415adc1fff3ed52d490ea","3730099ed008776216268a97771de31753ef71e0a7d0ec650f588cba2a06ce44","8d649dbc429d7139a1d9a14ea2bf8af1dc089e0a879447539587463d4b6c248c","60c9e27816ec8ac8df7240598bb086e95b47edfb454c5cbf4003c812e0ed6e39","e361aecf17fc4034b4c122a1564471cdcd22ef3a51407803cb5a5fc020c04d02","4926467de88a92a4fc9971d8c6f21b91eca1c0e7fc2a46cc4638ab9440c73875",{"version":"2708349d5a11a5c2e5f3a0765259ebe7ee00cdcc8161cb9990cb4910328442a1","affectsGlobalScope":true},"fc0ae4a8ad3c762b96f9d2c3700cb879a373458cb0bf3175478e3b4f85f7ef2f","fabbec378e1ddd86fcf2662e716c2b8318acedb664ee3a4cba6f9e8ee8269cf1","b3593bd345ebea5e4d0a894c03251a3774b34df3d6db57075c18e089a599ba76","e61a21e9418f279bc480394a94d1581b2dee73747adcbdef999b6737e34d721b","efd55e8ca79171bf26c0d0e30221cb8ee1f5a31dd0c791ec4b2e886f42bab124","6f4e4e5a046171e70dfb4b1f3e6212de786bf2c1e2c4383ae0e61c4726fdd168",{"version":"4b1f45b2a27a92262d933407f61e51554dad9e8cd9ccf3c050a007cc48134cf2","signature":"18bfff0f447cb47ab93de965b4799251c57e776a354c120e69ad302e3ef38aa3"},"27048c86fca9e18791dfb2898077cafb8bbd13a0a31caea04169d4225312efd9","b03d4fd4a9472c5d3d0fd9cf502b1720b851cd849d810be9068fd0e4c944e5be","e788661cb1508db23611453d1ee67413429d3f412a1ef589ebe95aed52047588","d0efd4f632c93e90d91ee5e4611f3d7e4bb946c07eb6824bcaf08cf589f18c5d","38f2c79f1f95ec908326f41d43916eb590ce8c65b636349964abcecdfba11ecb","2c414f90866049acbd59a9dad2e155282a02080be773cbfb45ef5aaeae4c43c7","01a4823f194960e7d6cf43ddf58cc477ce43870b76c03764f3893c8ef9a505df","1c6615826296916563f6f88e21e8c1d1be76cc8c2a242fc2d51ffcaf856ed7d8","5ca71a9d355e4cd4446239366a3c281964a9623c01dac99021ad5f1a58f1c11f","c7764a8493c199941aa2f7689ac8d443162c18b19f02e4a3838b20135c485772","a77676cd14de48df1be967e9fad0825f259d5c6d8ab753251ea31886ae2467ec","b69ba53fe9ac4d116dfbae858949f81aff71b948205e4e0aa0237a67fb3e47a9","9b0b92c72051abf6a3fab9c943e9e5e076686119ae53ffd1c6f3caf4a5151cef","a6aa4f1777cf98dc18c63ee05de4c2d7eb0c9f7749354f4680bc86b60d618e83","ad30b20c6aec0fa39f7ca7c6922225450e67aea3b84a691baa74996da6c585ce","8b94d1eabccaec5b77706c4a88225d28a4ab8bc46da7af29dc303c9ec2950fea","5947cd6e46d10873b88edfea7f25a400a838e0fbf7def96bf45ad72b1913e683","d7ef97d18136014b6e15927a84bec746ca84b25c7ff254ab639285c3e6901f44","e3da81b21477fb45fe1d9981d56f0c5390f526724990f0156fc2fed235fdbf3c","b84e91d84f161245dbda145f2a7e8d0891583763d9a8e24e331ab00979ded8da","b63c4a317b6835b3b9bbae96420615b8e69b2264e37258e98c7d36423c6aa099","823739a2e34a0cde0a796c14bfc88978a1e70470023b9d885bacaa5d1b0a59ae","d9cb063f3a5d16883872bdb04863a3da6b63828661a0dcdcb013de8eb4fac336",{"version":"f1be5cefbf112e62d0cd0cacdb0371674fe45a831acca6b968ebc447663bbaa5","signature":"1c27aa74938a2ea9248932b87078a04ffd9e1e1a0b2c2df6c06a56b344cb255e"},"1fcb8b15db812281d69a3090d488903f9e93033004aef9d8889ca3ad0753a96f","bdf5a95eb0a2dd1d39805bdf51b46ba012bb9b92b2ddaae16219595bba7678a5","9f794a0e8550a03baff865a3961cc22afbd85bc4ba9672bdda036971928f85f4","66a697d1e4cdbf25cdce4644a8085a8563041fa8c7731d4d9f5e8f22e66ba72c",{"version":"e84d573f29521225f6873c6f3a795d52374ffbac0f2a4780c9dda2c40a6bb989","signature":"24a4d712063c22742479d03ed750d44f98465e64af9d08789965a97f8d35d7e8"},{"version":"9912e45816078d618083bd0471f72cfd4cb9b0c7de0cd7faeba22a6c8e394622","signature":"de39ab819d91908b2593a73491d639f5f077817be95390a0f23eb876af447046"},"09eed28e33827041ce6f9c46b5b445b3378265da692f261cee49f86003e578f4","1bd83856d2cf899b99c0320eee895dbdca68c7b7750f72274d4f628e8075d192","4c86198a1bd84c98a176684ecb3ae8533d1260763805eb5517f9293e583e99db","67296823a337ee1ef2bcbd2823d624c66ff1160cc15e7f11961f54c1e2eed266","451e59101fecc92272d6c59254874d09d51c0bc5e801d2593790c6789c12b6c3","6520b6e1b4707b8fe46a8cdd47c92929f9ad1587278e186becdf2cc1f063b2c1","e92a1d122620067972ca8f664278dfc89072f281074c3293aa57048ce51f1bfc","1175e20a9266637ef3d03a37c6d34f3b583ead76eaf41ba71d9569388a319eb8","ad9206b9b709f19567035b930a651ef25ee4a30cb0938b4325868f685400e170","3154a026075044aa102298fe9e6a7a14aaa26a06270680c7478a1765af8ffb09","3594c022901a1c8993b0f78a3f534cfb81e7b619ed215348f7f6882f3db02abc","438284c7c455a29b9c0e2d1e72abc62ee93d9a163029ffe918a34c5db3b92da2","0c75b204aed9cf6ff1c7b4bed87a3ece0d9d6fc857a6350c0c95ed0c38c814e8","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","c9f396e71966bd3a890d8a36a6a497dbf260e9b868158ea7824d4b5421210afe","509235563ea2b939e1bbe92aae17e71e6a82ceab8f568b45fb4fce7d72523a32","9364c7566b0be2f7b70ff5285eb34686f83ccb01bda529b82d23b2a844653bfb","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","c311349ec71bb69399ffc4092853e7d8a86c1ca39ddb4cd129e775c19d985793","3c92b6dfd43cc1c2485d9eba5ff0b74a19bb8725b692773ef1d66dac48cda4bd","4908e4c00832b26ce77a629de8501b0e23a903c094f9e79a7fec313a15da796a","2630a7cbb597e85d713b7ef47f2946d4280d3d4c02733282770741d40672b1a5",{"version":"0714e2046df66c0e93c3330d30dbc0565b3e8cd3ee302cf99e4ede6220e5fec8","affectsGlobalScope":true},{"version":"621ead1e1fde8e667a228a19dd90cb463e24496214ca1a1e3d2611d4634a9fce","signature":"a53707eeea688a06431b0f7dfa36482ff37115cb2c4e1cfb47567f1b1a547b4f"},"a0c8e17f4d1ea2704c62d7349bc3b8d9a12e3761b5960cb44144d3f0333b3fcb","3471c0df3d0391e1dffe6e8bf150294531b2b71a2afa5f2b86e52bf84a5db60a","5d4df4de055eddf3187094f938a640f8d96e4c551a47d6686596fdb6ba4c3014","8bc2cad630da1033c1fd8d7df2bffb18af0da6113bd086a8bbec04a2471a1e00","a1059d1bbc8ad46bfe668b8450e7e8002887c4ab987bdb96d6108d8023f8bb8f","5134885e9648e2c6745f8aa1c3e7f5ab3b3617258b3d81ca02de6655ede3d74e","5b919d9204446816876000e03f033458527bde5e3637783b2bc2e7e9ef7ce897","213984ba990f03127a98c3f022d5ca0f0d42df64d4dca199f7319448ce6f3021","020ab2020569964d12e40c68ceae39f40f6c0bee9d502a180f039fcb59c2e34d","aa50dc8a102c76282915e78944293a777866efe6d220a28884ac4a42d7f4c4e2","4f1ae3f24125216cf07c5211a3f00d2bb4782d7cc76c0681603f8249f9232ff0","d3fb92a5640f83f7844d60b35317a0f95c27e3658a749d76d218c461ad091668","d1f8bfcd91b284657ef8187c55ace7db91a3c43e642c3f14e54364154932f7e4","f54c92bfcae54f360fe79514746efce4870e4ddabc064e95d406bba291e9f672","175fd7186fa6a70f9db9b270a04a503cae23cf01cb77e3905bac115c38424cf7","277afd6ab6ec72889e2988e0ddd7d138c1f512e68a1fa4e90eedfd71e2097a51","c0908f85f2b645d375127a3b53a17a65f782e17962d5c1eb68f08b1188acbf15","c993f7ed1b8e1023c1f2ee5b262dbc3b70b27475674e40a53a58591f9972dacc","3fadac5d409cc2f27b1d2f4e7568600f02840205f301c9ae7a3068b46476438b","da6aae64ad559286830fd44c81e3d33303348f184af7db4fde8dd99ae9749407","3633f87c97d359cb55fa7bf0668fb2be8a23342951af6ec2d06e6d0cf7409371","cc3a5427d44fc77ff25e80b3edee4650a51f83de761faf5e633994ecf1ab1b44","b350eda75c6e47299b36002b31d5b220c405c21c365e708989829db013fadbb4","f421882756b6714834ae4687ab1aeadf344a1cc45437d2edffbac020ff3801c1","1d61d6ad832dabafbf63b86c5a79d704f2c8763ada9318e135b17a3cb2d09b32","e5cef5de3e5ad3436d414d20743231e284733b9cf4375dc79eff4fcca4282f99","e624419ba84e33e661e89a28083119ca41f6953dba09a4f82b660684087afe6d","942be430bd0feaced2e3e598273b17e50ea565ec9dac840b580b0b99e1a3cd5c","73350006cec5a0c6b71d53b0b0ddbfb82be96752a9c4e3c904c59e633bc9485e","a7df5c2e9594966c7e0d4a763b13ed5727506d892669df5f7bc9826f539c1d35","258cc5cd6891f6bcbaccefd953997038844e7f65d582cac987ffabf7181bcd4c","00a6db28fc4df6ddf10adbe630d9df620ec13af19039c1869653e60dafa739d2","649324d5abb5464aabe35d86cd0eef16562df811f0971481cee664afa5acbc88","c914014ab7c7001178663f29d31a495398234a41219af61f26d7e8e91b46af96","b135893253d5e507232d1d0b8639dbc00c2bac453fc0420a9af738f1792f8b29","267eb41d7d34151d8b5fdf8b73ddefe0684d7921f4b7db14101f600ea3e8ed02","eb848e4da1fa7568c893e0a0e1f221572c56768dedfe21d2f7741d383c381552","bd6b7d9ff1992fbde49e974f6bf4e8c35922042fc0b6f5326e61fa17a912ffe6","ac443b1f93babbfadff3aef4490044012ff461ba1cf1c7d90ac45f5a26863358","42e4cdd55aa23586b9aff929e2c216150276a37d30c2cf7c0f32ba917722b5e0","4a1ed19ead46b1dd5a319d533fb92162b4ef052ab1c690889cb2eaee293441a1","d0d5b967e5c36354b2f13b4bfb78aae4c1685efa9df3fd946d2e576d370e9302","8076164b388640f7856b25e945a2ded7738e0f8674ac50c256734067b0f0b1b9","36819a1e04a8dbed754a5b3ba2fd5aca2eafb95977eaad6356d77df596c732f4","5fe9c19f085365b73956e27becc5167ad25c5fb024bed4728884966a0faab3f3","d67961ebada9a5e5c393d9c46a4155877a9f7a48b02a0afc6bbe4e87061e46f5","d5e88cd4816669da170c646844042bc83f4523275f85060cf3e2b5b3bf902ee0","137ee20e77a23986e9a1fdf6397b555e6d3073bdcca15927c40671d1ac564aac","a28b00d18def7993bc502f19be6abdb89db2548fe946a51f0771b8ed26a6786c","0fc6ddce4aabc8d84a6aa6644e1012a1474ba844ed6bddc7bea7115583e8a72e","f02da9dd36d7a9aa33c9b2e37ef1f54b0d9ad6a713bae372ae4b72890e40c168","3a5652c44d7b3ee47b1d294b1893b30253d8fb6a1ecaafaf5fdef5fdc118f54c","4fba134e9015779329678ff1fd1afc32bbbf391b1f419f7622a3ecde7bbfc355","af75984f58aa9205be02b0a2248d05f6105a8d4bf8be0baca294b5ceaa10e33e","45a910666b455daf042c0a0cfa610c20ea59a0aaf702f93d3b467a05f9a27e20","5580ff53b5f6f1ecdb68ecb61327e63112f97660912c15444c1f8a08f69c19dc","84fb7c52fc116ddcbd1b34535e387053f2a0134d11c5e39b193f4c1328fb1fb5","fd3cd8bf3c90ef4694195a617a5daaac561d8be52ba33c607f170c11f3c50154","6852fc2f309e330e38694bad95bde670c384d1498bf4fbe3a751761b43279934","9f963b28320dd50221cd23f23059bc23cc7799c7025b44942da68974f90c2e6c","c17329bcf495af58e3010f8e61af51709aaa24a6664d8557a7d01a82b5397c59","4eebb617b12f21864e6641d0a9eefaca77a9ccf93f00bb7d50b26d8073866e53","ca0b43e2565d78809383e9a025b0638a5e65bcde4a2b68ff2c6fa5013642db46","1d0a0e5c6471d81467c3fecfa4db4e93ee87d364b776feb83b18d773ad9496d5","ef6eddcbf08e7ae71cd9ba8da47e9a3cfc7db36650af48f1b440a5ed50eeee7a","e14ee3cb4b764895f2ff2fed229df10b59df8a761c79d8e91d868793322b8896","7e36003872035a49bc3a5f21351c37d0e418f60d994ecc470a9463b33b4a7c12","b862345e219e6a4d829f7b7cf6d2d6e91e6fa00c29a7c6c86a3f68c77c25de39","2b88f02598c9de626b35fbe3ffb1ef33ad9fd175e36e06ba27dc79e444796f6c","b728dc56eb9b0d27b4044e076c155f3cd3a121a4a9939afe829cfc0d680d423b","324b7298f76ce938cd28d2698a0767ca3c740bc843fd9104e171be8eca839555","76aa33edb0042dd572d64e4bda231374390d250d29eeab7e7f27010e8f826006","03b6d387edf18a9ee8126e705edff759f65d9c602e11b649e13a5261fe6951a4",{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"11a9e4a50d84759e8353ed73da32a6462c7ca5c12a31a6cbd39414b456419a7f",{"version":"921e3b40f5efcb74707bc7e14b9b3c8ed2bf9f2ad1e1c7e2ec5fd4252b24223b","signature":"b302ad9fcd5894938a13ff57f54246e32dfe079b6205741a77cc83b657b483fd"},"d383fec7cf5d98b5f42c3b20303193adb63d57fb6b3047803e3c0ed2f93cb6da","25bb1235ddb57c1f90ae8a0775e88ec9a557f135fe3e1e8fbd97436021eec3cb","0cb506f83bac065b0519dda23e704376b9d36b523c7026dbf8c8593831a69596","57873da4a929b7f631ab0e3709c1f5e3e91f72d002e3b131e3488179e7165ca3","aaf730d205461e271486b1dc3e6a50ffdf345949c179869e18c778a47eb4ec53","9440121d485b9176ecbf7af75173798bb9669f5e913a0d85b348e7e59c677f04","6265be88c1e74be57e1db86f14e1924f69438acbb996885a10b90ee08b724d2d","fc02e85ead310c586baa21de2f19293a5a475e99e7bec85d36348fa4792175d9","a16dc585916a89ebbe1ea6e115d4ca85f331d5fb63d4f8f078e44bf8b5e0fd79","2cca080e27d9f7835f57cc364478f2bd44036172c22be9d0fa7dccb84d07b23b","7a75cc1aad1172a287800ce135e9ddd317a77197a95df064518d0ed358950737","781916917f8032ff7fe4330f09162c72cb14d838d88e17fe24b4f5e36d529077","11d8e627dd9dffc01b6c210b6e5f178232fe2fe8a49337242455fbc068267f4d","0eed71753fbc0d6f966f05e9edf9dae6d80540bc6b0443c792a2b2775488937c","14b103a16d584ac44b2aa911ed169f22bca55c944bd58789113fbde329c13ce1","a46e6b67ca3d97e673bd30c82093475429b4ef86aa8a7af039f2d7231e14a489","2b6fea7cf699493170b2b5d33c660231c55d2cdc323283b3f915fe2c5c3329bd","c3649d3c4bd72ddcbccd64bb13033d60dd228231536c5c7d2c88ab5fca0f16b7","60ce0c7fbde8d88b23f47af9e16c5eb8e18b1a4b28094898c7a2f4ba83817e2f","d0fd5b70c0878a32e45b9fce926577fbc302f1ac9154d417790b6fb77ecc421f","2e636dd8fcfb1b9817f0fcf6fec5619ca4cdc480cb0a958e16cd721e9cd40de7","4a0755150e118b65557a608c589060a367a540cda9edd615149c8c0018398b9c","6b00fd5ac469045246f2ea62a6c2e46c76609f99d5d3237069d9311135afc68a","26247a03890113609927c6f79bf66fda3745c9f898c5903a3399d8b341122090","61f9395be1c73587d5f965ef2779c3afc97a51391498a325948871f489eed8e0","33709773c8a3086ec6c4536d90eaed4419021caccecc352f1e63c7f9a90474fe","c6b57b1c400658bef1f18e0db9ddd8d8d0baaf8f6c3749b9be89345d3442ae05","435266748bcde290f2e7e696bc9bbf0759d47ac5d9d45b7cb10da0d6e2b23d48","3c035e96aa86a9ae278d0bef950ddcbd94e565c77e40d98ab55dd64e4b9a5fb8","6b18b2ecb7022d4061d1b8bf82798e1a72c6f170928a0be8c8478b3f0a5c77ae","d39ba459dff1d215966eabdcb92c1029821f9d6953cd9a55f8644803fa6f4a96","4d264e93c40c2467896ebdde6bd614a281c551206fec0bff382fdecf28a08cae","55f0d458b3e04a6ed2ccce4182fd728be3e8c1999e4ba3bce6e741138acd0d00","fea1f1d9e51bf0c842d5bda244f7949d5d47aac4c918936a091ba1b8e93b20b8","6d1c198b7d5950657eb9af8e73c9bd0c9a241f1512f74bd6ee16b7c459af288c",{"version":"42aec1dec720a91cfccea3846ae255a2cea0428560972ff205da2df3346c3f24","signature":"d52381f7a19364b5f2fe2869ae440f23830cf915daddd87dc7decd281ec5ef25"},{"version":"5989655309e3d9eeb58aeec50c469367c26f83a97964f006ed6fd84eeca37d9c","signature":"6589f58d176db29e897cd726963fbf7c38aa0715390ebb9aa91c7932f7c8330e"},{"version":"b5b7fb523891a2aaeb4d28180a4db94db8f2da749d1a4de6bce361c7fcaa240d","signature":"d4105c06f44995f906fbb5dd3ed8f754689c22b9aad99a94d14aeb88ad662dd0"},"792fcbcd71026f984566b5dcd0d73a1d5fdfcb6c8569ef8d84c7b1ff9d229fcc","0cfc689eed1fc4dd7fcd4ddbd80dfe8790cb0585e1249fc019019e19cd71e5a0","094ac2c069d9894b62edd1f2a9dc63e5351e8adb931648f27e47aa7c5d6e983c","ceb9b43165dbab7513e34f787d3f94ffe9f13e440b070417ea50c63eb2c68041","0b9d54448ef230d8cc7763ea0f9ac4fb077fba96391da3332baa882c838cc152","ed9e4c71174d78d20c41d057db0a32d8dc7a6979c04db7852c94967fcee55ec3","a3e06106ef76a6e015536f1ffbc595aa8a871ebf552a500cac1b558e48872ff6","5de6c9c98ef5f5f47005412a13f1ea24fc778e2239ccca69c772485d5ce396c2","822eb5622c3b940f8650c9179da6c426ae2cf309d846f623b0f2d094b228f03e","2a792f34f40e0b8e007a142825e8a486263f8853420572fa4dc6800f4f1eb781","afa2920fdcdfe1691a353ca6ca81b0cd2ca4539eae8cc7c0b9651b1abcdbc74b","1c067bb41f2c82b0ce255c8a4eaf4bafcbffe5d702ae52dec50eeaef930ad16e","dc05b7cfbd7166a76bb33c9a494752fc2876684100208694ee334e92d124ff13","f4cae09b720d87d4e359a6ae91511d231176636572642fd058c4f973478df5ef","492d09043bf7d0ffd0a77db8af9c0a6838affaf7306dbb00680716f1ff51184c","5d4c9d0014f2b221fe243627044e2c2290e33fb97befc0ad72ca2c07e9cf3bcc","bd63922a65e000d121bcd5c0ab479dd6b5c9c2f708bf192c256b58f1a3d8f664","2cab018bf28f0c70c1f7e423ccbe2bece766b0f823fc8be1ef2c6f68fa45932d","1989f78d7bb2f6247fb669aa280f2c3c6bfc97cc8be30a2ca9640f89b3f57a32","f669773f31bfa4e50c75daea1bad438206801e212e1374b5719137bc59c0ba9b","a4b778b3cbd76281a30cf622f5617e25c186f7f9684f2567a3a8f6be78b8c925",{"version":"4337b3d1670e9d1ee8adbf8c62ff178b37be3b35ae0a21d92ec743100354ac97","signature":"a6982d286062434f9336ed5702f2cdeea9321fafdfffe7dc439ff48b9439586b"},"5eb425ff207a91ef139e23ebfa8002a7ef569bded2749a39c79494eac229da6b","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","7e88d433f6eb15b0edb164a4ec1dc963a7b2e2f2f018768e47cb2633ea6de399",{"version":"7ae82e3b52cdd6933f0017f5e0ba8f2da7fa8df7d5287d51b290ed76b1d6bab1","signature":"02c237b57ae43718dfb2219e4221a3dc624be9b9bf6dfbe0f7e6052239bcde6d"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"ff82e9589fe896c71e97d148aeea20743d5c7f7d989b82e9ad1db71d333402ac",{"version":"17a89ca1c518b198c649c2be10d1f30918151f965b9380fd272eef126b82b066","signature":"7eba9b2a03018a752107e3a17c37bbc6011fb749c9e7b1203b5a541f637a1223"},{"version":"a3b3990eb76d0b51970d352770a3fd8e3576afbf51f1b39a0ee982633154b6d9","signature":"562f180232a15d9a16607b34e0df0005a736466f79f47df0a39aafab48f5facf"},{"version":"91eae654295550f639adb13c3749772bc6faa0d51035ab4bfb5a113032b8e543","signature":"789ecc5eea3606ea5d8646b14b14269a2cc15558c89b371aecc42ed8cba8035e"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"a6b74f096f8fe3da9bc070a04b8aefb22fb00a062e4de0ce9e7c9d6a3d423847",{"version":"0daca2a8aeca320a808295dea4511d96d7897867aa5ed5102c159f1ddb6b2346","signature":"ede3426aea05dddd4ae999664aaee0adad171fa0aeefa7199c3c38e5c8d9b47e"},{"version":"4f09b4f0c22ac86274342dc1ce4be6403bede7beaca5f4c50c120a823ce92fea","signature":"809181d2448bc63b4f87481f9e2ee209d0cfcbfaafd83a3a231ee0c55158f573"},"2b33cba77ae776e27801fa1eda2df73442345863db8e709125a5f9f30ed2096d",{"version":"b473bc52523efc8bb217488bc3b10ed34c951832c1fbeb11150ec2f08d706d8f","signature":"2bc824d6fb7f286d4acfea44fb5f5331bdb07eb38b73e70dfbb9f3f9c4c0477b"},"c01f0929ecb56b3c0971a727955e0ed83bf828744fb0f04917052ceaf576ca56",{"version":"17271ee5eada8a5036b280acc3c36ded0b6a487dcdbe3f775cfe9b2e7543186a","signature":"6f3c43324c241b6b1e29b9193784e835b76e3a12b38a77fe62ac9df662c7c06d"},{"version":"e2ddc31130f02b0488ab09d551a14c267f20183930d73eee2f0e6729e86588ce","signature":"07733fc9787712e7f3a2f9f7c8e6773036f8023de944b96e141971d6a7556344"},"1df722eed9b4cc011f26556f3574fe6aa5369a263ebd91f81424523277ad136a",{"version":"b4141d311e83f3af9320f8e307b3fb287b299d647e09a9b3262fbc7d34a95aa9","signature":"01e074392769bab3ea7ef965866c15fc9f74e123fea4e6ca0821701f53aa1665"},{"version":"2cddd2bbe3a08e65eb2216e6d39448e9b2fdc6d2983b412671b8faebc7f9d9a2","signature":"1bb1ee99c2c2fbe2012f522dbfac98ec7d316f977200c7b179deb665bf8b6f97"},"64deed797f3fc918d99f992e70c2815b7dee4d40774aa3331be9f2ab94ee408e","115d60d2b07ac7d513543b5e86e13bbf9a9524faf8bdf4985bd7a08815b46406","4a1545bdbccec0209a67da02f760fad629deedbe7d8ac9f55c93c82f95ff5449","7b52c21bd6397ca26df3b7863fa2d5014aa4bbf5621377769726bbd59956e6bc","8fb686bcb1593c907a4a6284625137308915871b7a3f672c6096769704fd6593","80283bd376b4d5b8970d1f0b8c549e3b9e24aa26d8f785bec3e29e22c525f1a4","6efd085323d69407ea14900a7afcb0876669a668c8e5c357782eb09d30f5e90a",{"version":"fa805a65de69ff27fa624ecd4fbe7837596daf445ca1d38e0b558287ce70b77d","signature":"e846678f5b81a7cc528b39182a724475a2a7221ca47e2603a864b4ffd216bc95"},{"version":"95911cd1442f1e9b836fb6a16b6a81aabbb3c6b178604b9ee7f3aeb73bc88eb2","signature":"b3a071cd1770061dc3ca72d67795f193795e7115faa400c041e51bc3afe831da"},"79501e0b0bad092052f42908a84bfa160bf7ca70ab703dc640ca726ff009eeef",{"version":"7f5f9b71b6407c095157c28f5331edb7689da2ae34d39b3d92cb2ee0fcc7cdc7","signature":"020abe8c521dcfaa819e58247ad2209de1aa823ae95bfdbb48a0a0f3e689bb22"},"e68ad0de94899b5e74e88a30299edfa9234582a8fe933a79fc68b66b9ff7f623","1515f45c7ac8876453f491c81b2899110c564714b595d87d2e270feaf5cd0171","8e1316e23a19ba001770976c029b910bd5ce755f8954b0afd5d3516932e68d7f","ddf843152599670242bb8d17acf9cdf716413326d5465a38c416a8534442e099","5bff2f68cc885cea49c6b0db0d4af5daea83520703b0fbd745c301267cd9f417","11cebccdb3bdf7cbb49c85dfd2251391bfcad51e164a10b4b3edba32e54baeca","dad09a8e5c6e7e9e82eeb47b69de3263f5f4bf60c5998a1f8fa4be5ba4124d31","9a06800a6d0a0e4add44687a793e059ca1e4162a490b68d27dcfabea14573205","1f276a748c534af1620acc29e2ce5028060d4323bbf1ed1f08a80977aff3abac","c627d39a45467ef12ce95d2bdbdf8cc89f6de1e9f112c32b7b3ee00f963e1c19","44732cf340786b9df93feae047ced84700ed8b7117bbbc9f0c22c0dd8f14b8c7","2bb640dfad345694432d89e0f0d5b8ce3a653a97e0acfc935503d234a8a9cc65","c5adbe37402e1a7ec838a9be8e64276b7e250c3e9f4aa0ec48ddaadc92bf0596","cf7edd726db5788180327b7729c882dcc68d4b4d290710d1e51c31c3cfe44054","31ba8333d2e02f398e80681621d7607a1a1e8be02b5ffddd4ae0383a840d364d","fd97d8bc27c67c6291ab8b31d3b2c1c1efee5344b714d559bc08ed2e0dafba8c","cea244f9d063ac1552796ab9aa0729feb3df72caac0c4161e54e3e4aba7cd787","51de0c244c81479b622382289a79dfaabd2e59568699e3c5cd39e3704d4c7f36","028ce62ae50640239934f3e8a6b908bdf752c98e2dfd45c9715ecc04e9624017","79bb921ab32518a8b33dedf9a32b44459c5fe6c73655aa5fee0f1a64b21c37a6","1cae7dbb4d8e6f79a176221e61a4b3c0da201bef3e4d4a946a2e314ba5d55f3e","ab647cbe5e37cd718c0dad137cd9a5309f6c93775fdb474bca89c4ec242d622f","379b17cdbb2592b58c22b2da981c74b0e685c558b8b84b8f0e9bbb2e4cd79bb6","be579bb21cc93a8e5e57223841b4f407e5ffbc24ad816810be8f32fc2d430b4b","ab0e2104da6c1842c26dd8d8cebceee3f730323d561bb2ae6a8acee5f9338a25","90d29f522af192add2a90cef15c1b7e3e3a4827df4b8628bd394da19dbcfc094",{"version":"bca9c018588750005093ac90d8a9e17b2df4800aa7778c9428edf726bf51f485","signature":"f7758a5daa42b70a13f6e7188287621b0ae2cb91f6417da37fc0840fbbde91b6"},{"version":"546120227761e5b7c658c8ec45268b047fdd774a37d3f2af46fa3c7ad4aad4b4","signature":"45ec752da3c5ae282184ba6aa5d828ce845953f5f8356917dd1fd32f7eb58d49"},{"version":"981e436a6825ba44084ae4fd76af10825884ab6709cd0da040e8aa4d4c519359","signature":"070cb0507bbaba6abaca450e865fa20255bbd6ec5dc4d748a9c5112346dd700b"},"df7e3f1646e8a98bde88aa3e137d094054bec69256479d9745c02e6fc1084836","a7d39371cabe952bc7ad53bacd2297506adddba10c7cbce6e554dfd20020c51d",{"version":"417d0d87aa75f084a78d1bb861f5e23afacd0d5f72228e3a72b5436006de0905","signature":"d7132a1de415d7f34de3fee0eef4a8a38af8c25978a4a91d3b993eb1e11fece3"},{"version":"11cdf775378adf8f32dee5d3db8c05521b4216ad728fac73f2341c64b66cfa7a","signature":"e3f69e11205a96769457c5055cfb51e729909a3cac1674fb07a9f87a75e2accc"},{"version":"5303a607bed2f1d58f158a29caeb11d5c6fa3a0c0052d1c219f11ff505a551f7","signature":"ed12cc19cfdc157d9823b30917e8ab40c2d3845feaae75dcb58db5abb6360b30"},{"version":"7eb1c154770627c946bbaf3e5bc3c7e78660b4ea6b272de31b205af8b3d0e286","signature":"f8eb1943c94b97fad14ace58c066852f1c568d75891c06e0cc160ccfd4310743"},{"version":"7c7516da4eca37b9035e99915655f6522b2d7bb55bd8f647fb99efc21933e9af","signature":"9154598755aa42e74cae7ea768dd647f125fe04fa7006fe27f52f8ea766cf25a"},{"version":"f1bfe59b41bcb38dcad14ec251f8e83e2f2e8acea249ed0f50cda27011ad3bf0","signature":"31cd6de98f9744eecf24fe3450ac5efd6abfbae3a4a4458229a3fee5ab4bfc99"},"4380c06c8d36e963c74636ccc3f5f18dca333f52224e8bd8d57175670b021211","f2e3e7319a2cca8c002ca131a213c0b69a3f776cb666fb44174baf60806e93c0","2013c436fe32c9ceb496b28cc05ffed6bc3ad9ad0467ee180f11af3236d069f2",{"version":"5ee3223c4cc4102a01b46137ea4ab334674dbf6e21cd1d0361a10f8ac96728f2","signature":"a02bd12ba92408900092c4791684170288d51fd6ce809e123be60e6f50768297"},{"version":"30333eff31732689fd60afd74298ffab0c2b6bb0331975993a43b1e102386511","signature":"21f96686f5bdf1bcfbf72c047285448548f24f165936e5a4e2baf000c42f7191"},"a43dbe2b477825edb425f74b9bda3e84467bc2ec9b9d8e67be7e3a528282d801",{"version":"95052d1812d457a9eb243316f3bbd038dcb09766e7db29c647b8c21f9ed91fe3","signature":"7fe90ee6ce17430ebbe5e29f3c0a295c5e6e4b07c75effa75b1a37c6781b8503"},{"version":"8fc7afb94ab8ece139f0aae4c744e57c97ae35341400a0436fad87dbc84bb158","signature":"7197d9ea3eca8f7998feb28eb31db6ecbb9c131113ca678ec2ab7d58a1aa41a1"},{"version":"289155ce1b831367a6cad10f8d6fdb467a1b762150a1950e698508255a4e41ce","signature":"89f050906a82d70192556edfca61b647e25ecf5ff4014974bd356fe97a71dc85"},{"version":"98eeda54dffb20e326cffd366b5113d95b5a9f1e569025b9bddfe69991cbe179","signature":"371c18ff8619adadfd5d51b4f8875c102fe16633f72b16ab4d6470fb3c469ce6"},{"version":"4ae67b09b85938447d5e9a031ae447f989c3ffc2645255cb72f4cfea24921376","signature":"4ccb94c6a625da7641978782cd6fa228b6685df4a6398e05f17c7c020a1ef969"},{"version":"51bf928ce6ac57522f646223d50b4a252e4ab7204da4a3b88218ab2ad9aded9c","signature":"bd016744ae6ca47c077f30661af368da319085c4537214fd1063c45c22b75d77"},"c58bbafb5a6a57a721652f911e722fdc0ffe85e82172cb78f7377e5a6885b2ae",{"version":"d4cf903881b26b35de1ff59c8066fc88a925dfb6bc8186a1000694717df3c63c","signature":"f80284421d8f20ef54f71eb946cc836f5fb7fe03c31bdfc53bbdedc886514784"},{"version":"3337e7ce77ad8a700dd924686e950115f985b561ddd799bab6f6e4b88b2c134d","signature":"ad46c0bbefc50c2bc4e637be25f9d0d832bc0c446fc526aeabdd7f316f4fb3a5"},{"version":"5ce6de8b3b5c316b70b9ee85043af57c1d5f8ec8955661547f25886a0804e09d","signature":"1aaf7884ca26988b1b76a00989e16b8ec931392e77305197cb6e8d7432ed364d"},{"version":"d95f8dca02ee8a217845fa964cdadb1e867e557bbbe57db4fbc442f5b8416dcd","signature":"9c7d67c5624dd4d44f1dc7121ab5c181dc92eafbbd771d3a227e970ec02eb6c7"},{"version":"1dafbeb4e661d6281e205f88eedc04450b8ddb8b88b3cf18cf876291ac73aff2","signature":"403af83b2e3bcb313a11dca8c5b8d1aee04c4aa2dffcc9e62cd3831c2fc93e1c"},{"version":"48b528c4d182966627187570ed85f7c298f5a9a253375ecfbac5d9af1922763f","signature":"4315fb61318eedde21710e434e0853414f1ef2f582cde493cd3d5c78049c0c97"},{"version":"bd0559dd463ce7497a0c8c7958165fd933ee3bbe5ce6401186718e94aa9d7b43","signature":"a75952dbf49f1c68f9f030a2cfbca9cce227af01749280f1fcba343f5224c351"},{"version":"35a1c65bcecfaeb8f9d2680b5f0506b26c3f73d5458f735b26170b6fa4bb2068","signature":"5ac048745c1a809127db976285843d623b90eeb5f45c6cc6929fabe119b0ea04"},{"version":"8b3d0e9c313a098b31b5a7f0e6d788719d874148f24b9755f579a555b747e858","signature":"fd5e0d28ead649e38c8bacd1ec851388847cf54ad37d9f36d81115a020591647"},{"version":"bec0a18e369db4e08e8121184c469a3ea9af051af923d2706c10c3244b2da69f","signature":"4569364ca501b366f5e2bd391f603c2d9e26b551452bdad1560c5a257b03ce18"},"3a61ac3a6089237bb566f2f70ab0dfbd5ec203a21e09de8382a717f5ba8ddabb",{"version":"c8831f11f1d30f3be83428b5373b1a71e53fd7414ef14a476e5b38fbed8a0752","signature":"bb9f357f778f67ad2d7988be76628deca1fce7581a057b599593912ed2a054cf"},"5ef81a02248813523201ee4ba5c711e72fb39e1c13d4122db86caa49928ceccd",{"version":"c88ae6bbf7e968b79fb61f9e93bac7e8fd5572d5adbaf70265fcad16bb18e81e","signature":"48140a1aef257f14fb5d802e9c047916f798215839f9aa38ec736a7147c84c81"},{"version":"8d674c553737eacf115bbcc59d4c3b0a8a36b8e6f2b97a3c7a9bc2946d09737f","signature":"62bc8f38c672cc245c03df820e5efb3d8fd1101bbd2522b929fb01e875fc3980"},{"version":"adce73e9d7f301b90eab1042ae94396d8bfff13583e362be5f47fbb25c23da74","signature":"f11a45368202ae00bf5adb4ab825e8cd81939d4eff8f61b66977745fee72f4ba"},{"version":"68cfc2c2a97463ca1db3db7866750b394748cb3fcb1fe444520ca6bfa2499935","signature":"5fd8010422dbf50a31c03a94964b9e2372a5840f722eee8c2bca9c5d02e831d7"},"098f8977e76712a3409ddd033faae089e8b95d083d8caf72493d23e2624b5fc2",{"version":"0cc58e70d7d4e6fafd8dc7cda1eb19829373bf75a9726b29502928b4749ae912","signature":"bb3b12aded5ce077e289e622cdd81b52131c0b426723e591222c962c2dfb0db2"},{"version":"883ae28ec16e215c919276bdc32cf8c4dec1808d10c98a5f7cbee38636702037","signature":"7b060084197328fe461a1ffebcb2c1bfa1fd4ba096fb34facfaffd4534c9c5c2"},{"version":"c470a163e48a455684ea6131d82186c5a744fae7158ff6779fbeda5993a46299","signature":"1bd40e847573c320e4c35dfb448d79068d3a1372207a0ef3838bbef7f016042e"},{"version":"8dc25d14f06405151c33a5515cfce45f711e5c61b29f4338444175ec86e47004","signature":"dbfde02c25be5df7647725402d7d0e6a6d46e68f35612878924a99bc9449191c"},{"version":"0ed2fdb0a450642fcbb8dd94196bd350793d5b90d391dbece286b646c73e6fee","signature":"b70a7f005802475bf13418d2de036b245c5f78a77fc0c060e921be38151c9549"},"6a3816094633a8e76b1f3d7d3834b6ed2dc9dd08c8e996a74c118284468c6e7b","b6111a0f4732899834438a678d2b6b553c81bc5a5049ae367a5175fde7cd4968",{"version":"97fc004a31c0a213de61c05b350f347e25efca1eabc8ba1eebdb2d9b85689dd1","signature":"5a49466668114ceca972d8d030478a0f37fdd04a55eb62db8c0b4655eba49484"},{"version":"8ce79132232bed71adbf60e1c16aabcb9a63153744eeefedf98b22898863d7fc","signature":"f1cf633241130ff468dcf6a7864577e7be8696b5b5e33083cc7507c03b6f6a19"},{"version":"f28384ee019f2116926f5740e92bd227443dc14d3da7daf89e0059ac5913866f","signature":"38ed86c8361af004a7b4a1bd5a2b3d237dcf5356b0b6425950f9c2b18d509d47"},"cc4d7e933dce2ad66baaf535e204405bb18404c7167e99b7ba9d584eb89e1565",{"version":"ab515d691ab8d0ef3d07f4f24b5058c0d244676a867e91d0cafdaed5a35d48f3","signature":"1e4b2cee1af0e665ee5a6f05528eae7b0ea72a120f10db43f5b4af09dd0d4a86"},"8a8bd8acb1a915a93db3be0b186fede51eaa2f2db40dac79a47313b4df55cddd",{"version":"b9a8f549ad99338a16b74b60ea58c9ed705980900b10dee916ecc730822af3ac","signature":"9914c79c33b663a7aea996703b671582274e86c2409b67753fb4040091bf70e6"},{"version":"f87e83dd7e60fe3e8686b3bd3aa5eb17d2415f01af8ba1b0edf422f805698d04","signature":"02d34933aef882ab1da4f55af5333826ed28a8e6abcd4182d81dc50e9173a14d"},{"version":"b1e5f6b6e236cd191974d878da9630dcc71edf1833f0eb62e0209b13b8ab2652","signature":"b36bf9277cc3b763b3bdf0f953efa7afe06ace18b1da9210806201ad7a6f6acc"},"b1a9839925ae9b488f587a8ec6f23e034b6ac4bed5da3da005f3414fa4a18cce",{"version":"43534ac51f6ed166a457b3247fe64c65c094f95fa7e748210f2255fb2fbaacab","signature":"0935c408dcfc90a8f9dc1d11d8270fc6cf80c8586d96860da12155da405ec9af"},{"version":"44f8b6f028241b18ff67fd37daa909ff481f38ba69739cb10b104c1c2852412c","signature":"08217183097d95ae53cd5f084594bb398d742a6244ccbd4934b99a8270974958"},{"version":"ed62d52b57a171101cac06d5ed32b8a55da2ed151a4f4d98da476610c34ed4f0","signature":"ee02d6673dd0fc003aec2d0a13c88bb053f1fa40e7a136b905ad546942f98d5b"},{"version":"5ead41e310e86e4959e71b330561e9690879beaa0ad6d14883c8e919c7d0a8f3","signature":"a5816719f0c3135d6af24e93e146084e1f4d18d2913ebb95a3ee944046d1d530"},{"version":"dacf59b95ad547fc4ec1ea4d524ed7ed22aaead71ddfa951177061171110b0c3","signature":"b9753f64aecf3de34d3e6d0d4c59ebecd6cea0838ab30fbafc968d2d139626b4"},{"version":"66aa8be674e9c3d5438976acf80cec8bdf0640e5ddd0a25f2af677027d777bfa","signature":"75b963bde9950ecbe782bef2ecd8f0b1aa8489f7093e76900dcba27de0042f90"},{"version":"2b28f1d26d2f88aad74fe5f2761b2a281181064cc5dc0219a8b0e6badfc8641d","signature":"2dbf1317374ba7cd5cd5b2443db7bb5caca817f38f0524886b108acb35415b37"},{"version":"5e390dba840055d1026484d576e1dd861dc8dbf84e58e76bd450c9f9f32a0386","signature":"f6f545bc47f233b38dd8a9add4ade169de5747493dd414f9e90119ceead61c3f"},"69b39591493ddec7c2ecf73eb53a0cda0c2c0aeb876700e0cfc82152e8f5f452",{"version":"2d4f7a548ab7a9cd9ae256b82ec991268c8967df1c7c2907d0276faf2e8f3340","signature":"7b851e6396a5dc0df2be119b4d1c053150cb39e1e93a45378242cc1ddceb27ca"},"267484504819c7c8d262deb5e6147fdd31d0c96525614e6db018637dc1e94c81",{"version":"e2fc71123d13b7e35a58741c9a0c6ce508e2f7ebd78674d8f9b8718fb1006db9","signature":"36c556a3c9eb165b9bc100cfa5fcd99e0544a264624563015ef6e88586b397ed"},{"version":"c8cb2807700da64268a4b96d519001c4e322026c5a55a4591dafbae9c98d5135","signature":"501a29a21faf61b3355e5cd70300b5a28b5b12de60f1caa05e56cb2d42607dff"},{"version":"2cda690d3958072de8ded71cd744352b064e7a4a44cb88b300eaa64125aa00db","signature":"6d4ebb64d5f29c6322d1da333bb31951b6851a760861635acba5b3c696656f57"},{"version":"dc5432827aeb5411ec11ac1f8b271d39bb1836b99e0421b19587ae2dc091486a","signature":"9d425b3e757d008df530d5b91d77232f6d37e513a31f9ab2f9ba71b3b27c2a37"},{"version":"d829c12ae4cd7023fa5c5e4ee784c35527f6519ea39cdf8c2af8d9a41ddcf1e9","signature":"d333469f1cde151f6f317b191e3fc0e2305c72a95dfb5527ab1d9ec53959b76d"},{"version":"32b6b48b99f21a07986a13a6fc5216fcdc8920663b27e03581f7b60ab36ffff7","signature":"770c2d42ac7f8e2941433ccb98c63e02eb6543cf3755942fed1ea3f7aea856e4"},{"version":"ee002dbe9b96904eef6bdc94cc405b57021528b4dcb4e2382421fbe83d7e2aa7","signature":"73ed373f7c01dc5ce2098eaa9b59030caccf23f15538ba5dc1e70b0c9f43f977"},{"version":"04606ad72a5599c9f9d7fba009c296d7a56b60fb7c627a05a95a2c9d47c39ead","signature":"96b65daf6681578aa161cd622806f16430dab19c5681c12db2690836b6e99163"},{"version":"afc520b2867cb2b57e9d7cf9dea5433064f444fde5d1a06ce9817b06eabffbc8","signature":"a562ae7b032f6b01526b5539666852b330c86e20918c57e426d7a95031ca7a30"},{"version":"69b5e2602c836bcd73f59b3529abc4931f1fa9cd1806f59e0bcb9903c8972dd1","signature":"0e07f96fade13c5f4f5f73423d0b0d36d2072570d8a33ea450006897d3671df2"},{"version":"b35e638b02dd107949595a6656e3f5c0b871edeb3d6f061332c610c602176105","signature":"736f562b178793c3aaf93cf534e989d14a548e0190060f4e12d86b8d0c4e0d4c"},"a70237156e4106580f7ade91e58fa4caf501ed69002861d8ad43898d48ad7d96","6b51a866d15c1e384f7dd519a7d28154e54db953027db71df7e9f4f98ea0a649","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73",{"version":"4564f780fd20582c57ae218a4cd017717181ab0e228639d905ef054288655b5e","affectsGlobalScope":true}],"options":{"declaration":true,"esModuleInterop":true,"inlineSourceMap":true,"module":1,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"noUncheckedIndexedAccess":true,"noUnusedLocals":true,"noUnusedParameters":true,"outDir":"./","strict":true,"target":4},"fileIdsList":[[109,139,140],[109,112],[112],[139,141,143],[109,112,139,140,141,142],[109,112,142,150,151,152],[109,112,142,153],[109],[190],[109,110],[110,111],[184,185,186,187],[109,112,144,151,153,156],[193,194,195,196],[156],[109,156,176],[109,142,156],[109,156,179,180,181],[109,142,156,177],[149],[150,152,154,158,159],[150,152,159],[82,112,142,150,151,153,154],[150,159],[150,153,155],[112,151,153],[150,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170],[150,157],[82,157],[109,142,150,151,152,153,155,156],[150,152,154,157],[150,155,157],[203,204],[199,200],[109,199],[145,146,147],[109,153,156,176,177,178,182],[174,175],[173],[174],[276],[45,82],[419,424],[125,127,128,129,130,131,132,133,134,135,136,137],[125,126,128,129,130,131,132,133,134,135,136,137],[126,127,128,129,130,131,132,133,134,135,136,137],[125,126,127,129,130,131,132,133,134,135,136,137],[125,126,127,128,130,131,132,133,134,135,136,137],[125,126,127,128,129,131,132,133,134,135,136,137],[125,126,127,128,129,130,132,133,134,135,136,137],[125,126,127,128,129,130,131,133,134,135,136,137],[125,126,127,128,129,130,131,132,134,135,136,137],[125,126,127,128,129,130,131,132,133,135,136,137],[125,126,127,128,129,130,131,132,133,134,136,137],[125,126,127,128,129,130,131,132,133,134,135,137],[125,126,127,128,129,130,131,132,133,134,135,136],[80],[79,80],[34,39],[45,46,53,62],[35,45,53],[71],[39,46,54],[62,67],[42,45,53],[43],[42],[45],[45,47,62,70],[45,46,62],[53,62,70],[45,46,48,53,62,67,70],[48,62,67,70],[81],[70],[42,45,62],[55],[33],[69],[60,71,74],[45,63],[62],[65],[39,53],[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],[53],[59],[72],[34,39,45,47,56,62,70,74],[112,156],[309,310,312,313],[112,171],[311],[106,144,249],[87],[106,249,264],[106,249,264,265],[106,249,264,265,266],[106,249,264,265,267],[253,254,255,256,265,266,267,268,269,270,271,272],[106,144],[87,106,144,249],[106,144,249,254,255,264,268,269],[106,265],[85],[89,92],[89,91],[89,91,92],[87,88,89,92,93],[87,88],[93,94,95,96],[88,93],[88,92,93,94],[89,91,92,97,98,99],[90],[90,92],[89],[85,86,88,100,105],[100],[101,102,103,104],[116],[115,116,117,118,119,120,121,122],[116,118],[307],[308,325,329],[211,307,308,316,317,318,319,320,321,322,323,324],[211,307,308,325],[144,211,307,308,325],[316,317,318,319,320,321,322,324,326,328],[144,211,307,308,315,325],[106,273,307,308,315],[211,307,308,315],[327,330,331],[106,144,211,249,273,308,325,326],[211],[307,314],[259,260,261],[106],[106,259],[106,259,260],[257,258,262,263],[106,262],[216,217,218,219,220,221,222],[87,106,215,216,217],[87,106,218],[106,218],[87,106],[106,216,217],[106,218,220],[215,223,241,242,243,244,245,246,247,248],[144],[106,144,219,223,224,243],[87,106,144],[106,144,223,241],[106,144,223,224],[106,144,221,224,243,245],[106,215],[106,220],[224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240],[87,215],[216],[109,112,151,156,171,172,173,176,183,188,208,209],[210],[109,142,144,148,151,152,173,177,178,182,183,189,191,192,197,198,201,202,205,206,207],[300,301],[299],[297,298],[417,420],[417,420,421,422],[419],[416,423],[344],[418],[337,369,414],[30,83],[30,106,108,113],[30,106,108,123,124,137,138,370],[30,106,137,369,370],[400,401],[106,273,337],[106,137,273,337,397],[397,398,399],[106,273,398,400],[108,112,113,137,171],[106,112,171,278,287,292,295,337,339,369,376],[108,112,113,124,277],[30,84,113,114,282,283,287,295,303,304,370,371,372,373,376,377,378,379,383,384,389,390,393,395,396,402,403,404,405,406,407,408,409,410,411,412,413],[113,171,369],[112,144,278],[106,108,112,137,171,251,282,380,381,382],[106,113,373,379],[106,108,112,137,171,249,251,252,273,277,278,282,333,368,369,380,383,386,388],[106,171,210,278,292,306,332,337,369,375],[113,211],[106,273,282,369,392],[106,124,171,188,210,278,287,292,295,306,332,337,339,369,375,376,377,394],[106,112,137,144,148,214,278,282,369],[30,106,137,278,281,282,369],[106,108,124,277,296,303,304],[30,106,108,137,264,278,287],[30,106,303],[106,108,112,137,264,277,278,282,286,368,369],[106,108,112,252,264,333,368],[106,108,137,250,264,303,370],[106,278,303,369],[106,108,137,277,278,296,302],[303,396],[30,106,108,137,249,278,295,369],[30,106,304],[106,112,171,282,289,291,369],[106,108,112,137,249,251,277,278,282,294,368],[87,106,108,137,249,250,252,278,295,304,370],[106,278,304,369],[106,137,277,278,296,302,303,369],[304,396],[83,87,106,108,112,113,123,137,138,171,249,250,252,273,275,277,278,283,287,292,295,304,306,333,338,339,340,341,342,343,348,350,351,352,353,354,365,369,370,371,414],[106,366],[343],[106,112,137,249,252,273,287,295,333,342,368],[87,106,108,112,137,138,252,273,343,345,346,349,366,368,369],[106,252],[106,108,249,264,333,368],[106,108,137,138,249,252,273,287,295,304,366,369,370,414],[106,112,249,252,278,287,292,343,370],[342,348],[87,106,112,137,249,252,264,273,339,342,343,347,353,369,415],[106,112,137,252,264,287,342,343,369],[106,112,333,414],[106,108,112,137,249,252,292,338,339,342,343,347,415],[349,356,365,366],[106,112,137,249,264,333,343,349,352,358,366,369,414],[359,360,362,363,364],[106,137,333,349,352,356,359,360,361,366,369,414],[358],[352,356],[333,352],[355,357],[106,112,137,333,349,352,355,356,357,360,361,366,369,414],[106,137,333,349,352,355,356,357,360,361,366,369,414],[138,333,336,367],[106,250,370],[335],[106,108,112,137,173,249,252,273,282,295,333,334,367,368,369,370,414],[106,112,249,252,264,273,332,367,414],[144,211],[109,144,171,211,279],[171,211,305],[171,211,288],[171,211,290],[171,211,385],[171,211,280],[171,211,374],[171,211,391],[171,211,285],[109,144,171,211,284],[171,211,213],[171,211,387],[171,211,293],[171,211,381],[109,144,171,211,212],[106,249,250],[87,106,207,249],[106,112,137,249,262,273,278,292,295,337,338,369,414],[108,138,250,251,252,274,368],[107],[106,137,249,264,273,332,415],[107,108],[273],[106,137,249,251,264,273,333,367,369],[30,106,113],[30,106,123,370],[30,106,370],[106,273,337,397],[112,113,171],[106,171,278,287,292,295,337,376],[113],[113,171],[106,112,171,282],[106,112,171,252,277,278,282,333,383],[106,171,278,292,337,369],[106,273,282],[106,171,278,287,292,295,337,376,377],[106,278,282],[30,106,278,282],[106,303,304],[30,106,264,278,287],[106,264,277,278,282],[112,252,333],[106,303],[106,278,303],[106,278],[30,106,249,278,295],[106,249,277,278,282],[106,278,295,304],[106,278,304],[106,113,171,249,252,273,283,287,292,295,304,333,342,365,370,371,414],[106,112,252,273,287,295,333,342],[106,112,252,343,349,366],[106,249,264,333],[106,273,287,295,304,366,370,414],[106,112,249,252,278,287,292,343],[342,343],[112,342,343],[106,112,333],[106,112,249,264,333,343,349,352,358,366,369,414],[106,333,349,352,356,359,360,366,369,414],[106,112,333,349,352,355,356,357,360,366,369,414],[106,333,349,352,355,356,357,360,366,369,414],[106,370],[106,252,282,295,333,370,414],[106,249],[106,112,249,262,278,292,295,337,414],[106,273,415],[249,264,333,367]],"referencedMap":[[141,1],[140,2],[139,3],[144,4],[143,5],[153,6],[156,7],[189,2],[190,8],[191,9],[192,8],[110,8],[111,10],[112,11],[185,3],[188,12],[172,13],[197,14],[195,8],[196,15],[177,16],[179,17],[182,18],[181,19],[198,8],[150,20],[160,21],[161,22],[155,23],[162,24],[163,25],[164,25],[154,26],[171,27],[166,21],[165,28],[167,29],[157,30],[168,24],[169,22],[159,31],[170,28],[158,32],[205,33],[206,8],[201,34],[200,35],[178,8],[145,8],[148,36],[147,8],[151,2],[207,3],[183,37],[176,38],[174,39],[175,40],[277,41],[107,42],[425,43],[126,44],[127,45],[125,46],[128,47],[129,48],[130,49],[131,50],[132,51],[133,52],[134,53],[135,54],[136,55],[137,56],[31,57],[81,58],[34,59],[35,60],[36,61],[37,62],[38,63],[39,64],[40,65],[42,66],[43,67],[44,68],[45,68],[46,69],[47,70],[48,71],[49,72],[50,73],[82,74],[51,68],[52,75],[53,76],[55,77],[56,78],[57,79],[60,68],[61,80],[62,81],[63,82],[65,68],[66,83],[67,84],[79,85],[69,86],[70,87],[71,88],[73,82],[75,89],[76,82],[309,90],[313,3],[314,91],[311,92],[312,93],[310,90],[254,94],[253,95],[265,96],[269,97],[267,98],[268,99],[273,100],[255,101],[256,102],[270,103],[271,104],[272,97],[86,105],[88,95],[90,106],[92,107],[98,108],[94,109],[93,110],[97,111],[95,112],[96,113],[100,114],[91,115],[89,116],[99,117],[106,118],[101,119],[105,120],[103,95],[119,121],[118,121],[123,122],[117,121],[120,123],[121,123],[122,121],[308,124],[330,125],[325,126],[321,127],[323,128],[317,128],[329,129],[324,128],[319,128],[318,128],[316,130],[320,128],[326,131],[328,132],[322,128],[332,133],[327,134],[331,135],[315,136],[257,95],[262,137],[259,138],[260,139],[261,140],[264,141],[263,142],[223,143],[218,144],[219,145],[220,146],[216,147],[217,138],[222,148],[221,149],[249,150],[242,151],[244,152],[245,153],[246,154],[243,101],[247,155],[248,156],[224,138],[225,157],[226,158],[227,147],[228,95],[241,159],[230,95],[231,147],[232,95],[234,95],[235,138],[236,95],[237,160],[238,95],[239,161],[240,95],[210,162],[211,163],[208,164],[302,165],[300,166],[299,167],[421,168],[423,169],[422,168],[420,170],[424,171],[345,172],[83,42],[419,173],[415,174],[84,175],[114,176],[371,177],[372,178],[402,179],[397,180],[398,181],[400,182],[401,183],[373,184],[377,185],[378,186],[113,3],[414,187],[379,188],[282,189],[383,190],[384,191],[389,192],[376,193],[390,194],[393,195],[395,196],[370,197],[283,198],[396,199],[403,200],[404,201],[287,202],[405,203],[406,204],[407,205],[303,206],[408,207],[409,208],[410,209],[292,210],[295,211],[411,212],[412,213],[304,214],[413,215],[366,216],[341,217],[356,218],[343,219],[350,220],[351,221],[361,222],[352,223],[342,224],[349,225],[354,226],[353,227],[347,228],[348,229],[367,230],[360,231],[365,232],[364,233],[359,234],[357,235],[355,236],[358,237],[362,238],[363,239],[337,240],[334,241],[336,242],[335,243],[333,244],[279,245],[305,246],[306,247],[289,248],[291,249],[386,250],[281,251],[375,252],[392,253],[288,246],[290,246],[385,246],[280,246],[374,246],[391,246],[284,245],[286,254],[285,255],[212,245],[214,256],[388,257],[294,258],[382,259],[213,260],[387,260],[293,260],[381,260],[251,261],[252,262],[250,138],[339,263],[369,264],[108,265],[338,266],[138,267],[274,268],[368,269]],"exportedModulesMap":[[141,1],[140,2],[139,3],[144,4],[143,5],[153,6],[156,7],[189,2],[190,8],[191,9],[192,8],[110,8],[111,10],[112,11],[185,3],[188,12],[172,13],[197,14],[195,8],[196,15],[177,16],[179,17],[182,18],[181,19],[198,8],[150,20],[160,21],[161,22],[155,23],[162,24],[163,25],[164,25],[154,26],[171,27],[166,21],[165,28],[167,29],[157,30],[168,24],[169,22],[159,31],[170,28],[158,32],[205,33],[206,8],[201,34],[200,35],[178,8],[145,8],[148,36],[147,8],[151,2],[207,3],[183,37],[176,38],[174,39],[175,40],[277,41],[107,42],[425,43],[126,44],[127,45],[125,46],[128,47],[129,48],[130,49],[131,50],[132,51],[133,52],[134,53],[135,54],[136,55],[137,56],[31,57],[81,58],[34,59],[35,60],[36,61],[37,62],[38,63],[39,64],[40,65],[42,66],[43,67],[44,68],[45,68],[46,69],[47,70],[48,71],[49,72],[50,73],[82,74],[51,68],[52,75],[53,76],[55,77],[56,78],[57,79],[60,68],[61,80],[62,81],[63,82],[65,68],[66,83],[67,84],[79,85],[69,86],[70,87],[71,88],[73,82],[75,89],[76,82],[309,90],[313,3],[314,91],[311,92],[312,93],[310,90],[254,94],[253,95],[265,96],[269,97],[267,98],[268,99],[273,100],[255,101],[256,102],[270,103],[271,104],[272,97],[86,105],[88,95],[90,106],[92,107],[98,108],[94,109],[93,110],[97,111],[95,112],[96,113],[100,114],[91,115],[89,116],[99,117],[106,118],[101,119],[105,120],[103,95],[119,121],[118,121],[123,122],[117,121],[120,123],[121,123],[122,121],[308,124],[330,125],[325,126],[321,127],[323,128],[317,128],[329,129],[324,128],[319,128],[318,128],[316,130],[320,128],[326,131],[328,132],[322,128],[332,133],[327,134],[331,135],[315,136],[257,95],[262,137],[259,138],[260,139],[261,140],[264,141],[263,142],[223,143],[218,144],[219,145],[220,146],[216,147],[217,138],[222,148],[221,149],[249,150],[242,151],[244,152],[245,153],[246,154],[243,101],[247,155],[248,156],[224,138],[225,157],[226,158],[227,147],[228,95],[241,159],[230,95],[231,147],[232,95],[234,95],[235,138],[236,95],[237,160],[238,95],[239,161],[240,95],[210,162],[211,163],[208,164],[302,165],[300,166],[299,167],[421,168],[423,169],[422,168],[420,170],[424,171],[345,172],[83,42],[419,173],[415,174],[84,175],[114,270],[371,271],[372,272],[402,179],[397,180],[398,273],[400,182],[401,183],[373,274],[377,275],[378,276],[113,3],[414,187],[379,277],[282,189],[383,278],[384,191],[389,279],[376,280],[390,194],[393,281],[395,282],[370,283],[283,284],[396,285],[403,286],[404,201],[287,287],[405,288],[406,289],[407,290],[303,291],[408,207],[409,292],[410,209],[292,278],[295,293],[411,294],[412,295],[304,290],[413,215],[366,296],[341,217],[356,218],[343,297],[350,298],[351,221],[361,299],[352,300],[342,301],[349,225],[354,302],[353,303],[347,304],[348,302],[367,230],[360,305],[365,232],[364,306],[359,234],[357,235],[355,236],[358,237],[362,307],[363,308],[337,240],[334,309],[336,242],[335,310],[333,244],[279,245],[305,246],[306,247],[289,248],[291,249],[386,250],[281,251],[375,252],[392,253],[288,246],[290,246],[385,246],[280,246],[374,246],[391,246],[284,245],[286,254],[285,255],[212,245],[214,256],[388,257],[294,258],[382,259],[213,260],[387,260],[293,260],[381,260],[251,138],[252,311],[250,138],[339,312],[369,264],[108,265],[338,313],[274,268],[368,314]],"semanticDiagnosticsPerFile":[141,140,139,144,143,153,156,189,190,191,192,110,111,112,109,184,185,186,188,187,172,193,197,195,194,196,177,179,182,180,181,198,173,150,149,142,160,161,155,162,163,164,154,171,166,165,167,157,168,169,159,170,158,205,203,204,206,201,200,199,178,202,145,146,148,147,151,207,183,152,176,174,175,277,296,107,425,126,127,125,128,129,130,131,132,133,134,135,136,137,80,31,33,81,34,35,36,37,38,39,40,41,42,43,44,45,46,47,32,77,48,49,50,82,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,79,69,70,71,72,73,74,78,75,76,276,380,275,309,313,314,311,312,310,254,253,265,269,266,267,268,273,255,256,270,271,272,86,85,88,90,92,98,94,93,97,95,96,100,91,89,99,106,101,105,102,103,104,119,118,123,117,120,121,115,116,122,308,330,325,321,323,317,329,324,319,318,316,320,326,328,322,332,327,331,315,307,257,262,259,260,261,258,264,263,215,223,218,219,220,216,217,222,221,249,242,244,245,246,243,247,248,224,225,226,227,228,241,229,230,231,232,233,234,235,236,237,238,239,240,124,416,209,210,211,208,302,300,301,299,297,298,417,421,423,422,420,424,87,345,346,344,83,419,418,6,8,7,2,9,10,11,12,13,14,15,16,3,4,20,17,18,19,21,22,23,5,24,25,26,27,28,1,29,415,84,30,114,371,372,402,399,397,398,400,401,373,377,378,113,414,379,282,383,384,389,278,376,390,393,395,370,283,396,403,404,287,405,406,407,303,408,409,410,292,295,411,412,304,413,366,341,356,343,350,351,361,352,342,349,354,353,347,348,367,360,365,364,359,357,355,358,362,363,337,334,336,335,333,279,305,306,289,291,386,281,375,392,288,290,385,280,374,391,284,286,285,212,214,388,294,382,213,387,293,381,251,252,394,250,339,369,108,338,138,274,368,340]},"version":"4.7.2"}
\ No newline at end of file
+{"program":{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../src/providers/cache.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostic_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/util/types.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/globals.global.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/ts3.6/base.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/base.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/node-cache/index.d.ts","../../src/providers/cache-node.ts","../../node_modules/@uniswap/sdk-core/dist/chains.d.ts","../../node_modules/@uniswap/sdk-core/dist/addresses.d.ts","../../node_modules/jsbi/jsbi.d.ts","../../node_modules/@uniswap/sdk-core/dist/constants.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/token.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/baseCurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/nativeCurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/currency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/price.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/ether.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/weth9.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sqrt.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/index.d.ts","../../node_modules/@types/bunyan/index.d.ts","../../src/util/log.ts","../../node_modules/@ethersproject/bytes/lib/index.d.ts","../../node_modules/@ethersproject/bignumber/lib/bignumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/fixednumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/index.d.ts","../../src/providers/gas-price-provider.ts","../../src/providers/caching-gas-provider.ts","../../node_modules/@uniswap/token-lists/dist/tokenlist.schema.json","../../node_modules/@uniswap/token-lists/dist/types.d.ts","../../node_modules/@uniswap/token-lists/dist/isVersionUpdate.d.ts","../../node_modules/@uniswap/token-lists/dist/getVersionUpgrade.d.ts","../../node_modules/@uniswap/token-lists/dist/diffTokenLists.d.ts","../../node_modules/@uniswap/token-lists/dist/minVersionBump.d.ts","../../node_modules/@uniswap/token-lists/dist/nextVersion.d.ts","../../node_modules/@uniswap/token-lists/dist/versionComparator.d.ts","../../node_modules/@uniswap/token-lists/dist/index.d.ts","../../node_modules/axios/index.d.ts","../../src/util/metric.ts","../../node_modules/@ethersproject/abi/lib/fragments.d.ts","../../node_modules/@ethersproject/abi/lib/coders/abstract-coder.d.ts","../../node_modules/@ethersproject/abi/lib/abi-coder.d.ts","../../node_modules/@ethersproject/properties/lib/index.d.ts","../../node_modules/@ethersproject/abi/lib/interface.d.ts","../../node_modules/@ethersproject/abi/lib/index.d.ts","../../node_modules/@ethersproject/strings/lib/bytes32.d.ts","../../node_modules/@ethersproject/strings/lib/idna.d.ts","../../node_modules/@ethersproject/strings/lib/utf8.d.ts","../../node_modules/@ethersproject/strings/lib/index.d.ts","../../node_modules/@types/lodash/common/common.d.ts","../../node_modules/@types/lodash/common/array.d.ts","../../node_modules/@types/lodash/common/collection.d.ts","../../node_modules/@types/lodash/common/date.d.ts","../../node_modules/@types/lodash/common/function.d.ts","../../node_modules/@types/lodash/common/lang.d.ts","../../node_modules/@types/lodash/common/math.d.ts","../../node_modules/@types/lodash/common/number.d.ts","../../node_modules/@types/lodash/common/object.d.ts","../../node_modules/@types/lodash/common/seq.d.ts","../../node_modules/@types/lodash/common/string.d.ts","../../node_modules/@types/lodash/common/util.d.ts","../../node_modules/@types/lodash/index.d.ts","../../node_modules/@ethersproject/networks/lib/types.d.ts","../../node_modules/@ethersproject/networks/lib/index.d.ts","../../node_modules/@ethersproject/transactions/lib/index.d.ts","../../node_modules/@ethersproject/web/lib/index.d.ts","../../node_modules/@ethersproject/abstract-provider/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/formatter.d.ts","../../node_modules/@ethersproject/providers/lib/base-provider.d.ts","../../node_modules/@ethersproject/abstract-signer/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/websocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/url-json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/alchemy-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ankr-provider.d.ts","../../node_modules/@ethersproject/providers/lib/cloudflare-provider.d.ts","../../node_modules/@ethersproject/providers/lib/etherscan-provider.d.ts","../../node_modules/@ethersproject/providers/lib/fallback-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ipc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/infura-provider.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-batch-provider.d.ts","../../node_modules/@ethersproject/providers/lib/nodesmith-provider.d.ts","../../node_modules/@ethersproject/providers/lib/pocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/web3-provider.d.ts","../../node_modules/@ethersproject/providers/lib/index.d.ts","../../node_modules/@ethersproject/contracts/lib/index.d.ts","../../node_modules/@ethersproject/logger/lib/index.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlist.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlists.d.ts","../../node_modules/@ethersproject/wordlists/lib/index.d.ts","../../node_modules/@ethersproject/hdnode/lib/index.d.ts","../../node_modules/@ethersproject/signing-key/lib/index.d.ts","../../node_modules/@ethersproject/json-wallets/lib/crowdsale.d.ts","../../node_modules/@ethersproject/json-wallets/lib/inspect.d.ts","../../node_modules/@ethersproject/json-wallets/lib/keystore.d.ts","../../node_modules/@ethersproject/json-wallets/lib/index.d.ts","../../node_modules/@ethersproject/wallet/lib/index.d.ts","../../node_modules/@ethersproject/constants/lib/addresses.d.ts","../../node_modules/@ethersproject/constants/lib/bignumbers.d.ts","../../node_modules/@ethersproject/constants/lib/hashes.d.ts","../../node_modules/@ethersproject/constants/lib/strings.d.ts","../../node_modules/@ethersproject/constants/lib/index.d.ts","../../node_modules/@ethersproject/address/lib/index.d.ts","../../node_modules/@ethersproject/base64/lib/base64.d.ts","../../node_modules/@ethersproject/base64/lib/index.d.ts","../../node_modules/@ethersproject/basex/lib/index.d.ts","../../node_modules/@ethersproject/hash/lib/id.d.ts","../../node_modules/@ethersproject/hash/lib/namehash.d.ts","../../node_modules/@ethersproject/hash/lib/message.d.ts","../../node_modules/@ethersproject/hash/lib/typed-data.d.ts","../../node_modules/@ethersproject/hash/lib/index.d.ts","../../node_modules/@ethersproject/keccak256/lib/index.d.ts","../../node_modules/@ethersproject/sha2/lib/types.d.ts","../../node_modules/@ethersproject/sha2/lib/sha2.d.ts","../../node_modules/@ethersproject/sha2/lib/index.d.ts","../../node_modules/@ethersproject/solidity/lib/index.d.ts","../../node_modules/@ethersproject/random/lib/random.d.ts","../../node_modules/@ethersproject/random/lib/shuffle.d.ts","../../node_modules/@ethersproject/random/lib/index.d.ts","../../node_modules/@ethersproject/rlp/lib/index.d.ts","../../node_modules/@ethersproject/units/lib/index.d.ts","../../node_modules/ethers/lib/utils.d.ts","../../node_modules/ethers/lib/_version.d.ts","../../node_modules/ethers/lib/ethers.d.ts","../../node_modules/ethers/lib/index.d.ts","../../src/types/v3/commons.ts","../../src/types/v3/IERC20Metadata.d.ts","../../src/types/v3/factories/IERC20Metadata__factory.ts","../../node_modules/@uniswap/v3-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tickDataProvider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tickListDataProvider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/calldata.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/computePoolAddress.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encodeRouteToPath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encodeSqrtRatioX96.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/fullMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/isSorted.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/liquidityMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/maxLiquidityForAmounts.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/mostSignificantBit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/nearestUsableTick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/priceTickConversions.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/sqrtPriceMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/swapMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickLibrary.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickList.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/multicall.d.ts","../../node_modules/@uniswap/v3-sdk/dist/selfPermit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/nonfungiblePositionManager.d.ts","../../node_modules/@uniswap/v3-sdk/dist/payments.d.ts","../../node_modules/@uniswap/v3-sdk/dist/quoter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/staker.d.ts","../../node_modules/@uniswap/v3-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/index.d.ts","../../src/util/chains.ts","../../src/util/addresses.ts","../../src/util/amounts.ts","../../node_modules/@uniswap/router-sdk/dist/constants.d.ts","../../node_modules/@uniswap/router-sdk/dist/approveAndCall.d.ts","../../node_modules/@uniswap/router-sdk/dist/multicallExtended.d.ts","../../node_modules/@uniswap/router-sdk/dist/paymentsExtended.d.ts","../../node_modules/@uniswap/v2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v2-sdk/dist/errors.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/pair.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v2-sdk/dist/router.d.ts","../../node_modules/@uniswap/v2-sdk/dist/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedRoute/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/protocol.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedRoute/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/encodeMixedRouteToPath.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/index.d.ts","../../src/util/protocols.ts","../../node_modules/@uniswap/default-token-list/build/uniswap-default.tokenlist.json","../../node_modules/@types/retry/index.d.ts","../../node_modules/@types/async-retry/index.d.ts","../../src/providers/provider.ts","../../src/types/other/commons.ts","../../src/types/other/TokenFeeDetector.d.ts","../../src/types/other/factories/TokenFeeDetector__factory.ts","../../src/providers/token-fee-fetcher.ts","../../src/types/other/ITokenValidator.d.ts","../../src/types/other/factories/ITokenValidator__factory.ts","../../src/providers/multicall-provider.ts","../../src/providers/token-validator-provider.ts","../../src/types/v2/commons.ts","../../src/types/v2/IUniswapV2Pair.d.ts","../../src/types/v2/factories/IUniswapV2Pair__factory.ts","../../src/providers/v2/pool-provider.ts","../../src/types/other/GasDataArbitrum.d.ts","../../src/types/other/factories/GasDataArbitrum__factory.ts","../../src/types/other/GasPriceOracle.d.ts","../../src/types/other/factories/GasPriceOracle__factory.ts","../../src/providers/v3/gas-data-provider.ts","../../src/types/v3/IUniswapV3PoolState.d.ts","../../src/types/v3/factories/IUniswapV3PoolState__factory.ts","../../src/providers/v3/pool-provider.ts","../../node_modules/@types/await-timeout/index.d.ts","../../node_modules/graphql/language/source.d.ts","../../node_modules/graphql/language/tokenKind.d.ts","../../node_modules/graphql/language/ast.d.ts","../../node_modules/graphql-request/dist/types.d.ts","../../node_modules/graphql-request/dist/types.dom.d.ts","../../node_modules/graphql-request/dist/index.d.ts","../../src/providers/v2/subgraph-provider.ts","../../src/providers/v3/subgraph-provider.ts","../../src/types/other/Erc20.d.ts","../../src/types/other/factories/Erc20__factory.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/routerCommands.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/Command.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/allowanceTransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/signatureTransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/AllowanceProvider.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/index.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/inputTokens.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/seaport.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/foundation.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nftx.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nft20.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/sudoswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/cryptopunk.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/x2y2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/element-market.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/looksRareV2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/NFTTrade.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/uniswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/unwrapWETH.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/constants.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/index.d.ts","../../src/routers/router.ts","../../src/routers/legacy-router/bases.ts","../../src/routers/legacy-router/legacy-router.ts","../../src/routers/legacy-router/index.ts","../../src/routers/index.ts","../../src/util/methodParameters.ts","../../src/util/gas-factory-helpers.ts","../../src/util/unsupported-tokens.ts","../../src/routers/alpha-router/config.ts","../../src/routers/alpha-router/gas-models/gas-model.ts","../../src/routers/alpha-router/entities/route-with-valid-quote.ts","../../node_modules/mnemonist/utils/types.d.ts","../../node_modules/mnemonist/fixed-reverse-heap.d.ts","../../node_modules/mnemonist/queue.d.ts","../../src/routers/alpha-router/gas-models/v3/gas-costs.ts","../../src/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/index.ts","../../src/routers/alpha-router/functions/best-swap-route.ts","../../src/routers/alpha-router/functions/calculate-ratio-amount-in.ts","../../src/routers/alpha-router/functions/get-candidate-pools.ts","../../src/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.ts","../../src/routers/alpha-router/quoters/model/results/get-routes-result.ts","../../src/routers/alpha-router/entities/index.ts","../../src/routers/alpha-router/quoters/model/results/get-quotes-result.ts","../../src/routers/alpha-router/quoters/model/results/index.ts","../../src/routers/alpha-router/quoters/model/index.ts","../../src/routers/alpha-router/quoters/base-quoter.ts","../../src/routers/alpha-router/functions/compute-all-routes.ts","../../src/routers/alpha-router/quoters/v2-quoter.ts","../../src/routers/alpha-router/quoters/v3-quoter.ts","../../src/routers/alpha-router/quoters/mixed-quoter.ts","../../src/routers/alpha-router/quoters/index.ts","../../src/routers/alpha-router/alpha-router.ts","../../src/routers/alpha-router/index.ts","../../src/util/routes.ts","../../src/util/index.ts","../../src/providers/token-provider.ts","../../src/providers/caching-token-list-provider.ts","../../src/providers/caching-token-provider.ts","../../src/providers/caching/route/model/cached-route.ts","../../src/providers/caching/route/model/cached-routes.ts","../../src/providers/caching/route/model/cache-mode.ts","../../src/providers/caching/route/model/index.ts","../../src/providers/caching/route/route-caching-provider.ts","../../src/providers/caching/route/index.ts","../../src/providers/eip-1559-gas-price-provider.ts","../../src/types/other/Permit2.d.ts","../../src/types/other/factories/Permit2__factory.ts","../../src/providers/simulation-provider.ts","../../src/providers/eth-estimate-gas-provider.ts","../../src/providers/eth-gas-station-info-gas-price-provider.ts","../../src/providers/legacy-gas-price-provider.ts","../../node_modules/@types/stats-lite/index.d.ts","../../src/types/v3/UniswapInterfaceMulticall.d.ts","../../src/types/v3/factories/UniswapInterfaceMulticall__factory.ts","../../src/providers/multicall-uniswap-provider.ts","../../src/providers/on-chain-gas-price-provider.ts","../../src/types/other/IMixedRouteQuoterV1.d.ts","../../src/types/other/factories/IMixedRouteQuoterV1__factory.ts","../../src/types/v3/IQuoterV2.d.ts","../../src/types/v3/factories/IQuoterV2__factory.ts","../../src/providers/on-chain-quote-provider.ts","../../src/providers/static-gas-price-provider.ts","../../src/types/other/SwapRouter02.d.ts","../../src/types/other/factories/SwapRouter02__factory.ts","../../src/providers/swap-router-provider.ts","../../src/util/callData.ts","../../src/providers/tenderly-simulation-provider.ts","../../src/providers/token-properties-provider.ts","../../src/providers/uri-subgraph-provider.ts","../../src/providers/v2/caching-pool-provider.ts","../../src/providers/v2/caching-subgraph-provider.ts","../../src/providers/v2/quote-provider.ts","../../src/providers/v2/static-subgraph-provider.ts","../../src/providers/v2/subgraph-provider-with-fallback.ts","../../src/providers/v2/uri-subgraph-provider.ts","../../src/providers/v3/caching-pool-provider.ts","../../src/providers/v3/caching-subgraph-provider.ts","../../src/providers/v3/static-subgraph-provider.ts","../../src/providers/v3/subgraph-provider-with-fallback.ts","../../src/providers/v3/uri-subgraph-provider.ts","../../src/providers/index.ts","../../src/index.ts","../../node_modules/chalk/index.d.ts","../../node_modules/jest-diff/build/cleanupSemantic.d.ts","../../node_modules/pretty-format/build/types.d.ts","../../node_modules/pretty-format/build/index.d.ts","../../node_modules/jest-diff/build/types.d.ts","../../node_modules/jest-diff/build/diffLines.d.ts","../../node_modules/jest-diff/build/printDiffs.d.ts","../../node_modules/jest-diff/build/index.d.ts","../../node_modules/jest-matcher-utils/build/index.d.ts","../../node_modules/@types/jest/index.d.ts"],"fileInfos":[{"version":"f5c28122bee592cfaf5c72ed7bcc47f453b79778ffa6e301f45d21a0970719d4","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06",{"version":"3f149f903dd20dfeb7c80e228b659f0e436532de772469980dbd00702cc05cc1","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"43fb1d932e4966a39a41b464a12a81899d9ae5f2c829063f5571b6b87e6d2f9c","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"0d5f52b3174bee6edb81260ebcd792692c32c81fd55499d69531496f3f2b25e7","affectsGlobalScope":true},{"version":"810627a82ac06fb5166da5ada4159c4ec11978dfbb0805fe804c86406dab8357","affectsGlobalScope":true},{"version":"181f1784c6c10b751631b24ce60c7f78b20665db4550b335be179217bacc0d5f","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"75ec0bdd727d887f1b79ed6619412ea72ba3c81d92d0787ccb64bab18d261f14","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"12a310447c5d23c7d0d5ca2af606e3bd08afda69100166730ab92c62999ebb9d","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"cd483c056da900716879771893a3c9772b66c3c88f8943b4205aec738a94b1d0","affectsGlobalScope":true},{"version":"c37f8a49593a0030eecb51bbfa270e709bec9d79a6cc3bb851ef348d4e6b26f8","affectsGlobalScope":true},{"version":"3d8a304beaf1adf596a5af671bc7ff50b2cf20ffaba073a645769be092476752","signature":"353cfef0e68e4ddf92d4679fa03e7982336909df285fe6d95978f06b3ffad4b0"},"c7bdc99177a2a94d25fb13722adaaf5b3291bf70b4d1b27584ba189dd3889ba3",{"version":"d1c92b66c4105659fcad4eb76a1481f7311033e117d0678a1ec545e8ddb8d4c6","affectsGlobalScope":true},"e23424b97418eca3226fd24de079f1203eb70360622e4e093af2aff14d4be6ec","dee93c07b4df5e26010dc9ec4cdf4d6e4076bb4474d2a8371529217c8b2740a4","ed40f2f184db052dc8df62d1f199823c8bbccc487c0a2a7c54eeea0badcf4378","04eaa93bd75f937f9184dcb95a7983800c5770cf8ddd8ac0f3734dc02f5b20ef",{"version":"c8155caf28fc7b0a564156a5df28ad8a844a3bd32d331d148d8f3ce88025c870","affectsGlobalScope":true},"45ac321f2e15d268fd74a90ddaa6467dcaaff2c5b13f95b4b85831520fb7a491","dfc747ab8dd5f623055a4c26fd35e8cceca869fd3f1cf09701c941ca3679665a","c9f5f2920ff61d7158417b8440d5181ddc34a3dfef811a5677dd8a9fb91471e9","5cc0a492da3602510b8f5ed1852b1e0390002780d8758fbc8c0cd023ca7085f8","ec7dafafe751a5121f8f1c80201ebe7e7238c47e6329280a73c4d1ca4bb7fa28","64debeb10e4b7ae4ec9e89bfb4e04c6101ab98c3cc806d14e5488607cfec2753",{"version":"2866a528b2708aa272ec3eaafd3c980abb23aec1ef831cfc5eb2186b98c37ce5","affectsGlobalScope":true},{"version":"a5782d6cea81fe43d2db7ed41e789458c933ab3ab60602f7b5b14c4da3370496","affectsGlobalScope":true},"f258ba66915f0196ec344bc53afe1888240bbcc855ebd151b6cc072275533319","6194335ee3353f7226ba31f31d6301d0c6be87228419c0a08976ccd9d4f1213e","3ac12a54cfaa84683506db8d4cf779135a271d9f0ec18930cf53e61fbeea0c5d","cf3d3b087d1a8a3355eec47d206162c75e912315b9b5c1cd49fda93e948fb80a","36f316c066c4a72dd6f19fec49a074f935744fc9ccbe75c87ebc07fb2feb9062","42176966283d3835c34278b9b5c0f470d484c0c0c6a55c20a2c916a1ce69b6e8","0cff7901aedfe78e314f7d44088f07e2afa1b6e4f0473a4169b8456ca2fb245d","ec70fd6f8a9a83f850dab2960a6789e93d5b034b354a16814cad5daabf62a360","e2236264a811ed1d09a2487a433e8f5216ae62378cf233954ae220cf886f6717","3ec1e108d587a5661ec790db607f482605ba9f3830e118ce578e3ffa3c42e22b","100b3bb9d39d2b1b5340f1bf45a52e94ef1692b45232b4ba00fac5c3cc56d331",{"version":"04fe7e7d8008887943260af1fde2bfd4877e0dc57bf634e0f0b2f3d1794dfd11","affectsGlobalScope":true},"7f77304372efe3c9967e5f9ea2061f1b4bf41dc3cda3c83cdd676f2e5af6b7e6","992c6f6be16c0a1d2eec13ece33adeea2c747ba27fcd078353a8f4bb5b4fea58","2597718d91e306949d89e285bf34c44192014ef541c3bd7cbb825c022749e974","a6b0abdb67d63ebe964ba5fee31bc3daf10c12eecd46b24d778426010c04c67e","ac4801ebc2355ba32329070123b1cd15891bf71b41dcaf9e75b4744832126a59","fd2298fba0640e7295e7bd545e2dfbfcccbb00c27019e501c87965a02bbdebf6","4fd3c4debadce3e9ab9dec3eb45f7f5e2e3d4ad65cf975a6d938d883cfb25a50","71ddd49185b68f27bfac127ef5d22cb2672c278e53e5370d9020ef50ca9c377d","b1ea7a6eaa7608e0e0529aebd323b526a79c6c05a4e519ae5c779675004dcdf1","9fcb033a6208485d8f3fadde31eb5cbcaf99149cff3e40c0dc53ebc6d0dff4e9","7df562288f949945cf69c21cd912100c2afedeeb7cdb219085f7f4b46cb7dde4","9d16690485ff1eb4f6fc57aebe237728fd8e03130c460919da3a35f4d9bd97f5","dcc6910d95a3625fd2b0487fda055988e46ab46c357a1b3618c27b4a8dd739c9","f4149f1aa299474c7040a35fe8f8ac2ad078cc1b190415adc1fff3ed52d490ea","3730099ed008776216268a97771de31753ef71e0a7d0ec650f588cba2a06ce44","8d649dbc429d7139a1d9a14ea2bf8af1dc089e0a879447539587463d4b6c248c","60c9e27816ec8ac8df7240598bb086e95b47edfb454c5cbf4003c812e0ed6e39","e361aecf17fc4034b4c122a1564471cdcd22ef3a51407803cb5a5fc020c04d02","4926467de88a92a4fc9971d8c6f21b91eca1c0e7fc2a46cc4638ab9440c73875",{"version":"2708349d5a11a5c2e5f3a0765259ebe7ee00cdcc8161cb9990cb4910328442a1","affectsGlobalScope":true},"fc0ae4a8ad3c762b96f9d2c3700cb879a373458cb0bf3175478e3b4f85f7ef2f","fabbec378e1ddd86fcf2662e716c2b8318acedb664ee3a4cba6f9e8ee8269cf1","b3593bd345ebea5e4d0a894c03251a3774b34df3d6db57075c18e089a599ba76","e61a21e9418f279bc480394a94d1581b2dee73747adcbdef999b6737e34d721b","efd55e8ca79171bf26c0d0e30221cb8ee1f5a31dd0c791ec4b2e886f42bab124","6f4e4e5a046171e70dfb4b1f3e6212de786bf2c1e2c4383ae0e61c4726fdd168",{"version":"466e1d21fc2bd1ed3f457853f3bd148eecef96db32d3f6128e76243786e5b544","signature":"e8bf553e815726a9063a12dad1d379ff844e4b691bbd1cfc81ab4e4e262f507d"},"90e9f93e1aa3fc6e594c492b40cdf93b87c77d84eabc6e41edf63da7fff6a36c","b03d4fd4a9472c5d3d0fd9cf502b1720b851cd849d810be9068fd0e4c944e5be","e788661cb1508db23611453d1ee67413429d3f412a1ef589ebe95aed52047588","d0efd4f632c93e90d91ee5e4611f3d7e4bb946c07eb6824bcaf08cf589f18c5d","38f2c79f1f95ec908326f41d43916eb590ce8c65b636349964abcecdfba11ecb","2c414f90866049acbd59a9dad2e155282a02080be773cbfb45ef5aaeae4c43c7","01a4823f194960e7d6cf43ddf58cc477ce43870b76c03764f3893c8ef9a505df","1c6615826296916563f6f88e21e8c1d1be76cc8c2a242fc2d51ffcaf856ed7d8","5ca71a9d355e4cd4446239366a3c281964a9623c01dac99021ad5f1a58f1c11f","c7764a8493c199941aa2f7689ac8d443162c18b19f02e4a3838b20135c485772","a77676cd14de48df1be967e9fad0825f259d5c6d8ab753251ea31886ae2467ec","b69ba53fe9ac4d116dfbae858949f81aff71b948205e4e0aa0237a67fb3e47a9","9b0b92c72051abf6a3fab9c943e9e5e076686119ae53ffd1c6f3caf4a5151cef","a6aa4f1777cf98dc18c63ee05de4c2d7eb0c9f7749354f4680bc86b60d618e83","ad30b20c6aec0fa39f7ca7c6922225450e67aea3b84a691baa74996da6c585ce","8b94d1eabccaec5b77706c4a88225d28a4ab8bc46da7af29dc303c9ec2950fea","5947cd6e46d10873b88edfea7f25a400a838e0fbf7def96bf45ad72b1913e683","d7ef97d18136014b6e15927a84bec746ca84b25c7ff254ab639285c3e6901f44","e3da81b21477fb45fe1d9981d56f0c5390f526724990f0156fc2fed235fdbf3c","b84e91d84f161245dbda145f2a7e8d0891583763d9a8e24e331ab00979ded8da","b63c4a317b6835b3b9bbae96420615b8e69b2264e37258e98c7d36423c6aa099","823739a2e34a0cde0a796c14bfc88978a1e70470023b9d885bacaa5d1b0a59ae","d9cb063f3a5d16883872bdb04863a3da6b63828661a0dcdcb013de8eb4fac336",{"version":"f1be5cefbf112e62d0cd0cacdb0371674fe45a831acca6b968ebc447663bbaa5","signature":"1c27aa74938a2ea9248932b87078a04ffd9e1e1a0b2c2df6c06a56b344cb255e"},"1fcb8b15db812281d69a3090d488903f9e93033004aef9d8889ca3ad0753a96f","bdf5a95eb0a2dd1d39805bdf51b46ba012bb9b92b2ddaae16219595bba7678a5","9f794a0e8550a03baff865a3961cc22afbd85bc4ba9672bdda036971928f85f4","66a697d1e4cdbf25cdce4644a8085a8563041fa8c7731d4d9f5e8f22e66ba72c",{"version":"e84d573f29521225f6873c6f3a795d52374ffbac0f2a4780c9dda2c40a6bb989","signature":"24a4d712063c22742479d03ed750d44f98465e64af9d08789965a97f8d35d7e8"},{"version":"9912e45816078d618083bd0471f72cfd4cb9b0c7de0cd7faeba22a6c8e394622","signature":"de39ab819d91908b2593a73491d639f5f077817be95390a0f23eb876af447046"},"09eed28e33827041ce6f9c46b5b445b3378265da692f261cee49f86003e578f4","1bd83856d2cf899b99c0320eee895dbdca68c7b7750f72274d4f628e8075d192","4c86198a1bd84c98a176684ecb3ae8533d1260763805eb5517f9293e583e99db","67296823a337ee1ef2bcbd2823d624c66ff1160cc15e7f11961f54c1e2eed266","451e59101fecc92272d6c59254874d09d51c0bc5e801d2593790c6789c12b6c3","6520b6e1b4707b8fe46a8cdd47c92929f9ad1587278e186becdf2cc1f063b2c1","e92a1d122620067972ca8f664278dfc89072f281074c3293aa57048ce51f1bfc","1175e20a9266637ef3d03a37c6d34f3b583ead76eaf41ba71d9569388a319eb8","ad9206b9b709f19567035b930a651ef25ee4a30cb0938b4325868f685400e170","3154a026075044aa102298fe9e6a7a14aaa26a06270680c7478a1765af8ffb09",{"version":"621ead1e1fde8e667a228a19dd90cb463e24496214ca1a1e3d2611d4634a9fce","signature":"a53707eeea688a06431b0f7dfa36482ff37115cb2c4e1cfb47567f1b1a547b4f"},"a0c8e17f4d1ea2704c62d7349bc3b8d9a12e3761b5960cb44144d3f0333b3fcb","3471c0df3d0391e1dffe6e8bf150294531b2b71a2afa5f2b86e52bf84a5db60a","5d4df4de055eddf3187094f938a640f8d96e4c551a47d6686596fdb6ba4c3014","8bc2cad630da1033c1fd8d7df2bffb18af0da6113bd086a8bbec04a2471a1e00","a1059d1bbc8ad46bfe668b8450e7e8002887c4ab987bdb96d6108d8023f8bb8f","5134885e9648e2c6745f8aa1c3e7f5ab3b3617258b3d81ca02de6655ede3d74e","5b919d9204446816876000e03f033458527bde5e3637783b2bc2e7e9ef7ce897","213984ba990f03127a98c3f022d5ca0f0d42df64d4dca199f7319448ce6f3021","020ab2020569964d12e40c68ceae39f40f6c0bee9d502a180f039fcb59c2e34d","aa50dc8a102c76282915e78944293a777866efe6d220a28884ac4a42d7f4c4e2","3594c022901a1c8993b0f78a3f534cfb81e7b619ed215348f7f6882f3db02abc","438284c7c455a29b9c0e2d1e72abc62ee93d9a163029ffe918a34c5db3b92da2","0c75b204aed9cf6ff1c7b4bed87a3ece0d9d6fc857a6350c0c95ed0c38c814e8","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","c9f396e71966bd3a890d8a36a6a497dbf260e9b868158ea7824d4b5421210afe","509235563ea2b939e1bbe92aae17e71e6a82ceab8f568b45fb4fce7d72523a32","9364c7566b0be2f7b70ff5285eb34686f83ccb01bda529b82d23b2a844653bfb","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","c311349ec71bb69399ffc4092853e7d8a86c1ca39ddb4cd129e775c19d985793","3c92b6dfd43cc1c2485d9eba5ff0b74a19bb8725b692773ef1d66dac48cda4bd","4908e4c00832b26ce77a629de8501b0e23a903c094f9e79a7fec313a15da796a","2630a7cbb597e85d713b7ef47f2946d4280d3d4c02733282770741d40672b1a5",{"version":"0714e2046df66c0e93c3330d30dbc0565b3e8cd3ee302cf99e4ede6220e5fec8","affectsGlobalScope":true},"4f1ae3f24125216cf07c5211a3f00d2bb4782d7cc76c0681603f8249f9232ff0","d3fb92a5640f83f7844d60b35317a0f95c27e3658a749d76d218c461ad091668","d1f8bfcd91b284657ef8187c55ace7db91a3c43e642c3f14e54364154932f7e4","f54c92bfcae54f360fe79514746efce4870e4ddabc064e95d406bba291e9f672","175fd7186fa6a70f9db9b270a04a503cae23cf01cb77e3905bac115c38424cf7","277afd6ab6ec72889e2988e0ddd7d138c1f512e68a1fa4e90eedfd71e2097a51","c0908f85f2b645d375127a3b53a17a65f782e17962d5c1eb68f08b1188acbf15","c993f7ed1b8e1023c1f2ee5b262dbc3b70b27475674e40a53a58591f9972dacc","3fadac5d409cc2f27b1d2f4e7568600f02840205f301c9ae7a3068b46476438b","da6aae64ad559286830fd44c81e3d33303348f184af7db4fde8dd99ae9749407","3633f87c97d359cb55fa7bf0668fb2be8a23342951af6ec2d06e6d0cf7409371","cc3a5427d44fc77ff25e80b3edee4650a51f83de761faf5e633994ecf1ab1b44","b350eda75c6e47299b36002b31d5b220c405c21c365e708989829db013fadbb4","f421882756b6714834ae4687ab1aeadf344a1cc45437d2edffbac020ff3801c1","1d61d6ad832dabafbf63b86c5a79d704f2c8763ada9318e135b17a3cb2d09b32","e5cef5de3e5ad3436d414d20743231e284733b9cf4375dc79eff4fcca4282f99","e624419ba84e33e661e89a28083119ca41f6953dba09a4f82b660684087afe6d","942be430bd0feaced2e3e598273b17e50ea565ec9dac840b580b0b99e1a3cd5c","73350006cec5a0c6b71d53b0b0ddbfb82be96752a9c4e3c904c59e633bc9485e","a7df5c2e9594966c7e0d4a763b13ed5727506d892669df5f7bc9826f539c1d35","258cc5cd6891f6bcbaccefd953997038844e7f65d582cac987ffabf7181bcd4c","00a6db28fc4df6ddf10adbe630d9df620ec13af19039c1869653e60dafa739d2","649324d5abb5464aabe35d86cd0eef16562df811f0971481cee664afa5acbc88","c914014ab7c7001178663f29d31a495398234a41219af61f26d7e8e91b46af96","b135893253d5e507232d1d0b8639dbc00c2bac453fc0420a9af738f1792f8b29","267eb41d7d34151d8b5fdf8b73ddefe0684d7921f4b7db14101f600ea3e8ed02","eb848e4da1fa7568c893e0a0e1f221572c56768dedfe21d2f7741d383c381552","bd6b7d9ff1992fbde49e974f6bf4e8c35922042fc0b6f5326e61fa17a912ffe6","ac443b1f93babbfadff3aef4490044012ff461ba1cf1c7d90ac45f5a26863358","42e4cdd55aa23586b9aff929e2c216150276a37d30c2cf7c0f32ba917722b5e0","4a1ed19ead46b1dd5a319d533fb92162b4ef052ab1c690889cb2eaee293441a1","d0d5b967e5c36354b2f13b4bfb78aae4c1685efa9df3fd946d2e576d370e9302","8076164b388640f7856b25e945a2ded7738e0f8674ac50c256734067b0f0b1b9","36819a1e04a8dbed754a5b3ba2fd5aca2eafb95977eaad6356d77df596c732f4","5fe9c19f085365b73956e27becc5167ad25c5fb024bed4728884966a0faab3f3","d67961ebada9a5e5c393d9c46a4155877a9f7a48b02a0afc6bbe4e87061e46f5","d5e88cd4816669da170c646844042bc83f4523275f85060cf3e2b5b3bf902ee0","137ee20e77a23986e9a1fdf6397b555e6d3073bdcca15927c40671d1ac564aac","a28b00d18def7993bc502f19be6abdb89db2548fe946a51f0771b8ed26a6786c","0fc6ddce4aabc8d84a6aa6644e1012a1474ba844ed6bddc7bea7115583e8a72e","f02da9dd36d7a9aa33c9b2e37ef1f54b0d9ad6a713bae372ae4b72890e40c168","3a5652c44d7b3ee47b1d294b1893b30253d8fb6a1ecaafaf5fdef5fdc118f54c","4fba134e9015779329678ff1fd1afc32bbbf391b1f419f7622a3ecde7bbfc355","af75984f58aa9205be02b0a2248d05f6105a8d4bf8be0baca294b5ceaa10e33e","45a910666b455daf042c0a0cfa610c20ea59a0aaf702f93d3b467a05f9a27e20","5580ff53b5f6f1ecdb68ecb61327e63112f97660912c15444c1f8a08f69c19dc","84fb7c52fc116ddcbd1b34535e387053f2a0134d11c5e39b193f4c1328fb1fb5","fd3cd8bf3c90ef4694195a617a5daaac561d8be52ba33c607f170c11f3c50154","6852fc2f309e330e38694bad95bde670c384d1498bf4fbe3a751761b43279934","9f963b28320dd50221cd23f23059bc23cc7799c7025b44942da68974f90c2e6c","c17329bcf495af58e3010f8e61af51709aaa24a6664d8557a7d01a82b5397c59","4eebb617b12f21864e6641d0a9eefaca77a9ccf93f00bb7d50b26d8073866e53","ca0b43e2565d78809383e9a025b0638a5e65bcde4a2b68ff2c6fa5013642db46","1d0a0e5c6471d81467c3fecfa4db4e93ee87d364b776feb83b18d773ad9496d5","ef6eddcbf08e7ae71cd9ba8da47e9a3cfc7db36650af48f1b440a5ed50eeee7a","e14ee3cb4b764895f2ff2fed229df10b59df8a761c79d8e91d868793322b8896","7e36003872035a49bc3a5f21351c37d0e418f60d994ecc470a9463b33b4a7c12","b862345e219e6a4d829f7b7cf6d2d6e91e6fa00c29a7c6c86a3f68c77c25de39","2b88f02598c9de626b35fbe3ffb1ef33ad9fd175e36e06ba27dc79e444796f6c","b728dc56eb9b0d27b4044e076c155f3cd3a121a4a9939afe829cfc0d680d423b","324b7298f76ce938cd28d2698a0767ca3c740bc843fd9104e171be8eca839555","76aa33edb0042dd572d64e4bda231374390d250d29eeab7e7f27010e8f826006","03b6d387edf18a9ee8126e705edff759f65d9c602e11b649e13a5261fe6951a4",{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"11a9e4a50d84759e8353ed73da32a6462c7ca5c12a31a6cbd39414b456419a7f",{"version":"921e3b40f5efcb74707bc7e14b9b3c8ed2bf9f2ad1e1c7e2ec5fd4252b24223b","signature":"b302ad9fcd5894938a13ff57f54246e32dfe079b6205741a77cc83b657b483fd"},"d383fec7cf5d98b5f42c3b20303193adb63d57fb6b3047803e3c0ed2f93cb6da","25bb1235ddb57c1f90ae8a0775e88ec9a557f135fe3e1e8fbd97436021eec3cb","0cb506f83bac065b0519dda23e704376b9d36b523c7026dbf8c8593831a69596","57873da4a929b7f631ab0e3709c1f5e3e91f72d002e3b131e3488179e7165ca3","aaf730d205461e271486b1dc3e6a50ffdf345949c179869e18c778a47eb4ec53","9440121d485b9176ecbf7af75173798bb9669f5e913a0d85b348e7e59c677f04","6265be88c1e74be57e1db86f14e1924f69438acbb996885a10b90ee08b724d2d","fc02e85ead310c586baa21de2f19293a5a475e99e7bec85d36348fa4792175d9","a16dc585916a89ebbe1ea6e115d4ca85f331d5fb63d4f8f078e44bf8b5e0fd79","2cca080e27d9f7835f57cc364478f2bd44036172c22be9d0fa7dccb84d07b23b","7a75cc1aad1172a287800ce135e9ddd317a77197a95df064518d0ed358950737","781916917f8032ff7fe4330f09162c72cb14d838d88e17fe24b4f5e36d529077","11d8e627dd9dffc01b6c210b6e5f178232fe2fe8a49337242455fbc068267f4d","0eed71753fbc0d6f966f05e9edf9dae6d80540bc6b0443c792a2b2775488937c","14b103a16d584ac44b2aa911ed169f22bca55c944bd58789113fbde329c13ce1","a46e6b67ca3d97e673bd30c82093475429b4ef86aa8a7af039f2d7231e14a489","2b6fea7cf699493170b2b5d33c660231c55d2cdc323283b3f915fe2c5c3329bd","c3649d3c4bd72ddcbccd64bb13033d60dd228231536c5c7d2c88ab5fca0f16b7","60ce0c7fbde8d88b23f47af9e16c5eb8e18b1a4b28094898c7a2f4ba83817e2f","d0fd5b70c0878a32e45b9fce926577fbc302f1ac9154d417790b6fb77ecc421f","2e636dd8fcfb1b9817f0fcf6fec5619ca4cdc480cb0a958e16cd721e9cd40de7","4a0755150e118b65557a608c589060a367a540cda9edd615149c8c0018398b9c","6b00fd5ac469045246f2ea62a6c2e46c76609f99d5d3237069d9311135afc68a","26247a03890113609927c6f79bf66fda3745c9f898c5903a3399d8b341122090","61f9395be1c73587d5f965ef2779c3afc97a51391498a325948871f489eed8e0","33709773c8a3086ec6c4536d90eaed4419021caccecc352f1e63c7f9a90474fe","c6b57b1c400658bef1f18e0db9ddd8d8d0baaf8f6c3749b9be89345d3442ae05","435266748bcde290f2e7e696bc9bbf0759d47ac5d9d45b7cb10da0d6e2b23d48","3c035e96aa86a9ae278d0bef950ddcbd94e565c77e40d98ab55dd64e4b9a5fb8","6b18b2ecb7022d4061d1b8bf82798e1a72c6f170928a0be8c8478b3f0a5c77ae","d39ba459dff1d215966eabdcb92c1029821f9d6953cd9a55f8644803fa6f4a96","4d264e93c40c2467896ebdde6bd614a281c551206fec0bff382fdecf28a08cae","55f0d458b3e04a6ed2ccce4182fd728be3e8c1999e4ba3bce6e741138acd0d00","fea1f1d9e51bf0c842d5bda244f7949d5d47aac4c918936a091ba1b8e93b20b8","6d1c198b7d5950657eb9af8e73c9bd0c9a241f1512f74bd6ee16b7c459af288c",{"version":"64e9443954973fdcaea088700b175d00a95795231d59ae124574fa0bf2fc954d","signature":"f1fa2ed6816f005af304f2548b989e1c433c7130b501dcdf86522a164d8cbf6c"},{"version":"258c1e2dfc093a01fcc1d4f85144930876223e20c2620fd5cba53c89fcc732cc","signature":"6589f58d176db29e897cd726963fbf7c38aa0715390ebb9aa91c7932f7c8330e"},{"version":"b5b7fb523891a2aaeb4d28180a4db94db8f2da749d1a4de6bce361c7fcaa240d","signature":"d4105c06f44995f906fbb5dd3ed8f754689c22b9aad99a94d14aeb88ad662dd0"},"792fcbcd71026f984566b5dcd0d73a1d5fdfcb6c8569ef8d84c7b1ff9d229fcc","0cfc689eed1fc4dd7fcd4ddbd80dfe8790cb0585e1249fc019019e19cd71e5a0","094ac2c069d9894b62edd1f2a9dc63e5351e8adb931648f27e47aa7c5d6e983c","ceb9b43165dbab7513e34f787d3f94ffe9f13e440b070417ea50c63eb2c68041","0b9d54448ef230d8cc7763ea0f9ac4fb077fba96391da3332baa882c838cc152","ed9e4c71174d78d20c41d057db0a32d8dc7a6979c04db7852c94967fcee55ec3","a3e06106ef76a6e015536f1ffbc595aa8a871ebf552a500cac1b558e48872ff6","5de6c9c98ef5f5f47005412a13f1ea24fc778e2239ccca69c772485d5ce396c2","822eb5622c3b940f8650c9179da6c426ae2cf309d846f623b0f2d094b228f03e","2a792f34f40e0b8e007a142825e8a486263f8853420572fa4dc6800f4f1eb781","afa2920fdcdfe1691a353ca6ca81b0cd2ca4539eae8cc7c0b9651b1abcdbc74b","1c067bb41f2c82b0ce255c8a4eaf4bafcbffe5d702ae52dec50eeaef930ad16e","dc05b7cfbd7166a76bb33c9a494752fc2876684100208694ee334e92d124ff13","f4cae09b720d87d4e359a6ae91511d231176636572642fd058c4f973478df5ef","492d09043bf7d0ffd0a77db8af9c0a6838affaf7306dbb00680716f1ff51184c","5d4c9d0014f2b221fe243627044e2c2290e33fb97befc0ad72ca2c07e9cf3bcc","bd63922a65e000d121bcd5c0ab479dd6b5c9c2f708bf192c256b58f1a3d8f664","2cab018bf28f0c70c1f7e423ccbe2bece766b0f823fc8be1ef2c6f68fa45932d","1989f78d7bb2f6247fb669aa280f2c3c6bfc97cc8be30a2ca9640f89b3f57a32","f669773f31bfa4e50c75daea1bad438206801e212e1374b5719137bc59c0ba9b","a4b778b3cbd76281a30cf622f5617e25c186f7f9684f2567a3a8f6be78b8c925",{"version":"4337b3d1670e9d1ee8adbf8c62ff178b37be3b35ae0a21d92ec743100354ac97","signature":"a6982d286062434f9336ed5702f2cdeea9321fafdfffe7dc439ff48b9439586b"},"5eb425ff207a91ef139e23ebfa8002a7ef569bded2749a39c79494eac229da6b","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","7e88d433f6eb15b0edb164a4ec1dc963a7b2e2f2f018768e47cb2633ea6de399",{"version":"d0daa787fd594f1ae998c46d042da85120ca82f5d1e8dd55170714dc4d15c8d0","signature":"2716ef33d8a329fdf9032414061a83fe12b42db9d3ac43fd805d382bbe2ae7ea"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"16e136218aa988a68daffea6a12c918b164fa56167aaef5bc27f307020e25488",{"version":"a26de25b1305e49c7e39c0eb0ded935bce93ca0a77784a39895e7c53006578f5","signature":"ee2cdd2a6b3e6c50f61ef6ffb475904d3f799b852152c08df8f9e59ecf251529"},{"version":"3fd2ffb0993da32e80afa7077d2b47346b46f44ee8e84fd782ed1828ca1af0d4","signature":"04d9467a5682da7d3c0826f83734f4499c1d5bce90cee22db487b7849839c2e0"},"ff82e9589fe896c71e97d148aeea20743d5c7f7d989b82e9ad1db71d333402ac",{"version":"17a89ca1c518b198c649c2be10d1f30918151f965b9380fd272eef126b82b066","signature":"7eba9b2a03018a752107e3a17c37bbc6011fb749c9e7b1203b5a541f637a1223"},{"version":"a3b3990eb76d0b51970d352770a3fd8e3576afbf51f1b39a0ee982633154b6d9","signature":"562f180232a15d9a16607b34e0df0005a736466f79f47df0a39aafab48f5facf"},{"version":"10254dc145dff954004fb4ca918a8791a55bbe282b69aa5b956af8cabf71f98e","signature":"b1469774278f2d1c067ca66fe7300c3a193a0a10a8d424621b1709b57770cda9"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"a6b74f096f8fe3da9bc070a04b8aefb22fb00a062e4de0ce9e7c9d6a3d423847",{"version":"0daca2a8aeca320a808295dea4511d96d7897867aa5ed5102c159f1ddb6b2346","signature":"ede3426aea05dddd4ae999664aaee0adad171fa0aeefa7199c3c38e5c8d9b47e"},{"version":"2039a1a0c04684a07d56b2b91222e231c9f6510bd0166e1713952ff29cc3b1d5","signature":"809181d2448bc63b4f87481f9e2ee209d0cfcbfaafd83a3a231ee0c55158f573"},"2b33cba77ae776e27801fa1eda2df73442345863db8e709125a5f9f30ed2096d",{"version":"b473bc52523efc8bb217488bc3b10ed34c951832c1fbeb11150ec2f08d706d8f","signature":"2bc824d6fb7f286d4acfea44fb5f5331bdb07eb38b73e70dfbb9f3f9c4c0477b"},"c01f0929ecb56b3c0971a727955e0ed83bf828744fb0f04917052ceaf576ca56",{"version":"17271ee5eada8a5036b280acc3c36ded0b6a487dcdbe3f775cfe9b2e7543186a","signature":"6f3c43324c241b6b1e29b9193784e835b76e3a12b38a77fe62ac9df662c7c06d"},{"version":"e2ddc31130f02b0488ab09d551a14c267f20183930d73eee2f0e6729e86588ce","signature":"07733fc9787712e7f3a2f9f7c8e6773036f8023de944b96e141971d6a7556344"},"1df722eed9b4cc011f26556f3574fe6aa5369a263ebd91f81424523277ad136a",{"version":"b4141d311e83f3af9320f8e307b3fb287b299d647e09a9b3262fbc7d34a95aa9","signature":"01e074392769bab3ea7ef965866c15fc9f74e123fea4e6ca0821701f53aa1665"},{"version":"2cddd2bbe3a08e65eb2216e6d39448e9b2fdc6d2983b412671b8faebc7f9d9a2","signature":"1bb1ee99c2c2fbe2012f522dbfac98ec7d316f977200c7b179deb665bf8b6f97"},"64deed797f3fc918d99f992e70c2815b7dee4d40774aa3331be9f2ab94ee408e","115d60d2b07ac7d513543b5e86e13bbf9a9524faf8bdf4985bd7a08815b46406","4a1545bdbccec0209a67da02f760fad629deedbe7d8ac9f55c93c82f95ff5449","7b52c21bd6397ca26df3b7863fa2d5014aa4bbf5621377769726bbd59956e6bc","8fb686bcb1593c907a4a6284625137308915871b7a3f672c6096769704fd6593","80283bd376b4d5b8970d1f0b8c549e3b9e24aa26d8f785bec3e29e22c525f1a4","6efd085323d69407ea14900a7afcb0876669a668c8e5c357782eb09d30f5e90a",{"version":"fa805a65de69ff27fa624ecd4fbe7837596daf445ca1d38e0b558287ce70b77d","signature":"e846678f5b81a7cc528b39182a724475a2a7221ca47e2603a864b4ffd216bc95"},{"version":"d620cfa7e1f1d301861eb9be5c1f19d469cd948c4d24dc4de1478cc229856d76","signature":"b3a071cd1770061dc3ca72d67795f193795e7115faa400c041e51bc3afe831da"},"79501e0b0bad092052f42908a84bfa160bf7ca70ab703dc640ca726ff009eeef",{"version":"7f5f9b71b6407c095157c28f5331edb7689da2ae34d39b3d92cb2ee0fcc7cdc7","signature":"020abe8c521dcfaa819e58247ad2209de1aa823ae95bfdbb48a0a0f3e689bb22"},"e68ad0de94899b5e74e88a30299edfa9234582a8fe933a79fc68b66b9ff7f623","1515f45c7ac8876453f491c81b2899110c564714b595d87d2e270feaf5cd0171","8e1316e23a19ba001770976c029b910bd5ce755f8954b0afd5d3516932e68d7f","ddf843152599670242bb8d17acf9cdf716413326d5465a38c416a8534442e099","5bff2f68cc885cea49c6b0db0d4af5daea83520703b0fbd745c301267cd9f417","11cebccdb3bdf7cbb49c85dfd2251391bfcad51e164a10b4b3edba32e54baeca","dad09a8e5c6e7e9e82eeb47b69de3263f5f4bf60c5998a1f8fa4be5ba4124d31","9a06800a6d0a0e4add44687a793e059ca1e4162a490b68d27dcfabea14573205","1f276a748c534af1620acc29e2ce5028060d4323bbf1ed1f08a80977aff3abac","c627d39a45467ef12ce95d2bdbdf8cc89f6de1e9f112c32b7b3ee00f963e1c19","44732cf340786b9df93feae047ced84700ed8b7117bbbc9f0c22c0dd8f14b8c7","2bb640dfad345694432d89e0f0d5b8ce3a653a97e0acfc935503d234a8a9cc65","c5adbe37402e1a7ec838a9be8e64276b7e250c3e9f4aa0ec48ddaadc92bf0596","cf7edd726db5788180327b7729c882dcc68d4b4d290710d1e51c31c3cfe44054","31ba8333d2e02f398e80681621d7607a1a1e8be02b5ffddd4ae0383a840d364d","fd97d8bc27c67c6291ab8b31d3b2c1c1efee5344b714d559bc08ed2e0dafba8c","cea244f9d063ac1552796ab9aa0729feb3df72caac0c4161e54e3e4aba7cd787","51de0c244c81479b622382289a79dfaabd2e59568699e3c5cd39e3704d4c7f36","028ce62ae50640239934f3e8a6b908bdf752c98e2dfd45c9715ecc04e9624017","79bb921ab32518a8b33dedf9a32b44459c5fe6c73655aa5fee0f1a64b21c37a6","1cae7dbb4d8e6f79a176221e61a4b3c0da201bef3e4d4a946a2e314ba5d55f3e","ab647cbe5e37cd718c0dad137cd9a5309f6c93775fdb474bca89c4ec242d622f","379b17cdbb2592b58c22b2da981c74b0e685c558b8b84b8f0e9bbb2e4cd79bb6","be579bb21cc93a8e5e57223841b4f407e5ffbc24ad816810be8f32fc2d430b4b","ab0e2104da6c1842c26dd8d8cebceee3f730323d561bb2ae6a8acee5f9338a25","841835a0e44a2ead0d497907b4e8a6e5b1e9b3a3a05efdd6e86e56f057e5e282",{"version":"3ab4e01fe77a1aa8cbaf831780e15424e3c17fe12bd8a02422744c62fca6bfa6","signature":"276d54f65e68cb5812fb43cbc5d7e58b0fc11d780b93d1c503c678a8b4e536e9"},{"version":"0b97e7e36c291178dc06f2680633b842e7ebd94d3723928ba72a4822d4af15b5","signature":"4093a1f812944b0cce187a52a141fd9652686d6b93651c6126750bc8cd27967f"},{"version":"981e436a6825ba44084ae4fd76af10825884ab6709cd0da040e8aa4d4c519359","signature":"070cb0507bbaba6abaca450e865fa20255bbd6ec5dc4d748a9c5112346dd700b"},"df7e3f1646e8a98bde88aa3e137d094054bec69256479d9745c02e6fc1084836","a7d39371cabe952bc7ad53bacd2297506adddba10c7cbce6e554dfd20020c51d",{"version":"417d0d87aa75f084a78d1bb861f5e23afacd0d5f72228e3a72b5436006de0905","signature":"d7132a1de415d7f34de3fee0eef4a8a38af8c25978a4a91d3b993eb1e11fece3"},{"version":"ded085b095704b00b25da0edb727291e39d187976629f6cf0d4011fc614d5e9c","signature":"ccf47c6184a9a2da25679985bd77a23109b5d36b4a600177fdcac40973b0deb7"},{"version":"5303a607bed2f1d58f158a29caeb11d5c6fa3a0c0052d1c219f11ff505a551f7","signature":"ed12cc19cfdc157d9823b30917e8ab40c2d3845feaae75dcb58db5abb6360b30"},{"version":"7eb1c154770627c946bbaf3e5bc3c7e78660b4ea6b272de31b205af8b3d0e286","signature":"f8eb1943c94b97fad14ace58c066852f1c568d75891c06e0cc160ccfd4310743"},{"version":"36176321c10b297e367ee9429bed1f26fd6834f42508e9ee20a0d41c993b73b1","signature":"14bdafc806ceb560ee0cc415fbdd4bf5001ee7ec14ac45a2f51c020ab092c181"},{"version":"f1bfe59b41bcb38dcad14ec251f8e83e2f2e8acea249ed0f50cda27011ad3bf0","signature":"31cd6de98f9744eecf24fe3450ac5efd6abfbae3a4a4458229a3fee5ab4bfc99"},"4380c06c8d36e963c74636ccc3f5f18dca333f52224e8bd8d57175670b021211","f2e3e7319a2cca8c002ca131a213c0b69a3f776cb666fb44174baf60806e93c0","2013c436fe32c9ceb496b28cc05ffed6bc3ad9ad0467ee180f11af3236d069f2",{"version":"bd0233076bc52c03ba133d0554bf5c8259608cee9117bf250d1cfae54c0576d5","signature":"a21fac6329181028cdccee4307ddfce411e09ed9f09a40cd266a19d0588c2af5"},{"version":"fb8ec73bf4a8a35f8b5a241f380fe4f2c6f9f768d749650fb1834a93e98e54a4","signature":"b463505e5cc98d7af00dbcff8446ac16f67d25e43729975881b1f369e75049ee"},"a43dbe2b477825edb425f74b9bda3e84467bc2ec9b9d8e67be7e3a528282d801",{"version":"95052d1812d457a9eb243316f3bbd038dcb09766e7db29c647b8c21f9ed91fe3","signature":"7fe90ee6ce17430ebbe5e29f3c0a295c5e6e4b07c75effa75b1a37c6781b8503"},{"version":"8fc7afb94ab8ece139f0aae4c744e57c97ae35341400a0436fad87dbc84bb158","signature":"7197d9ea3eca8f7998feb28eb31db6ecbb9c131113ca678ec2ab7d58a1aa41a1"},{"version":"10240c3309e883a3605be015f015a3af354193ee7b74a6c679dcd899439fe588","signature":"c8b1d78ea8d1f16129f73fc8b182255921caed8ef417c15946d06b37ab93a65d"},{"version":"23b8208012453e385ebe5ba14848132195721405819848ef7859d0c02abc5179","signature":"cf35b116d2a4b2ab94e54c5d8dd6f14335f2c10795385fc1b63837be2d181259"},{"version":"dbf23a8cd66ef6c799f8ecc67304365b19890192e262264c73822615bd53ebae","signature":"754d59daddea466bafa1f0d8448ea5865f7153f17adc3d939b61709e659179b3"},{"version":"51bf928ce6ac57522f646223d50b4a252e4ab7204da4a3b88218ab2ad9aded9c","signature":"bd016744ae6ca47c077f30661af368da319085c4537214fd1063c45c22b75d77"},"c58bbafb5a6a57a721652f911e722fdc0ffe85e82172cb78f7377e5a6885b2ae",{"version":"d4cf903881b26b35de1ff59c8066fc88a925dfb6bc8186a1000694717df3c63c","signature":"f80284421d8f20ef54f71eb946cc836f5fb7fe03c31bdfc53bbdedc886514784"},{"version":"3337e7ce77ad8a700dd924686e950115f985b561ddd799bab6f6e4b88b2c134d","signature":"ad46c0bbefc50c2bc4e637be25f9d0d832bc0c446fc526aeabdd7f316f4fb3a5"},{"version":"5ce6de8b3b5c316b70b9ee85043af57c1d5f8ec8955661547f25886a0804e09d","signature":"1aaf7884ca26988b1b76a00989e16b8ec931392e77305197cb6e8d7432ed364d"},{"version":"7fca8a8ef963a92be0873b682cae879e06fc341f2902e9dcc4542d5c2a2602fd","signature":"025bbe9acf558c9142ee4566528ff0b4696179ff21e7e37f7851fa97849382cd"},{"version":"af96ededd6c47df3d31ad765d8c00da74dfc703d1cb51229148dc39c5a117ff6","signature":"403af83b2e3bcb313a11dca8c5b8d1aee04c4aa2dffcc9e62cd3831c2fc93e1c"},{"version":"04e4fbba4c5d9085d910a54dc3a2b252621cf1b4709b3efaf5c03d20b5fe32e6","signature":"1538772ce1a0e004ca84ab1029754ca980971970d9a201c7c3474c6b476dcb61"},{"version":"ebacb6cb16f110f8a68a374090710d9182fc5ae4e8ea49b545b2ed1afa1fa51e","signature":"2ba4f98677a6c927e673141e9018e14ca02dfbe341f4cc6dc23c5a85d3ff3077"},{"version":"93e508ef11bdf23e2009534974126083409e2a8d675966cdbc816ec4e0d4882d","signature":"37f129dedba5091e251bebefaad3a564b60b4e807aee9f780e74c54378ac1f5d"},{"version":"8b3d0e9c313a098b31b5a7f0e6d788719d874148f24b9755f579a555b747e858","signature":"fd5e0d28ead649e38c8bacd1ec851388847cf54ad37d9f36d81115a020591647"},{"version":"00cc7f55226e592b9f1175a6d6507cb7c74ea2ba3c494637d1fbdb8100ce679f","signature":"8a71f963e02f0fec5e88d9569642d873961d2b40e84844baf04f5d77a4cdfdac"},"3a61ac3a6089237bb566f2f70ab0dfbd5ec203a21e09de8382a717f5ba8ddabb",{"version":"3659bed7572788ca0aa2118c5a742270d287e852b2029ddf50a784e9a1160997","signature":"bb9f357f778f67ad2d7988be76628deca1fce7581a057b599593912ed2a054cf"},"5ef81a02248813523201ee4ba5c711e72fb39e1c13d4122db86caa49928ceccd",{"version":"d0d20e20704ce639a55956ef9e976a98aee67ac2ffa75b3f5ddc03632c33e5cf","signature":"527401f43636e7e863401c1210620a880a335ab656aaaf201981a979bd7793c2"},{"version":"757a9d6ccd6063bbc83e4a68d69680d1e79a8402c53d0ff8cef53e9a09bf45b4","signature":"38594fe8776daa1c6d8eda3148982fca4724fb9107b569ecc1e27d993fb4e324"},{"version":"adce73e9d7f301b90eab1042ae94396d8bfff13583e362be5f47fbb25c23da74","signature":"f11a45368202ae00bf5adb4ab825e8cd81939d4eff8f61b66977745fee72f4ba"},{"version":"8a35075286a790d3f59811d326e8d7b0ac97e9f5d93c0924de5223cf060027dd","signature":"eb0390e5fb29c8e26dd2ef43a376d769458a80ccd0a95f5cd4512b3d8ebceba3"},{"version":"cd7a2786f6fff77cd9d32c503e9dfd2c165bf61d8a2af7e6a1a0c3ac77cc9b34","signature":"bc13c51b9d0f6cb522454e10c2a1e581de4619c99125fd6913c69fef6eabaec1"},{"version":"5e390dba840055d1026484d576e1dd861dc8dbf84e58e76bd450c9f9f32a0386","signature":"f6f545bc47f233b38dd8a9add4ade169de5747493dd414f9e90119ceead61c3f"},"69b39591493ddec7c2ecf73eb53a0cda0c2c0aeb876700e0cfc82152e8f5f452",{"version":"750a74ca523cc6877f2cb6786e6c3f81eea597565afcae46699728799c1caaac","signature":"a963e4aa2f16d2f0f5f5ec046ed8ead51b101f179815e5fdbf909c9ca2d244f9"},"267484504819c7c8d262deb5e6147fdd31d0c96525614e6db018637dc1e94c81",{"version":"68cfc2c2a97463ca1db3db7866750b394748cb3fcb1fe444520ca6bfa2499935","signature":"5fd8010422dbf50a31c03a94964b9e2372a5840f722eee8c2bca9c5d02e831d7"},"098f8977e76712a3409ddd033faae089e8b95d083d8caf72493d23e2624b5fc2",{"version":"0cc58e70d7d4e6fafd8dc7cda1eb19829373bf75a9726b29502928b4749ae912","signature":"bb3b12aded5ce077e289e622cdd81b52131c0b426723e591222c962c2dfb0db2"},{"version":"883ae28ec16e215c919276bdc32cf8c4dec1808d10c98a5f7cbee38636702037","signature":"7b060084197328fe461a1ffebcb2c1bfa1fd4ba096fb34facfaffd4534c9c5c2"},{"version":"c470a163e48a455684ea6131d82186c5a744fae7158ff6779fbeda5993a46299","signature":"1bd40e847573c320e4c35dfb448d79068d3a1372207a0ef3838bbef7f016042e"},{"version":"8dc25d14f06405151c33a5515cfce45f711e5c61b29f4338444175ec86e47004","signature":"dbfde02c25be5df7647725402d7d0e6a6d46e68f35612878924a99bc9449191c"},{"version":"0ed2fdb0a450642fcbb8dd94196bd350793d5b90d391dbece286b646c73e6fee","signature":"b70a7f005802475bf13418d2de036b245c5f78a77fc0c060e921be38151c9549"},"6a3816094633a8e76b1f3d7d3834b6ed2dc9dd08c8e996a74c118284468c6e7b","b6111a0f4732899834438a678d2b6b553c81bc5a5049ae367a5175fde7cd4968",{"version":"97fc004a31c0a213de61c05b350f347e25efca1eabc8ba1eebdb2d9b85689dd1","signature":"5a49466668114ceca972d8d030478a0f37fdd04a55eb62db8c0b4655eba49484"},{"version":"8ce79132232bed71adbf60e1c16aabcb9a63153744eeefedf98b22898863d7fc","signature":"f1cf633241130ff468dcf6a7864577e7be8696b5b5e33083cc7507c03b6f6a19"},{"version":"f28384ee019f2116926f5740e92bd227443dc14d3da7daf89e0059ac5913866f","signature":"38ed86c8361af004a7b4a1bd5a2b3d237dcf5356b0b6425950f9c2b18d509d47"},"cc4d7e933dce2ad66baaf535e204405bb18404c7167e99b7ba9d584eb89e1565",{"version":"ab515d691ab8d0ef3d07f4f24b5058c0d244676a867e91d0cafdaed5a35d48f3","signature":"1e4b2cee1af0e665ee5a6f05528eae7b0ea72a120f10db43f5b4af09dd0d4a86"},"8a8bd8acb1a915a93db3be0b186fede51eaa2f2db40dac79a47313b4df55cddd",{"version":"b9a8f549ad99338a16b74b60ea58c9ed705980900b10dee916ecc730822af3ac","signature":"9914c79c33b663a7aea996703b671582274e86c2409b67753fb4040091bf70e6"},{"version":"28a3e130cc166d92e9dd9fa9fc510d9d2be0faf4869b2deb8a863421d9973a68","signature":"02d34933aef882ab1da4f55af5333826ed28a8e6abcd4182d81dc50e9173a14d"},{"version":"b1e5f6b6e236cd191974d878da9630dcc71edf1833f0eb62e0209b13b8ab2652","signature":"b36bf9277cc3b763b3bdf0f953efa7afe06ace18b1da9210806201ad7a6f6acc"},"b1a9839925ae9b488f587a8ec6f23e034b6ac4bed5da3da005f3414fa4a18cce",{"version":"43534ac51f6ed166a457b3247fe64c65c094f95fa7e748210f2255fb2fbaacab","signature":"0935c408dcfc90a8f9dc1d11d8270fc6cf80c8586d96860da12155da405ec9af"},{"version":"44f8b6f028241b18ff67fd37daa909ff481f38ba69739cb10b104c1c2852412c","signature":"08217183097d95ae53cd5f084594bb398d742a6244ccbd4934b99a8270974958"},{"version":"ed62d52b57a171101cac06d5ed32b8a55da2ed151a4f4d98da476610c34ed4f0","signature":"ee02d6673dd0fc003aec2d0a13c88bb053f1fa40e7a136b905ad546942f98d5b"},{"version":"5ead41e310e86e4959e71b330561e9690879beaa0ad6d14883c8e919c7d0a8f3","signature":"a5816719f0c3135d6af24e93e146084e1f4d18d2913ebb95a3ee944046d1d530"},{"version":"109d6db3490a01d553cda512b539d336fcce603a5e63e07048c9506f4f4d3e74","signature":"f6766cc7cfb98c7bb86ddc5fb6502c97aaca7f8571fe9874fc15fa4deaaebcb1"},{"version":"dacf59b95ad547fc4ec1ea4d524ed7ed22aaead71ddfa951177061171110b0c3","signature":"b9753f64aecf3de34d3e6d0d4c59ebecd6cea0838ab30fbafc968d2d139626b4"},{"version":"a86e8faf4064dbfaae34658ca224f0b22de09b58ba47d38a4d6a724321d52f70","signature":"36c556a3c9eb165b9bc100cfa5fcd99e0544a264624563015ef6e88586b397ed"},{"version":"c8cb2807700da64268a4b96d519001c4e322026c5a55a4591dafbae9c98d5135","signature":"501a29a21faf61b3355e5cd70300b5a28b5b12de60f1caa05e56cb2d42607dff"},{"version":"2cda690d3958072de8ded71cd744352b064e7a4a44cb88b300eaa64125aa00db","signature":"6d4ebb64d5f29c6322d1da333bb31951b6851a760861635acba5b3c696656f57"},{"version":"cd5655ca46cb6a930aa0d146c77f9cf087af9aa56101d9d0c9317eb5fe6eefc0","signature":"9d425b3e757d008df530d5b91d77232f6d37e513a31f9ab2f9ba71b3b27c2a37"},{"version":"d829c12ae4cd7023fa5c5e4ee784c35527f6519ea39cdf8c2af8d9a41ddcf1e9","signature":"d333469f1cde151f6f317b191e3fc0e2305c72a95dfb5527ab1d9ec53959b76d"},{"version":"32b6b48b99f21a07986a13a6fc5216fcdc8920663b27e03581f7b60ab36ffff7","signature":"770c2d42ac7f8e2941433ccb98c63e02eb6543cf3755942fed1ea3f7aea856e4"},{"version":"2279853314845a3fff42d5c463572f0cd3bbfcca371862e1082ea605b896a6de","signature":"73ed373f7c01dc5ce2098eaa9b59030caccf23f15538ba5dc1e70b0c9f43f977"},{"version":"04606ad72a5599c9f9d7fba009c296d7a56b60fb7c627a05a95a2c9d47c39ead","signature":"96b65daf6681578aa161cd622806f16430dab19c5681c12db2690836b6e99163"},{"version":"77c51095c22d16c904a8ebfa6eeff45e9ae7f8a84415cb38df99081e41db38b9","signature":"a562ae7b032f6b01526b5539666852b330c86e20918c57e426d7a95031ca7a30"},{"version":"69b5e2602c836bcd73f59b3529abc4931f1fa9cd1806f59e0bcb9903c8972dd1","signature":"0e07f96fade13c5f4f5f73423d0b0d36d2072570d8a33ea450006897d3671df2"},{"version":"b35e638b02dd107949595a6656e3f5c0b871edeb3d6f061332c610c602176105","signature":"736f562b178793c3aaf93cf534e989d14a548e0190060f4e12d86b8d0c4e0d4c"},"2e2e78ab8f2e0686b89c885f0748e0971bb737a015733bf8291638a43fe7eaf7","6b51a866d15c1e384f7dd519a7d28154e54db953027db71df7e9f4f98ea0a649","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73",{"version":"4564f780fd20582c57ae218a4cd017717181ab0e228639d905ef054288655b5e","affectsGlobalScope":true}],"options":{"declaration":true,"esModuleInterop":true,"inlineSourceMap":true,"module":1,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"noUncheckedIndexedAccess":true,"noUnusedLocals":true,"noUnusedParameters":true,"outDir":"./","strict":true,"target":4},"fileIdsList":[[109,126,127],[109,112],[112],[126,128,130],[109,112,126,127,128,129],[109,112,129,150,151,152],[109,112,129,153],[109],[190],[109,110],[110,111],[184,185,186,187],[109,112,131,151,153,156],[193,194,195,196],[156],[109,156,176],[109,129,156],[109,156,179,180,181],[109,129,156,177],[149],[150,152,154,158,159],[150,152,159],[82,112,129,150,151,153,154],[150,159],[150,153,155],[112,151,153],[150,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170],[150,157],[82,157],[109,129,150,151,152,153,155,156],[150,152,154,157],[150,155,157],[203,204],[199,200],[109,199],[132,133,134],[109,153,156,176,177,178,182],[174,175],[173],[174],[276],[45,82],[423,428],[136,138,139,140,141,142,143,144,145,146,147,148],[136,137,139,140,141,142,143,144,145,146,147,148],[137,138,139,140,141,142,143,144,145,146,147,148],[136,137,138,140,141,142,143,144,145,146,147,148],[136,137,138,139,141,142,143,144,145,146,147,148],[136,137,138,139,140,142,143,144,145,146,147,148],[136,137,138,139,140,141,143,144,145,146,147,148],[136,137,138,139,140,141,142,144,145,146,147,148],[136,137,138,139,140,141,142,143,145,146,147,148],[136,137,138,139,140,141,142,143,144,146,147,148],[136,137,138,139,140,141,142,143,144,145,147,148],[136,137,138,139,140,141,142,143,144,145,146,148],[136,137,138,139,140,141,142,143,144,145,146,147],[80],[79,80],[34,39],[45,46,53,62],[35,45,53],[71],[39,46,54],[62,67],[42,45,53],[43],[42],[45],[45,47,62,70],[45,46,62],[53,62,70],[45,46,48,53,62,67,70],[48,62,67,70],[81],[70],[42,45,62],[55],[33],[69],[60,71,74],[45,63],[62],[65],[39,53],[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],[53],[59],[72],[34,39,45,47,56,62,70,74],[112,156],[312,313,315,316],[112,171],[314],[106,131,249],[87],[106,249,264],[106,249,264,265],[106,249,264,265,266],[106,249,264,265,267],[253,254,255,256,265,266,267,268,269,270,271,272],[106,131],[87,106,131,249],[106,131,249,254,255,264,268,269],[106,265],[85],[89,92],[89,91],[89,91,92],[87,88,89,92,93],[87,88],[93,94,95,96],[88,93],[88,92,93,94],[89,91,92,97,98,99],[90],[90,92],[89],[85,86,88,100,105],[100],[101,102,103,104],[116],[115,116,117,118,119,120,121,122],[116,118],[310],[211,310,311,319,320,321,322,323,324,325,326,327],[311,328,332],[211,310,311,328],[131,211,310,311,328],[319,320,321,322,323,324,325,327,329,331],[131,211,310,311,318,328],[106,273,310,311,318],[211,310,311,318],[330,333,334],[106,131,211,249,273,311,328,329],[211],[310,317],[259,260,261],[106],[106,259],[106,259,260],[257,258,262,263],[106,262],[216,217,218,219,220,221,222],[87,106,215,216,217],[87,106,218],[106,218],[87,106],[106,216,217],[106,218,220],[215,223,241,242,243,244,245,246,247,248],[131],[106,131,219,223,224,243],[87,106,131],[106,131,223,241],[106,131,223,224],[106,131,221,224,243,245],[106,215],[106,220],[224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240],[87,215],[216],[109,112,151,156,171,172,173,176,183,188,208,209],[210],[109,129,131,135,151,152,173,177,178,182,183,189,191,192,197,198,201,202,205,206,207],[303,304],[302],[300,301],[421,424],[421,424,425,426],[423],[420,427],[347],[422],[340,372,418],[30,83],[30,106,108,113],[30,106,108,123,124,125,373],[30,106,148,372,373],[379,380],[106,249,273,340],[106,148,273,340,376],[376,377,378],[106,273,377,379],[108,112,113,148,171],[106,112,171,278,290,295,298,340,342,372,385],[108,112,113,124,277],[30,84,113,114,285,286,290,298,306,307,373,374,375,381,382,385,386,387,388,392,393,398,399,402,404,405,406,407,408,409,410,411,412,413,414,415,416,417],[113,171,372],[112,131,278],[106,108,112,148,171,251,285,389,390,391],[106,113,382,388],[106,108,112,148,171,249,251,252,273,277,278,285,336,371,372,389,392,395,397],[106,171,210,278,295,309,335,340,372,384],[113,211],[106,273,285,372,401],[106,124,171,188,210,278,290,295,298,309,335,340,342,372,384,385,386,403],[106,112,171,278,280,281,372],[30,106,278,282,286,372],[106,112,131,135,148,214,278,285,372],[30,106,148,278,284,285,372],[106,108,124,277,299,306,307],[30,106,108,148,264,278,290],[30,106,306],[106,108,112,148,264,277,278,285,289,371,372],[106,108,112,252,264,336,371],[106,108,148,250,264,306,373],[106,278,306,372],[106,108,148,277,278,299,305],[306,406],[30,106,108,148,249,278,298,372],[30,106,307],[106,112,171,285,292,294,372],[106,108,112,148,249,251,277,278,285,297,371],[87,106,108,148,249,250,252,278,298,307,373],[106,278,307,372],[106,148,277,278,299,305,306,372],[307,406],[83,87,106,108,112,113,123,125,148,171,249,250,252,273,275,277,278,282,286,290,295,298,307,309,336,341,342,343,344,345,346,350,351,353,354,355,356,357,368,372,373,374,418],[106,369],[346],[106,112,148,249,252,273,290,298,336,345,371],[87,106,108,112,125,148,252,273,346,348,349,352,369,371,372],[106,252],[106,108,249,264,336,371],[106,108,125,148,249,252,273,290,298,307,369,372,373,418],[106,112,249,252,278,290,295,346,373],[345,351],[87,106,112,148,249,252,264,273,278,342,345,346,350,356,372,419],[106,112,148,252,264,278,290,345,346,372],[106,112,336,418],[106,108,112,148,249,252,278,295,341,342,345,346,350,419],[352,359,368,369],[106,112,148,249,264,273,336,346,352,355,361,369,372,418],[362,363,365,366,367],[106,148,273,336,352,355,359,362,363,364,369,372,418],[361],[355,359],[336,355],[358,360],[106,112,148,273,336,352,355,358,359,360,363,364,369,372,418],[106,148,273,336,352,355,358,359,360,363,364,369,372,418],[125,336,339,370],[106,250,373],[338],[106,108,112,148,173,249,252,273,285,298,336,337,370,371,372,373,418],[106,112,249,252,264,273,335,370,418],[109,131,171,211,279],[131,211],[171,211,308],[171,211,291],[171,211,293],[171,211,394],[171,211,283],[171,211,383],[171,211,400],[171,211,280],[109,131,171,211,287],[171,211,288],[109,131,171,211,212],[171,211,213],[171,211,396],[171,211,296],[171,211,390],[106,249,250],[87,106,207,249],[87,106,112,148,249,262,273,278,295,298,340,341,372,418],[108,125,250,251,252,274,371],[107],[106,148,249,264,273,335,419],[107,108],[273],[106,148,249,251,264,273,336,370,372],[30,106,113],[30,106,123,373],[30,106,373],[106,273,340],[106,273,340,376],[112,113,171],[106,171,278,290,295,298,340,385],[113],[113,171],[106,112,171,285],[106,112,171,252,277,278,285,336,392],[106,171,278,295,340,372],[106,273,285],[106,171,278,290,295,298,340,385,386],[106,112,171,278],[30,106,278,282,286],[106,278,285],[30,106,278,285],[106,306,307],[30,106,264,278,290],[106,264,277,278,285],[112,252,336],[106,306],[106,278,306],[106,278],[30,106,249,278,298],[106,249,277,278,285],[106,278,298,307],[106,278,307],[106,113,171,249,252,273,286,290,295,298,307,336,345,368,373,374,418],[106,112,252,273,290,298,336,345],[106,112,252,346,352,369],[106,249,264,336],[106,273,290,298,307,369,373,418],[106,112,249,252,278,290,295,346],[345,346],[112,345,346],[106,112,336],[106,112,249,264,273,336,346,352,355,361,369,372,418],[106,336,352,355,359,362,363,369,372,418],[106,112,336,352,355,358,359,360,363,369,372,418],[106,336,352,355,358,359,360,363,369,372,418],[106,373],[106,252,285,298,336,373,418],[106,249],[106,112,249,262,278,295,298,340,418],[106,273,419],[249,264,336,370]],"referencedMap":[[128,1],[127,2],[126,3],[131,4],[130,5],[153,6],[156,7],[189,2],[190,8],[191,9],[192,8],[110,8],[111,10],[112,11],[185,3],[188,12],[172,13],[197,14],[195,8],[196,15],[177,16],[179,17],[182,18],[181,19],[198,8],[150,20],[160,21],[161,22],[155,23],[162,24],[163,25],[164,25],[154,26],[171,27],[166,21],[165,28],[167,29],[157,30],[168,24],[169,22],[159,31],[170,28],[158,32],[205,33],[206,8],[201,34],[200,35],[178,8],[132,8],[135,36],[134,8],[151,2],[207,3],[183,37],[176,38],[174,39],[175,40],[277,41],[107,42],[429,43],[137,44],[138,45],[136,46],[139,47],[140,48],[141,49],[142,50],[143,51],[144,52],[145,53],[146,54],[147,55],[148,56],[31,57],[81,58],[34,59],[35,60],[36,61],[37,62],[38,63],[39,64],[40,65],[42,66],[43,67],[44,68],[45,68],[46,69],[47,70],[48,71],[49,72],[50,73],[82,74],[51,68],[52,75],[53,76],[55,77],[56,78],[57,79],[60,68],[61,80],[62,81],[63,82],[65,68],[66,83],[67,84],[79,85],[69,86],[70,87],[71,88],[73,82],[75,89],[76,82],[312,90],[316,3],[317,91],[314,92],[315,93],[313,90],[254,94],[253,95],[265,96],[269,97],[267,98],[268,99],[273,100],[255,101],[256,102],[270,103],[271,104],[272,97],[86,105],[88,95],[90,106],[92,107],[98,108],[94,109],[93,110],[97,111],[95,112],[96,113],[100,114],[91,115],[89,116],[99,117],[106,118],[101,119],[105,120],[103,95],[119,121],[118,121],[123,122],[117,121],[120,123],[121,123],[122,121],[311,124],[328,125],[333,126],[324,127],[326,128],[320,128],[332,129],[327,128],[322,128],[321,128],[319,130],[323,128],[329,131],[331,132],[325,128],[335,133],[330,134],[334,135],[318,136],[257,95],[262,137],[259,138],[260,139],[261,140],[264,141],[263,142],[223,143],[218,144],[219,145],[220,146],[216,147],[217,138],[222,148],[221,149],[249,150],[242,151],[244,152],[245,153],[246,154],[243,101],[247,155],[248,156],[224,138],[225,157],[226,158],[227,147],[228,95],[241,159],[230,95],[231,147],[232,95],[234,95],[235,138],[236,95],[237,160],[238,95],[239,161],[240,95],[210,162],[211,163],[208,164],[305,165],[303,166],[302,167],[425,168],[427,169],[426,168],[424,170],[428,171],[348,172],[83,42],[423,173],[419,174],[84,175],[114,176],[374,177],[375,178],[381,179],[376,180],[377,181],[379,182],[380,183],[382,184],[386,185],[387,186],[113,3],[418,187],[388,188],[285,189],[392,190],[393,191],[398,192],[278,3],[385,193],[399,194],[402,195],[404,196],[282,197],[405,198],[373,199],[286,200],[406,201],[407,202],[408,203],[290,204],[409,205],[410,206],[411,207],[306,208],[412,209],[413,210],[414,211],[295,212],[298,213],[415,214],[416,215],[307,216],[417,217],[369,218],[344,219],[359,220],[346,221],[353,222],[354,223],[364,224],[355,225],[345,226],[352,227],[357,228],[356,229],[350,230],[351,231],[370,232],[363,233],[368,234],[367,235],[362,236],[360,237],[358,238],[361,239],[365,240],[366,241],[340,242],[337,243],[339,244],[338,245],[336,246],[308,247],[291,247],[293,247],[394,247],[283,247],[383,247],[400,247],[280,247],[279,248],[309,249],[292,250],[294,251],[395,252],[284,253],[384,254],[401,255],[281,256],[288,257],[287,248],[289,258],[213,259],[396,259],[296,259],[390,259],[212,248],[214,260],[397,261],[297,262],[391,263],[251,264],[252,265],[250,138],[342,266],[372,267],[108,268],[341,269],[125,270],[274,271],[371,272]],"exportedModulesMap":[[128,1],[127,2],[126,3],[131,4],[130,5],[153,6],[156,7],[189,2],[190,8],[191,9],[192,8],[110,8],[111,10],[112,11],[185,3],[188,12],[172,13],[197,14],[195,8],[196,15],[177,16],[179,17],[182,18],[181,19],[198,8],[150,20],[160,21],[161,22],[155,23],[162,24],[163,25],[164,25],[154,26],[171,27],[166,21],[165,28],[167,29],[157,30],[168,24],[169,22],[159,31],[170,28],[158,32],[205,33],[206,8],[201,34],[200,35],[178,8],[132,8],[135,36],[134,8],[151,2],[207,3],[183,37],[176,38],[174,39],[175,40],[277,41],[107,42],[429,43],[137,44],[138,45],[136,46],[139,47],[140,48],[141,49],[142,50],[143,51],[144,52],[145,53],[146,54],[147,55],[148,56],[31,57],[81,58],[34,59],[35,60],[36,61],[37,62],[38,63],[39,64],[40,65],[42,66],[43,67],[44,68],[45,68],[46,69],[47,70],[48,71],[49,72],[50,73],[82,74],[51,68],[52,75],[53,76],[55,77],[56,78],[57,79],[60,68],[61,80],[62,81],[63,82],[65,68],[66,83],[67,84],[79,85],[69,86],[70,87],[71,88],[73,82],[75,89],[76,82],[312,90],[316,3],[317,91],[314,92],[315,93],[313,90],[254,94],[253,95],[265,96],[269,97],[267,98],[268,99],[273,100],[255,101],[256,102],[270,103],[271,104],[272,97],[86,105],[88,95],[90,106],[92,107],[98,108],[94,109],[93,110],[97,111],[95,112],[96,113],[100,114],[91,115],[89,116],[99,117],[106,118],[101,119],[105,120],[103,95],[119,121],[118,121],[123,122],[117,121],[120,123],[121,123],[122,121],[311,124],[328,125],[333,126],[324,127],[326,128],[320,128],[332,129],[327,128],[322,128],[321,128],[319,130],[323,128],[329,131],[331,132],[325,128],[335,133],[330,134],[334,135],[318,136],[257,95],[262,137],[259,138],[260,139],[261,140],[264,141],[263,142],[223,143],[218,144],[219,145],[220,146],[216,147],[217,138],[222,148],[221,149],[249,150],[242,151],[244,152],[245,153],[246,154],[243,101],[247,155],[248,156],[224,138],[225,157],[226,158],[227,147],[228,95],[241,159],[230,95],[231,147],[232,95],[234,95],[235,138],[236,95],[237,160],[238,95],[239,161],[240,95],[210,162],[211,163],[208,164],[305,165],[303,166],[302,167],[425,168],[427,169],[426,168],[424,170],[428,171],[348,172],[83,42],[423,173],[419,174],[84,175],[114,273],[374,274],[375,275],[381,179],[376,276],[377,277],[379,182],[380,183],[382,278],[386,279],[387,280],[113,3],[418,187],[388,281],[285,189],[392,282],[393,191],[398,283],[278,3],[385,284],[399,194],[402,285],[404,286],[282,287],[405,288],[373,289],[286,290],[406,291],[407,292],[408,203],[290,293],[409,294],[410,295],[411,296],[306,297],[412,209],[413,298],[414,211],[295,282],[298,299],[415,300],[416,301],[307,296],[417,217],[369,302],[344,219],[359,220],[346,303],[353,304],[354,223],[364,305],[355,306],[345,307],[352,227],[357,308],[356,309],[350,310],[351,308],[370,232],[363,311],[368,234],[367,312],[362,236],[360,237],[358,238],[361,239],[365,313],[366,314],[340,242],[337,315],[339,244],[338,316],[336,246],[308,247],[291,247],[293,247],[394,247],[283,247],[383,247],[400,247],[280,247],[279,248],[309,249],[292,250],[294,251],[395,252],[284,253],[384,254],[401,255],[281,256],[288,257],[287,248],[289,258],[213,259],[396,259],[296,259],[390,259],[212,248],[214,260],[397,261],[297,262],[391,263],[251,138],[252,317],[250,138],[342,318],[372,267],[108,268],[341,319],[274,271],[371,320]],"semanticDiagnosticsPerFile":[128,127,126,131,130,153,156,189,190,191,192,110,111,112,109,184,185,186,188,187,172,193,197,195,194,196,177,179,182,180,181,198,173,150,149,129,160,161,155,162,163,164,154,171,166,165,167,157,168,169,159,170,158,205,203,204,206,201,200,199,178,202,132,133,135,134,151,207,183,152,176,174,175,277,299,107,429,137,138,136,139,140,141,142,143,144,145,146,147,148,80,31,33,81,34,35,36,37,38,39,40,41,42,43,44,45,46,47,32,77,48,49,50,82,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,79,69,70,71,72,73,74,78,75,76,276,389,275,312,316,317,314,315,313,254,253,265,269,266,267,268,273,255,256,270,271,272,86,85,88,90,92,98,94,93,97,95,96,100,91,89,99,106,101,105,102,103,104,119,118,123,117,120,121,115,116,122,311,328,333,324,326,320,332,327,322,321,319,323,329,331,325,335,330,334,318,310,257,262,259,260,261,258,264,263,215,223,218,219,220,216,217,222,221,249,242,244,245,246,243,247,248,224,225,226,227,228,241,229,230,231,232,233,234,235,236,237,238,239,240,124,420,209,210,211,208,305,303,304,302,300,301,421,425,427,426,424,428,87,348,349,347,83,423,422,6,8,7,2,9,10,11,12,13,14,15,16,3,4,20,17,18,19,21,22,23,5,24,25,26,27,28,1,29,419,84,30,114,374,375,381,378,376,377,379,380,382,386,387,113,418,388,285,392,393,398,278,385,399,402,404,282,405,373,286,406,407,408,290,409,410,411,306,412,413,414,295,298,415,416,307,417,369,344,359,346,353,354,364,355,345,352,357,356,350,351,370,363,368,367,362,360,358,361,365,366,340,337,339,338,336,308,291,293,394,283,383,400,280,279,309,292,294,395,284,384,401,281,288,287,289,213,396,296,390,212,214,397,297,391,251,252,403,250,342,372,108,341,125,274,371,343]},"version":"4.7.2"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.d.ts b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.d.ts
new file mode 100644
index 0000000..a086b87
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.d.ts
@@ -0,0 +1,43 @@
+import { Provider } from "@ethersproject/providers";
+import { Signer } from "ethers";
+import type { TokenFeeDetector, TokenFeeDetectorInterface } from "../TokenFeeDetector";
+export declare class TokenFeeDetector__factory {
+    static readonly abi: ({
+        inputs: {
+            internalType: string;
+            name: string;
+            type: string;
+        }[];
+        stateMutability: string;
+        type: string;
+        name?: undefined;
+        outputs?: undefined;
+    } | {
+        inputs: never[];
+        name: string;
+        type: string;
+        stateMutability?: undefined;
+        outputs?: undefined;
+    } | {
+        inputs: {
+            internalType: string;
+            name: string;
+            type: string;
+        }[];
+        name: string;
+        outputs: {
+            components: {
+                internalType: string;
+                name: string;
+                type: string;
+            }[];
+            internalType: string;
+            name: string;
+            type: string;
+        }[];
+        stateMutability: string;
+        type: string;
+    })[];
+    static createInterface(): TokenFeeDetectorInterface;
+    static connect(address: string, signerOrProvider: Signer | Provider): TokenFeeDetector;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.js b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.js
new file mode 100644
index 0000000..73de15f
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/main/types/other/factories/TokenFeeDetector__factory.js
@@ -0,0 +1,151 @@
+"use strict";
+/* Autogenerated file. Do not edit manually. */
+/* tslint:disable */
+/* eslint-disable */
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.TokenFeeDetector__factory = void 0;
+const ethers_1 = require("ethers");
+const _abi = [
+    {
+        inputs: [
+            {
+                internalType: "address",
+                name: "_factoryV2",
+                type: "address",
+            },
+        ],
+        stateMutability: "nonpayable",
+        type: "constructor",
+    },
+    {
+        inputs: [],
+        name: "PairLookupFailed",
+        type: "error",
+    },
+    {
+        inputs: [],
+        name: "SameToken",
+        type: "error",
+    },
+    {
+        inputs: [
+            {
+                internalType: "address[]",
+                name: "tokens",
+                type: "address[]",
+            },
+            {
+                internalType: "address",
+                name: "baseToken",
+                type: "address",
+            },
+            {
+                internalType: "uint256",
+                name: "amountToBorrow",
+                type: "uint256",
+            },
+        ],
+        name: "batchValidate",
+        outputs: [
+            {
+                components: [
+                    {
+                        internalType: "uint256",
+                        name: "buyFeeBps",
+                        type: "uint256",
+                    },
+                    {
+                        internalType: "uint256",
+                        name: "sellFeeBps",
+                        type: "uint256",
+                    },
+                ],
+                internalType: "struct TokenFees[]",
+                name: "fotResults",
+                type: "tuple[]",
+            },
+        ],
+        stateMutability: "nonpayable",
+        type: "function",
+    },
+    {
+        inputs: [
+            {
+                internalType: "address",
+                name: "",
+                type: "address",
+            },
+            {
+                internalType: "uint256",
+                name: "amount0",
+                type: "uint256",
+            },
+            {
+                internalType: "uint256",
+                name: "",
+                type: "uint256",
+            },
+            {
+                internalType: "bytes",
+                name: "data",
+                type: "bytes",
+            },
+        ],
+        name: "uniswapV2Call",
+        outputs: [],
+        stateMutability: "nonpayable",
+        type: "function",
+    },
+    {
+        inputs: [
+            {
+                internalType: "address",
+                name: "token",
+                type: "address",
+            },
+            {
+                internalType: "address",
+                name: "baseToken",
+                type: "address",
+            },
+            {
+                internalType: "uint256",
+                name: "amountToBorrow",
+                type: "uint256",
+            },
+        ],
+        name: "validate",
+        outputs: [
+            {
+                components: [
+                    {
+                        internalType: "uint256",
+                        name: "buyFeeBps",
+                        type: "uint256",
+                    },
+                    {
+                        internalType: "uint256",
+                        name: "sellFeeBps",
+                        type: "uint256",
+                    },
+                ],
+                internalType: "struct TokenFees",
+                name: "fotResult",
+                type: "tuple",
+            },
+        ],
+        stateMutability: "nonpayable",
+        type: "function",
+    },
+];
+class TokenFeeDetector__factory {
+    static createInterface() {
+        return new ethers_1.utils.Interface(_abi);
+    }
+    static connect(address, signerOrProvider) {
+        return new ethers_1.Contract(address, _abi, signerOrProvider);
+    }
+}
+exports.TokenFeeDetector__factory = TokenFeeDetector__factory;
+TokenFeeDetector__factory.abi = _abi;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9rZW5GZWVEZXRlY3Rvcl9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy9vdGhlci9mYWN0b3JpZXMvVG9rZW5GZWVEZXRlY3Rvcl9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsK0NBQStDO0FBQy9DLG9CQUFvQjtBQUNwQixvQkFBb0I7OztBQUdwQixtQ0FBaUQ7QUFNakQsTUFBTSxJQUFJLEdBQUc7SUFDWDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsWUFBWTtnQkFDbEIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELGVBQWUsRUFBRSxZQUFZO1FBQzdCLElBQUksRUFBRSxhQUFhO0tBQ3BCO0lBQ0Q7UUFDRSxNQUFNLEVBQUUsRUFBRTtRQUNWLElBQUksRUFBRSxrQkFBa0I7UUFDeEIsSUFBSSxFQUFFLE9BQU87S0FDZDtJQUNEO1FBQ0UsTUFBTSxFQUFFLEVBQUU7UUFDVixJQUFJLEVBQUUsV0FBVztRQUNqQixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxZQUFZLEVBQUUsV0FBVztnQkFDekIsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsSUFBSSxFQUFFLFdBQVc7YUFDbEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFdBQVc7Z0JBQ2pCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxnQkFBZ0I7Z0JBQ3RCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxJQUFJLEVBQUUsZUFBZTtRQUNyQixPQUFPLEVBQUU7WUFDUDtnQkFDRSxVQUFVLEVBQUU7b0JBQ1Y7d0JBQ0UsWUFBWSxFQUFFLFNBQVM7d0JBQ3ZCLElBQUksRUFBRSxXQUFX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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/addresses.js b/node_modules/@uniswap/smart-order-router/build/main/util/addresses.js
index 9d77c31..c6a9e70 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/addresses.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/addresses.js
@@ -9,13 +9,13 @@ exports.BNB_NONFUNGIBLE_POSITION_MANAGER_ADDRESS = sdk_core_1.CHAIN_TO_ADDRESSES
 // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
 exports.BNB_SWAP_ROUTER_02_ADDRESS = sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].swapRouter02Address;
 exports.BNB_V3_MIGRATOR_ADDRESS = sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].v3MigratorAddress;
-exports.V3_CORE_FACTORY_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap(v3_sdk_1.FACTORY_ADDRESS)), { [sdk_core_1.ChainId.CELO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO].v3CoreFactoryAddress, [sdk_core_1.ChainId.CELO_ALFAJORES]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO_ALFAJORES].v3CoreFactoryAddress, [sdk_core_1.ChainId.OPTIMISM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_GOERLI].v3CoreFactoryAddress, [sdk_core_1.ChainId.SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SEPOLIA].v3CoreFactoryAddress, [sdk_core_1.ChainId.ARBITRUM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_GOERLI].v3CoreFactoryAddress, [sdk_core_1.ChainId.BNB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].v3CoreFactoryAddress, [sdk_core_1.ChainId.AVALANCHE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.AVALANCHE].v3CoreFactoryAddress, [sdk_core_1.ChainId.BASE_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE_GOERLI].v3CoreFactoryAddress, [sdk_core_1.ChainId.BASE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE].v3CoreFactoryAddress });
-exports.QUOTER_V2_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x61fFE014bA17989E743c5F6cB21bF9697530B21e')), { [sdk_core_1.ChainId.CELO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO].quoterAddress, [sdk_core_1.ChainId.CELO_ALFAJORES]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO_ALFAJORES].quoterAddress, [sdk_core_1.ChainId.OPTIMISM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_GOERLI].quoterAddress, [sdk_core_1.ChainId.SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SEPOLIA].quoterAddress, [sdk_core_1.ChainId.ARBITRUM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_GOERLI].quoterAddress, [sdk_core_1.ChainId.BNB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].quoterAddress, [sdk_core_1.ChainId.AVALANCHE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.AVALANCHE].quoterAddress, [sdk_core_1.ChainId.BASE_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE_GOERLI].quoterAddress, [sdk_core_1.ChainId.BASE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE].quoterAddress });
+exports.V3_CORE_FACTORY_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap(v3_sdk_1.FACTORY_ADDRESS)), { [sdk_core_1.ChainId.CELO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO].v3CoreFactoryAddress, [sdk_core_1.ChainId.CELO_ALFAJORES]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO_ALFAJORES].v3CoreFactoryAddress, [sdk_core_1.ChainId.OPTIMISM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_GOERLI].v3CoreFactoryAddress, [sdk_core_1.ChainId.SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SEPOLIA].v3CoreFactoryAddress, [sdk_core_1.ChainId.ARBITRUM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_GOERLI].v3CoreFactoryAddress, [sdk_core_1.ChainId.BNB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].v3CoreFactoryAddress, [sdk_core_1.ChainId.AVALANCHE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.AVALANCHE].v3CoreFactoryAddress, [sdk_core_1.ChainId.BASE_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE_GOERLI].v3CoreFactoryAddress, [sdk_core_1.ChainId.BASE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE].v3CoreFactoryAddress, [sdk_core_1.ChainId.TENET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.TENET].v3CoreFactoryAddress });
+exports.QUOTER_V2_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x61fFE014bA17989E743c5F6cB21bF9697530B21e')), { [sdk_core_1.ChainId.CELO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO].quoterAddress, [sdk_core_1.ChainId.CELO_ALFAJORES]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO_ALFAJORES].quoterAddress, [sdk_core_1.ChainId.OPTIMISM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_GOERLI].quoterAddress, [sdk_core_1.ChainId.SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SEPOLIA].quoterAddress, [sdk_core_1.ChainId.ARBITRUM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_GOERLI].quoterAddress, [sdk_core_1.ChainId.BNB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].quoterAddress, [sdk_core_1.ChainId.AVALANCHE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.AVALANCHE].quoterAddress, [sdk_core_1.ChainId.BASE_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE_GOERLI].quoterAddress, [sdk_core_1.ChainId.BASE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE].quoterAddress, [sdk_core_1.ChainId.TENET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.TENET].quoterAddress });
 exports.MIXED_ROUTE_QUOTER_V1_ADDRESSES = {
     [sdk_core_1.ChainId.MAINNET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.MAINNET].v1MixedRouteQuoterAddress,
     [sdk_core_1.ChainId.GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.GOERLI].v1MixedRouteQuoterAddress,
 };
-exports.UNISWAP_MULTICALL_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x1F98415757620B543A52E61c46B32eB19261F984')), { [sdk_core_1.ChainId.CELO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO].multicallAddress, [sdk_core_1.ChainId.CELO_ALFAJORES]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO_ALFAJORES].multicallAddress, [sdk_core_1.ChainId.OPTIMISM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_GOERLI].multicallAddress, [sdk_core_1.ChainId.SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SEPOLIA].multicallAddress, [sdk_core_1.ChainId.ARBITRUM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_GOERLI].multicallAddress, [sdk_core_1.ChainId.BNB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].multicallAddress, [sdk_core_1.ChainId.AVALANCHE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.AVALANCHE].multicallAddress, [sdk_core_1.ChainId.BASE_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE_GOERLI].multicallAddress, [sdk_core_1.ChainId.BASE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE].multicallAddress });
+exports.UNISWAP_MULTICALL_ADDRESSES = Object.assign(Object.assign({}, constructSameAddressMap('0x1F98415757620B543A52E61c46B32eB19261F984')), { [sdk_core_1.ChainId.CELO]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO].multicallAddress, [sdk_core_1.ChainId.CELO_ALFAJORES]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.CELO_ALFAJORES].multicallAddress, [sdk_core_1.ChainId.OPTIMISM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.OPTIMISM_GOERLI].multicallAddress, [sdk_core_1.ChainId.SEPOLIA]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.SEPOLIA].multicallAddress, [sdk_core_1.ChainId.ARBITRUM_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.ARBITRUM_GOERLI].multicallAddress, [sdk_core_1.ChainId.BNB]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BNB].multicallAddress, [sdk_core_1.ChainId.AVALANCHE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.AVALANCHE].multicallAddress, [sdk_core_1.ChainId.BASE_GOERLI]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE_GOERLI].multicallAddress, [sdk_core_1.ChainId.BASE]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.BASE].multicallAddress, [sdk_core_1.ChainId.TENET]: sdk_core_1.CHAIN_TO_ADDRESSES_MAP[sdk_core_1.ChainId.TENET].multicallAddress });
 const SWAP_ROUTER_02_ADDRESSES = (chainId) => {
     if (chainId == sdk_core_1.ChainId.BNB) {
         return exports.BNB_SWAP_ROUTER_02_ADDRESS;
@@ -45,6 +45,7 @@ exports.WETH9 = {
     [sdk_core_1.ChainId.ARBITRUM_ONE]: new sdk_core_1.Token(sdk_core_1.ChainId.ARBITRUM_ONE, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),
     [sdk_core_1.ChainId.ARBITRUM_GOERLI]: new sdk_core_1.Token(sdk_core_1.ChainId.ARBITRUM_GOERLI, '0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3', 18, 'WETH', 'Wrapped Ether'),
     [sdk_core_1.ChainId.BASE_GOERLI]: new sdk_core_1.Token(sdk_core_1.ChainId.BASE_GOERLI, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
-    [sdk_core_1.ChainId.BASE]: new sdk_core_1.Token(sdk_core_1.ChainId.BASE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether')
+    [sdk_core_1.ChainId.TENET]: new sdk_core_1.Token(sdk_core_1.ChainId.TENET, '0xD3F053dd508B4B328A1690C34F36F819CC917d9f', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.BASE]: new sdk_core_1.Token(sdk_core_1.ChainId.BASE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
 };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkcmVzc2VzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvYWRkcmVzc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGdEQUEyRTtBQUMzRSw0Q0FBa0Q7QUFFbEQscUNBQWdFO0FBRW5ELFFBQUEscUJBQXFCLEdBQUcsaUNBQXNCLENBQUMsa0JBQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxlQUFlLENBQUM7QUFDNUUsUUFBQSx3Q0FBd0MsR0FBRyxpQ0FBc0IsQ0FBQyxrQkFBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGlDQUFpQyxDQUFDO0FBQzlILG9FQUFvRTtBQUN2RCxRQUFBLDBCQUEwQixHQUFHLGlDQUFzQixDQUFDLGtCQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsbUJBQW9CLENBQUM7QUFDdEYsUUFBQSx1QkFBdUIsR0FBRyxpQ0FBc0IsQ0FBQyxrQkFBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGlCQUFpQixDQUFDO0FBRWhGLFFBQUEseUJBQXlCLG1DQUNqQyx1QkFBdUIsQ0FBQyx3QkFBZSxDQUFDLEtBQzNDLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxpQ0FBc0IsQ0FBQyxrQkFBTyxDQUFDLElBQUksQ0FBQyxDQUFDLG9CQUFvQixFQUN6RSxDQUFDLGtCQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUsaUNBQXNCLENBQUMsa0JBQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxvQkFBb0IsRUFDN0YsQ0FBQyxrQkFBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFLGlDQUFzQixDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsb0JBQW9CLEVBQy9GLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxpQ0FBc0IsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLG9CQUFvQixFQUMvRSxDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsaUNBQXNCLENBQUMsa0JBQU8sQ0FBQyxl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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkcmVzc2VzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvYWRkcmVzc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGdEQUEyRTtBQUMzRSw0Q0FBa0Q7QUFFbEQscUNBQWdFO0FBRW5ELFFBQUEscUJBQXFCLEdBQUcsaUNBQXNCLENBQUMsa0JBQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxlQUFlLENBQUM7QUFDNUUsUUFBQSx3Q0FBd0MsR0FBRyxpQ0FBc0IsQ0FBQyxrQkFBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGlDQUFpQyxDQUFDO0FBQzlILG9FQUFvRTtBQUN2RCxRQUFBLDBCQUEwQixHQUFHLGlDQUFzQixDQUFDLGtCQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsbUJBQW9CLENBQUM7QUFDdEYsUUFBQSx1QkFBdUIsR0FBRyxpQ0FBc0IsQ0FBQyxrQkFBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGlCQUFpQixDQUFDO0FBRWhGLFFBQUEseUJBQXlCLG1DQUNqQyx1QkFBdUIsQ0FBQyx3QkFBZSxDQUFDLEtBQzNDLENBQUMsa0JBQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxpQ0FBc0IsQ0FBQyxrQkFBTyxDQUFDLElBQUksQ0FBQyxDQUFDLG9CQUFvQixFQUN6RSxDQUFDLGtCQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUsaUNBQXNCLENBQUMsa0JBQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxvQkFBb0IsRUFDN0YsQ0FBQyxrQkFBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFLGlDQUFzQixDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsb0JBQW9CLEVBQy9GLENBQUMsa0JBQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxpQ0FBc0IsQ0FBQyxrQkFBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLG9CQUFvQixFQUMvRSxDQUFDLGtCQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsaUNBQXNCLENBQUMsa0JBQU8sQ0FBQyxl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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/chains.d.ts b/node_modules/@uniswap/smart-order-router/build/main/util/chains.d.ts
index 60b2271..e6042a4 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/chains.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/chains.d.ts
@@ -21,7 +21,8 @@ export declare enum ChainName {
     BNB = "bnb-mainnet",
     AVALANCHE = "avalanche-mainnet",
     BASE = "base-mainnet",
-    BASE_GOERLI = "base-goerli"
+    BASE_GOERLI = "base-goerli",
+    TENET = "tenet"
 }
 export declare enum NativeCurrencyName {
     ETHER = "ETH",
@@ -30,7 +31,8 @@ export declare enum NativeCurrencyName {
     GNOSIS = "XDAI",
     MOONBEAM = "GLMR",
     BNB = "BNB",
-    AVALANCHE = "AVAX"
+    AVALANCHE = "AVAX",
+    TENET = "TNT"
 }
 export declare const NATIVE_NAMES_BY_ID: {
     [chainId: number]: string[];
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/chains.js b/node_modules/@uniswap/smart-order-router/build/main/util/chains.js
index 902362a..edd6f4e 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/chains.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/chains.js
@@ -18,6 +18,7 @@ exports.SUPPORTED_CHAINS = [
     sdk_core_1.ChainId.BNB,
     sdk_core_1.ChainId.AVALANCHE,
     sdk_core_1.ChainId.BASE,
+    sdk_core_1.ChainId.TENET,
     // Gnosis and Moonbeam don't yet have contracts deployed yet
 ];
 exports.V2_SUPPORTED = [
@@ -77,6 +78,8 @@ const ID_TO_CHAIN_ID = (id) => {
             return sdk_core_1.ChainId.BASE;
         case 84531:
             return sdk_core_1.ChainId.BASE_GOERLI;
+        case 1024:
+            return sdk_core_1.ChainId.TENET;
         default:
             throw new Error(`Unknown chain id: ${id}`);
     }
@@ -101,6 +104,7 @@ var ChainName;
     ChainName["AVALANCHE"] = "avalanche-mainnet";
     ChainName["BASE"] = "base-mainnet";
     ChainName["BASE_GOERLI"] = "base-goerli";
+    ChainName["TENET"] = "tenet";
 })(ChainName = exports.ChainName || (exports.ChainName = {}));
 var NativeCurrencyName;
 (function (NativeCurrencyName) {
@@ -112,6 +116,7 @@ var NativeCurrencyName;
     NativeCurrencyName["MOONBEAM"] = "GLMR";
     NativeCurrencyName["BNB"] = "BNB";
     NativeCurrencyName["AVALANCHE"] = "AVAX";
+    NativeCurrencyName["TENET"] = "TNT";
 })(NativeCurrencyName = exports.NativeCurrencyName || (exports.NativeCurrencyName = {}));
 exports.NATIVE_NAMES_BY_ID = {
     [sdk_core_1.ChainId.MAINNET]: [
@@ -174,7 +179,8 @@ exports.NATIVE_NAMES_BY_ID = {
         'ETH',
         'ETHER',
         '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
-    ]
+    ],
+    [sdk_core_1.ChainId.TENET]: ['TENET']
 };
 exports.NATIVE_CURRENCY = {
     [sdk_core_1.ChainId.MAINNET]: NativeCurrencyName.ETHER,
@@ -193,6 +199,7 @@ exports.NATIVE_CURRENCY = {
     [sdk_core_1.ChainId.BNB]: NativeCurrencyName.BNB,
     [sdk_core_1.ChainId.AVALANCHE]: NativeCurrencyName.AVALANCHE,
     [sdk_core_1.ChainId.BASE]: NativeCurrencyName.ETHER,
+    [sdk_core_1.ChainId.TENET]: NativeCurrencyName.TENET,
 };
 const ID_TO_NETWORK_NAME = (id) => {
     switch (id) {
@@ -230,6 +237,8 @@ const ID_TO_NETWORK_NAME = (id) => {
             return ChainName.BASE;
         case 84531:
             return ChainName.BASE_GOERLI;
+        case 1024:
+            return ChainName.TENET;
         default:
             throw new Error(`Unknown chain id: ${id}`);
     }
@@ -266,6 +275,8 @@ const ID_TO_PROVIDER = (id) => {
             return process.env.JSON_RPC_PROVIDER_AVALANCHE;
         case sdk_core_1.ChainId.BASE:
             return process.env.JSON_RPC_PROVIDER_BASE;
+        case sdk_core_1.ChainId.TENET:
+            return process.env.JSON_RPC_PROVIDER_TENET;
         default:
             throw new Error(`Chain id: ${id} not supported`);
     }
@@ -289,7 +300,8 @@ exports.WRAPPED_NATIVE_CURRENCY = {
     [sdk_core_1.ChainId.MOONBEAM]: new sdk_core_1.Token(sdk_core_1.ChainId.MOONBEAM, '0xAcc15dC74880C9944775448304B263D191c6077F', 18, 'WGLMR', 'Wrapped GLMR'),
     [sdk_core_1.ChainId.AVALANCHE]: new sdk_core_1.Token(sdk_core_1.ChainId.AVALANCHE, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18, 'WAVAX', 'Wrapped AVAX'),
     [sdk_core_1.ChainId.BASE]: new sdk_core_1.Token(sdk_core_1.ChainId.BASE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
-    [sdk_core_1.ChainId.BASE_GOERLI]: new sdk_core_1.Token(sdk_core_1.ChainId.BASE_GOERLI, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether')
+    [sdk_core_1.ChainId.BASE_GOERLI]: new sdk_core_1.Token(sdk_core_1.ChainId.BASE_GOERLI, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [sdk_core_1.ChainId.TENET]: new sdk_core_1.Token(sdk_core_1.ChainId.TENET, '0x2248B3B667Dc3e665619b41197A0BA61116D4511', 18, 'WETH', 'Wrapped Ether')
 };
 function isMatic(chainId) {
     return chainId === sdk_core_1.ChainId.POLYGON_MUMBAI || chainId === sdk_core_1.ChainId.POLYGON;
@@ -335,6 +347,28 @@ class CeloNativeCurrency extends sdk_core_1.NativeCurrency {
         super(chainId, 18, 'CELO', 'Celo');
     }
 }
+class TenetNativeCurrency extends sdk_core_1.NativeCurrency {
+    equals(other) {
+        return other.isNative && other.chainId === this.chainId;
+    }
+    get wrapped() {
+        if (!isTenet(this.chainId))
+            throw new Error('Not tenet');
+        const nativeCurrency = exports.WRAPPED_NATIVE_CURRENCY[this.chainId];
+        if (nativeCurrency) {
+            return nativeCurrency;
+        }
+        throw new Error(`Does not support this chain ${this.chainId}`);
+    }
+    constructor(chainId) {
+        if (!isTenet(chainId))
+            throw new Error('Not tenet');
+        super(chainId, 18, 'TENET', 'TNT');
+    }
+}
+function isTenet(chainId) {
+    return chainId === sdk_core_1.ChainId.TENET;
+}
 function isGnosis(chainId) {
     return chainId === sdk_core_1.ChainId.GNOSIS;
 }
@@ -460,10 +494,13 @@ function nativeOnChain(chainId) {
     else if (isAvax(chainId)) {
         cachedNativeCurrency[chainId] = new AvalancheNativeCurrency(chainId);
     }
+    else if (isTenet(chainId)) {
+        cachedNativeCurrency[chainId] = new TenetNativeCurrency(chainId);
+    }
     else {
         cachedNativeCurrency[chainId] = ExtendedEther.onChain(chainId);
     }
     return cachedNativeCurrency[chainId];
 }
 exports.nativeOnChain = nativeOnChain;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.d.ts b/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.d.ts
index 1719fc8..8ae0ad9 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.d.ts
@@ -7,7 +7,7 @@ import { ProviderConfig } from '../providers/provider';
 import { ArbitrumGasData, OptimismGasData } from '../providers/v3/gas-data-provider';
 import { IV3PoolProvider } from '../providers/v3/pool-provider';
 import { SwapRoute } from '../routers';
-export declare function getV2NativePool(token: Token, poolProvider: IV2PoolProvider): Promise<Pair | null>;
+export declare function getV2NativePool(token: Token, poolProvider: IV2PoolProvider, providerConfig?: ProviderConfig): Promise<Pair | null>;
 export declare function getHighestLiquidityV3NativePool(token: Token, poolProvider: IV3PoolProvider, providerConfig?: ProviderConfig): Promise<Pool | null>;
 export declare function getHighestLiquidityV3USDPool(chainId: ChainId, poolProvider: IV3PoolProvider, providerConfig?: ProviderConfig): Promise<Pool>;
 export declare function getGasCostInUSD(usdPool: Pool, costNativeCurrency: CurrencyAmount<Token>): CurrencyAmount<Token>;
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.js b/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.js
index d7e1f0c..fb7a970 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/gas-factory-helpers.js
@@ -8,14 +8,15 @@ const bignumber_1 = require("@ethersproject/bignumber");
 const router_sdk_1 = require("@uniswap/router-sdk");
 const sdk_core_1 = require("@uniswap/sdk-core");
 const v3_sdk_1 = require("@uniswap/v3-sdk");
+const jsbi_1 = __importDefault(require("jsbi"));
 const lodash_1 = __importDefault(require("lodash"));
 const routers_1 = require("../routers");
 const util_1 = require("../util");
 const methodParameters_1 = require("./methodParameters");
-async function getV2NativePool(token, poolProvider) {
+async function getV2NativePool(token, poolProvider, providerConfig) {
     const chainId = token.chainId;
     const weth = util_1.WRAPPED_NATIVE_CURRENCY[chainId];
-    const poolAccessor = await poolProvider.getPools([[weth, token]]);
+    const poolAccessor = await poolProvider.getPools([[weth, token]], providerConfig);
     const pool = poolAccessor.getPool(weth, token);
     if (!pool || pool.reserve0.equalTo(0) || pool.reserve1.equalTo(0)) {
         util_1.log.error({
@@ -57,7 +58,9 @@ async function getHighestLiquidityV3NativePool(token, poolProvider, providerConf
         util_1.log.error({ pools }, `Could not find a ${nativeCurrency.symbol} pool with ${token.symbol} for computing gas costs.`);
         return null;
     }
-    const maxPool = lodash_1.default.maxBy(pools, (pool) => pool.liquidity);
+    const maxPool = pools.reduce((prev, current) => {
+        return jsbi_1.default.greaterThan(prev.liquidity, current.liquidity) ? prev : current;
+    });
     return maxPool;
 }
 exports.getHighestLiquidityV3NativePool = getHighestLiquidityV3NativePool;
@@ -105,7 +108,9 @@ async function getHighestLiquidityV3USDPool(chainId, poolProvider, providerConfi
         util_1.log.error({ pools }, message);
         throw new Error(message);
     }
-    const maxPool = lodash_1.default.maxBy(pools, (pool) => pool.liquidity);
+    const maxPool = pools.reduce((prev, current) => {
+        return jsbi_1.default.greaterThan(prev.liquidity, current.liquidity) ? prev : current;
+    });
     return maxPool;
 }
 exports.getHighestLiquidityV3USDPool = getHighestLiquidityV3USDPool;
@@ -180,10 +185,7 @@ async function calculateGasUsed(chainId, route, simulatedGasUsed, v2PoolProvider
     const gasPriceWei = route.gasPriceWei;
     // calculate L2 to L1 security fee if relevant
     let l2toL1FeeInWei = bignumber_1.BigNumber.from(0);
-    if ([
-        sdk_core_1.ChainId.ARBITRUM_ONE,
-        sdk_core_1.ChainId.ARBITRUM_GOERLI,
-    ].includes(chainId)) {
+    if ([sdk_core_1.ChainId.ARBITRUM_ONE, sdk_core_1.ChainId.ARBITRUM_GOERLI].includes(chainId)) {
         l2toL1FeeInWei = calculateArbitrumToL1FeeFromCalldata(route.methodParameters.calldata, l2GasData)[1];
     }
     else if ([
@@ -205,7 +207,7 @@ async function calculateGasUsed(chainId, route, simulatedGasUsed, v2PoolProvider
     if (!quoteToken.equals(nativeCurrency)) {
         const nativePools = await Promise.all([
             getHighestLiquidityV3NativePool(quoteToken, v3PoolProvider, providerConfig),
-            getV2NativePool(quoteToken, v2PoolProvider),
+            getV2NativePool(quoteToken, v2PoolProvider, providerConfig),
         ]);
         const nativePool = nativePools.find((pool) => pool !== null);
         if (!nativePool) {
@@ -305,4 +307,4 @@ function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvider, qu
     };
 }
 exports.initSwapRouteFromExisting = initSwapRouteFromExisting;
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/main/util/routes.js b/node_modules/@uniswap/smart-order-router/build/main/util/routes.js
index 5ccd634..d5c3dc9 100644
--- a/node_modules/@uniswap/smart-order-router/build/main/util/routes.js
+++ b/node_modules/@uniswap/smart-order-router/build/main/util/routes.js
@@ -57,4 +57,4 @@ const poolToString = (p) => {
     return `${p.token0.symbol}/${p.token1.symbol}${p instanceof v3_sdk_1.Pool ? `/${p.fee / 10000}%` : ``}`;
 };
 exports.poolToString = poolToString;
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9EQUErQztBQUMvQyxnREFBNEM7QUFDNUMsNENBQXVDO0FBQ3ZDLDRDQUF1QztBQUN2QyxvREFBdUI7QUFJdkIsMkNBQXdEO0FBRXhELHdCQUFtQztBQUU1QixNQUFNLGFBQWEsR0FBRyxDQUMzQixLQUFxQyxFQUM3QixFQUFFO0lBQ1YsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLE1BQU0sTUFBTSxHQUNWLEtBQUssQ0FBQyxRQUFRLEtBQUsscUJBQVEsQ0FBQyxFQUFFO1FBQzVCLENBQUMsQ0FBQyxLQUFLLENBQUMsU0FBUztRQUNqQixDQUFDLENBQUMsbUNBQW1DO1lBQ25DLEtBQUssQ0FBQyxJQUFJLENBQUM7SUFDakIsTUFBTSxTQUFTLEdBQUcsZ0JBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzlELE1BQU0sS0FBSyxHQUNULEtBQUssQ0FBQyxRQUFRLEtBQUsscUJBQVEsQ0FBQyxFQUFFLElBQUksS0FBSyxDQUFDLFFBQVEsS0FBSyxxQkFBUSxDQUFDLEtBQUs7UUFDakUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLO1FBQ2IsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFDbEIsTUFBTSxXQUFXLEdBQUcsZ0JBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDeEMsT0FBTyxHQUNMLElBQUksWUFBWSxhQUFJO1lBQ2xCLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSyxNQUFNLGFBQUksQ0FBQyxVQUFVLENBQzFDLElBQUksQ0FBQyxNQUFNLEVBQ1gsSUFBSSxDQUFD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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLG9EQUErQztBQUMvQyxnREFBNEM7QUFDNUMsNENBQXVDO0FBQ3ZDLDRDQUF1QztBQUN2QyxvREFBdUI7QUFLdkIsMkNBQXdEO0FBRXhELHdCQUFtQztBQUU1QixNQUFNLGFBQWEsR0FBRyxDQUMzQixLQUFxQyxFQUM3QixFQUFFO0lBQ1YsTUFBTSxRQUFRLEdBQUcsRUFBRSxDQUFDO0lBQ3BCLE1BQU0sTUFBTSxHQUNWLEtBQUssQ0FBQyxRQUFRLEtBQUsscUJBQVEsQ0FBQyxFQUFFO1FBQzVCLENBQUMsQ0FBQyxLQUFLLENBQUMsU0FBUztRQUNqQixDQUFDLENBQUMsbUNBQW1DO1lBQ25DLEtBQUssQ0FBQyxJQUFJLENBQUM7SUFDakIsTUFBTSxTQUFTLEdBQUcsZ0JBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzlELE1BQU0sS0FBSyxHQUNULEtBQUssQ0FBQyxRQUFRLEtBQUsscUJBQVEsQ0FBQyxFQUFFLElBQUksS0FBSyxDQUFDLFFBQVEsS0FBSyxxQkFBUSxDQUFDLEtBQUs7UUFDakUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLO1FBQ2IsQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUM7SUFDbEIsTUFBTSxXQUFXLEdBQUcsZ0JBQUMsQ0FBQyxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDeEMsT0FBTyxHQUNMLElBQUksWUFBWSxhQUFJO1lBQ2xCLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxHQUFHLEdBQUcsS0FBSyxNQUFNLGFBQUksQ0FBQyxVQUFVLENBQzFDLElBQUksQ0FBQyxNQUFNLEVBQ1gsSUFBSSxDQUFD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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/cache-node.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/cache-node.d.ts
index 990da8a..6287b1d 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/cache-node.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/cache-node.d.ts
@@ -4,6 +4,7 @@ export declare class NodeJSCache<T> implements ICache<T> {
     private nodeCache;
     constructor(nodeCache: NodeCache);
     get(key: string): Promise<T | undefined>;
+    batchGet(keys: Set<string>): Promise<Record<string, T | undefined>>;
     set(key: string, value: T): Promise<boolean>;
     has(key: string): Promise<boolean>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/cache-node.js b/node_modules/@uniswap/smart-order-router/build/module/providers/cache-node.js
index ca7fc67..49b1584 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/cache-node.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/cache-node.js
@@ -5,6 +5,15 @@ export class NodeJSCache {
     async get(key) {
         return this.nodeCache.get(key);
     }
+    async batchGet(keys) {
+        const keysArr = Array.from(keys);
+        const values = await Promise.all(keysArr.map((key) => this.get(key)));
+        const result = {};
+        keysArr.forEach((key, index) => {
+            result[key] = values[index];
+        });
+        return result;
+    }
     async set(key, value) {
         return this.nodeCache.set(key, value);
     }
@@ -12,4 +21,4 @@ export class NodeJSCache {
         return this.nodeCache.has(key);
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUtbm9kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGUtbm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxNQUFNLE9BQU8sV0FBVztJQUN0QixZQUFvQixTQUFvQjtRQUFwQixjQUFTLEdBQVQsU0FBUyxDQUFXO0lBQUcsQ0FBQztJQUU1QyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQVc7UUFDbkIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBSSxHQUFHLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFXLEVBQUUsS0FBUTtRQUM3QixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUN4QyxDQUFDO0lBRUQsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFXO1FBQ25CLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDakMsQ0FBQztDQUNGIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGUtbm9kZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGUtbm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxNQUFNLE9BQU8sV0FBVztJQUN0QixZQUFvQixTQUFvQjtRQUFwQixjQUFTLEdBQVQsU0FBUyxDQUFXO0lBQUcsQ0FBQztJQUU1QyxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQVc7UUFDbkIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBSSxHQUFHLENBQUMsQ0FBQztJQUNwQyxDQUFDO0lBRUQsS0FBSyxDQUFDLFFBQVEsQ0FBQyxJQUFpQjtRQUM5QixNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ2pDLE1BQU0sTUFBTSxHQUFHLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUV0RSxNQUFNLE1BQU0sR0FBa0MsRUFBRSxDQUFDO1FBRWpELE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDN0IsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM5QixDQUFDLENBQUMsQ0FBQztRQUVILE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFFRCxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQVcsRUFBRSxLQUFRO1FBQzdCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFRCxLQUFLLENBQUMsR0FBRyxDQUFDLEdBQVc7UUFDbkIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNqQyxDQUFDO0NBQ0YifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/cache.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/cache.d.ts
index f527168..5640644 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/cache.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/cache.d.ts
@@ -8,6 +8,7 @@
  */
 export interface ICache<T> {
     get(key: string): Promise<T | undefined>;
+    batchGet(keys: Set<string>): Promise<Record<string, T | undefined>>;
     set(key: string, value: T): Promise<boolean>;
     has(key: string): Promise<boolean>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching-token-list-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/caching-token-list-provider.d.ts
index 98399dc..8ace882 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching-token-list-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching-token-list-provider.d.ts
@@ -9,7 +9,9 @@ import { ITokenProvider, TokenAccessor } from './token-provider';
  * @interface ITokenListProvider
  */
 export interface ITokenListProvider {
+    hasTokenBySymbol(_symbol: string): Promise<boolean>;
     getTokenBySymbol(_symbol: string): Promise<Token | undefined>;
+    hasTokenByAddress(address: string): Promise<boolean>;
     getTokenByAddress(address: string): Promise<Token | undefined>;
 }
 export declare class CachingTokenListProvider implements ITokenProvider, ITokenListProvider {
@@ -20,6 +22,8 @@ export declare class CachingTokenListProvider implements ITokenProvider, ITokenL
     private chainSymbolToTokenInfo;
     private chainAddressToTokenInfo;
     private tokenList;
+    private CHAIN_SYMBOL_KEY;
+    private CHAIN_ADDRESS_KEY;
     /**
      * Creates an instance of CachingTokenListProvider.
      * Token metadata (e.g. symbol and decimals) generally don't change so can be cached indefinitely.
@@ -32,8 +36,17 @@ export declare class CachingTokenListProvider implements ITokenProvider, ITokenL
     static fromTokenListURI(chainId: ChainId | number, tokenListURI: string, tokenCache: ICache<Token>): Promise<CachingTokenListProvider>;
     private static buildTokenList;
     static fromTokenList(chainId: ChainId | number, tokenList: TokenList, tokenCache: ICache<Token>): Promise<CachingTokenListProvider>;
-    getTokens(_addresses: string[]): Promise<TokenAccessor>;
+    /**
+     * If no addresses array is specified, all tokens in the token list are
+     * returned.
+     *
+     * @param _addresses (optional) The token addresses to get.
+     * @returns Promise<TokenAccessor> A token accessor with methods for accessing the tokens.
+     */
+    getTokens(_addresses?: string[]): Promise<TokenAccessor>;
+    hasTokenBySymbol(_symbol: string): Promise<boolean>;
     getTokenBySymbol(_symbol: string): Promise<Token | undefined>;
+    hasTokenByAddress(address: string): Promise<boolean>;
     getTokenByAddress(address: string): Promise<Token | undefined>;
     private buildToken;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching-token-list-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/caching-token-list-provider.js
index 7d95a1f..206f6a6 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching-token-list-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching-token-list-provider.js
@@ -1,7 +1,6 @@
 /* eslint-disable @typescript-eslint/no-non-null-assertion */
 import { Token } from '@uniswap/sdk-core';
 import axios from 'axios';
-import _ from 'lodash';
 import { log } from '../util/log';
 import { metric, MetricLoggerUnit } from '../util/metric';
 export class CachingTokenListProvider {
@@ -16,18 +15,25 @@ export class CachingTokenListProvider {
     constructor(chainId, tokenList, tokenCache) {
         this.tokenCache = tokenCache;
         this.CACHE_KEY = (tokenInfo) => `token-list-token-${this.chainId}/${this.tokenList.name}/${this.tokenList.timestamp}/${this.tokenList.version}/${tokenInfo.address.toLowerCase()}/${tokenInfo.decimals}/${tokenInfo.symbol}/${tokenInfo.name}`;
+        this.CHAIN_SYMBOL_KEY = (chainId, symbol) => `${chainId.toString()}/${symbol}`;
+        this.CHAIN_ADDRESS_KEY = (chainId, address) => `${chainId.toString()}/${address.toLowerCase()}`;
         this.chainId = chainId;
         this.tokenList = tokenList;
-        this.chainToTokenInfos = _.reduce(this.tokenList.tokens, (result, tokenInfo) => {
-            const chainId = tokenInfo.chainId.toString();
-            if (!result[chainId]) {
-                result[chainId] = [];
+        this.chainToTokenInfos = new Map();
+        this.chainSymbolToTokenInfo = new Map();
+        this.chainAddressToTokenInfo = new Map();
+        for (const tokenInfo of this.tokenList.tokens) {
+            const chainId = tokenInfo.chainId;
+            const chainIdString = chainId.toString();
+            const symbol = tokenInfo.symbol;
+            const address = tokenInfo.address.toLowerCase();
+            if (!this.chainToTokenInfos.has(chainIdString)) {
+                this.chainToTokenInfos.set(chainIdString, []);
             }
-            result[chainId].push(tokenInfo);
-            return result;
-        }, {});
-        this.chainSymbolToTokenInfo = _.mapValues(this.chainToTokenInfos, (tokenInfos) => _.keyBy(tokenInfos, 'symbol'));
-        this.chainAddressToTokenInfo = _.mapValues(this.chainToTokenInfos, (tokenInfos) => _.keyBy(tokenInfos, (tokenInfo) => tokenInfo.address.toLowerCase()));
+            this.chainToTokenInfos.get(chainIdString).push(tokenInfo);
+            this.chainSymbolToTokenInfo.set(this.CHAIN_SYMBOL_KEY(chainId, symbol), tokenInfo);
+            this.chainAddressToTokenInfo.set(this.CHAIN_ADDRESS_KEY(chainId, address), tokenInfo);
+        }
     }
     static async fromTokenListURI(chainId, tokenListURI, tokenCache) {
         const now = Date.now();
@@ -52,28 +58,49 @@ export class CachingTokenListProvider {
         metric.putMetric('TokenListLoad', Date.now() - now, MetricLoggerUnit.Milliseconds);
         return tokenProvider;
     }
+    /**
+     * If no addresses array is specified, all tokens in the token list are
+     * returned.
+     *
+     * @param _addresses (optional) The token addresses to get.
+     * @returns Promise<TokenAccessor> A token accessor with methods for accessing the tokens.
+     */
     async getTokens(_addresses) {
-        const addressToToken = {};
-        const symbolToToken = {};
-        for (const address of _addresses) {
-            const token = await this.getTokenByAddress(address);
-            if (!token) {
-                continue;
+        var _a;
+        const addressToToken = new Map();
+        const symbolToToken = new Map();
+        const addToken = (token) => {
+            if (!token)
+                return;
+            addressToToken.set(token.address.toLowerCase(), token);
+            if (token.symbol !== undefined) {
+                symbolToToken.set(token.symbol.toLowerCase(), token);
             }
-            addressToToken[address.toLowerCase()] = token;
-            if (!token.symbol) {
-                continue;
+        };
+        if (_addresses) {
+            for (const address of _addresses) {
+                const token = await this.getTokenByAddress(address);
+                addToken(token);
+            }
+        }
+        else {
+            const chainTokens = (_a = this.chainToTokenInfos.get(this.chainId.toString())) !== null && _a !== void 0 ? _a : [];
+            for (const info of chainTokens) {
+                const token = await this.buildToken(info);
+                addToken(token);
             }
-            symbolToToken[token.symbol.toLowerCase()] = token;
         }
         return {
-            getTokenByAddress: (address) => addressToToken[address.toLowerCase()],
-            getTokenBySymbol: (symbol) => symbolToToken[symbol.toLowerCase()],
+            getTokenByAddress: (address) => addressToToken.get(address.toLowerCase()),
+            getTokenBySymbol: (symbol) => symbolToToken.get(symbol.toLowerCase()),
             getAllTokens: () => {
-                return Object.values(addressToToken);
+                return Array.from(addressToToken.values());
             },
         };
     }
+    async hasTokenBySymbol(_symbol) {
+        return this.chainSymbolToTokenInfo.has(this.CHAIN_SYMBOL_KEY(this.chainId, _symbol));
+    }
     async getTokenBySymbol(_symbol) {
         let symbol = _symbol;
         // We consider ETH as a regular ERC20 Token throughout this package. We don't use the NativeCurrency object from the sdk.
@@ -81,21 +108,18 @@ export class CachingTokenListProvider {
         if (_symbol == 'ETH') {
             symbol = 'WETH';
         }
-        if (!this.chainSymbolToTokenInfo[this.chainId.toString()]) {
-            return undefined;
-        }
-        const tokenInfo = this.chainSymbolToTokenInfo[this.chainId.toString()][symbol];
+        const tokenInfo = this.chainSymbolToTokenInfo.get(this.CHAIN_SYMBOL_KEY(this.chainId, symbol));
         if (!tokenInfo) {
             return undefined;
         }
         const token = await this.buildToken(tokenInfo);
         return token;
     }
+    async hasTokenByAddress(address) {
+        return this.chainAddressToTokenInfo.has(this.CHAIN_ADDRESS_KEY(this.chainId, address));
+    }
     async getTokenByAddress(address) {
-        if (!this.chainAddressToTokenInfo[this.chainId.toString()]) {
-            return undefined;
-        }
-        const tokenInfo = this.chainAddressToTokenInfo[this.chainId.toString()][address.toLowerCase()];
+        const tokenInfo = this.chainAddressToTokenInfo.get(this.CHAIN_ADDRESS_KEY(this.chainId, address));
         if (!tokenInfo) {
             return undefined;
         }
@@ -113,4 +137,4 @@ export class CachingTokenListProvider {
         return token;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy10b2tlbi1saXN0LXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nLXRva2VuLWxpc3QtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEO0FBQzdELE9BQU8sRUFBVyxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUVuRCxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDMUIsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDbEMsT0FBTyxFQUFFLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBc0IxRCxNQUFNLE9BQU8sd0JBQXdCO0lBZ0JuQzs7Ozs7OztPQU9HO0lBQ0gsWUFDRSxPQUF5QixFQUN6QixTQUFvQixFQUNaLFVBQXlCO1FBQXpCLGVBQVUsR0FBVixVQUFVLENBQWU7UUF4QjNCLGNBQVMsR0FBRyxDQUFDLFNBQW9CLEVBQUUsRUFBRSxDQUMzQyxvQkFBb0IsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksSUFDckQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUNqQixJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxJQUFJLFNBQVMsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLElBQzNELFNBQVMsQ0FBQyxRQUNaLElBQUksU0FBUyxDQUFDLE1BQU0sSUFBSSxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUM7UUFxQnpDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDO1FBRTNCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUMvQixJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sRUFDckIsQ0FB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy10b2tlbi1saXN0LXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nLXRva2VuLWxpc3QtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEO0FBQzdELE9BQU8sRUFBVyxLQUFLLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUVuRCxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFFMUIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNsQyxPQUFPLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFxQjFELE1BQU0sT0FBTyx3QkFBd0I7SUFrQm5DOzs7Ozs7O09BT0c7SUFDSCxZQUNFLE9BQXlCLEVBQ3pCLFNBQW9CLEVBQ1osVUFBeUI7UUFBekIsZUFBVSxHQUFWLFVBQVUsQ0FBZTtRQTNCM0IsY0FBUyxHQUFHLENBQUMsU0FBb0IsRUFBRSxFQUFFLENBQzNDLG9CQUFvQixJQUFJLENBQUMsT0FBTyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxJQUNyRCxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQ2pCLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLElBQUksU0FBUyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsSUFDM0QsU0FBUyxDQUFDLFFBQ1osSUFBSSxTQUFTLENBQUMsTUFBTSxJQUFJLFNBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQVFuQyxxQkFBZ0IsR0FBRyxDQUFDLE9BQWdCLEVBQUUsTUFBYyxFQUFFLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLEVBQUUsSUFBSSxNQUFNLEVBQUUsQ0FBQztRQUMzRixzQkFBaUIsR0FBRyxDQUFDLE9BQWdCLEVBQUUsT0FBZSxFQUFFLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLEVBQUUsSUFBSSxPQUFP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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.d.ts
index 4edbb98..3747ebc 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.d.ts
@@ -14,6 +14,7 @@ interface CachedRouteParams<Route extends V3Route | V2Route | MixedRoute> {
 export declare class CachedRoute<Route extends V3Route | V2Route | MixedRoute> {
     readonly route: Route;
     readonly percent: number;
+    private hashCode;
     /**
      * @param route
      * @param percent
@@ -22,5 +23,7 @@ export declare class CachedRoute<Route extends V3Route | V2Route | MixedRoute> {
     get protocol(): Protocol;
     get tokenIn(): Token;
     get tokenOut(): Token;
+    get routePath(): string;
+    get routeId(): number;
 }
 export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.js b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.js
index 2c01b99..5e5ddd3 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-route.js
@@ -1,3 +1,5 @@
+import { Protocol } from '@uniswap/router-sdk';
+import { Pool } from '@uniswap/v3-sdk';
 /**
  * Class defining the route to cache
  *
@@ -10,6 +12,9 @@ export class CachedRoute {
      * @param percent
      */
     constructor({ route, percent }) {
+        // Hashing function copying the same implementation as Java's `hashCode`
+        // Sourced from: https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0?permalink_comment_id=4613539#gistcomment-4613539
+        this.hashCode = (str) => [...str].reduce((s, c) => Math.imul(31, s) + c.charCodeAt(0) | 0, 0);
         this.route = route;
         this.percent = percent;
     }
@@ -22,5 +27,29 @@ export class CachedRoute {
     get tokenOut() {
         return this.route.output;
     }
+    get routePath() {
+        if (this.protocol == Protocol.V3) {
+            const route = this.route;
+            return route.pools.map(pool => `[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`).join('->');
+        }
+        else if (this.protocol == Protocol.V2) {
+            const route = this.route;
+            return route.pairs.map(pair => `[V2]${pair.token0.address}/${pair.token1.address}`).join('->');
+        }
+        else {
+            const route = this.route;
+            return route.pools.map(pool => {
+                if (pool instanceof Pool) {
+                    return `[V3]${pool.token0.address}/${pool.token1.address}/${pool.fee}`;
+                }
+                else {
+                    return `[V2]${pool.token0.address}/${pool.token1.address}`;
+                }
+            }).join('->');
+        }
+    }
+    get routeId() {
+        return this.hashCode(this.routePath);
+    }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nL3JvdXRlL21vZGVsL2NhY2hlZC1yb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTyxXQUFXO0lBSXRCOzs7T0FHRztJQUNILFlBQVksRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUE0QjtRQUN0RCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN6QixDQUFDO0lBRUQsSUFBVyxRQUFRO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUM7SUFDN0IsQ0FBQztJQUVELElBQVcsT0FBTztRQUNoQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQzFCLENBQUM7SUFFRCxJQUFXLFFBQVE7UUFDakIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQztJQUMzQixDQUFDO0NBQ0YifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9jYWNoaW5nL3JvdXRlL21vZGVsL2NhY2hlZC1yb3V0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFL0MsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBU3ZDOzs7OztHQUtHO0FBQ0gsTUFBTSxPQUFPLFdBQVc7SUFPdEI7OztPQUdHO0lBQ0gsWUFBWSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQTRCO1FBUnhELHdFQUF3RTtRQUN4RSxvSUFBb0k7UUFDNUgsYUFBUSxHQUFHLENBQUMsR0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFPdkcsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7SUFDekIsQ0FBQztJQUVELElBQVcsUUFBUTtRQUNqQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDO0lBQzdCLENBQUM7SUFFRCxJQUFXLE9BQU87UUFDaEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUMxQixDQUFDO0lBRUQsSUFBVyxRQUFRO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7SUFDM0IsQ0FBQztJQUVELElBQVcsU0FBUztRQUNsQixJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDLEVBQUUsRUFBRTtZQUNoQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBZ0IsQ0FBQztZQUNwQyxPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDNUc7YUFBTSxJQUFJLElBQUksQ0FBQyxRQUFRLElBQUksUUFBUSxDQUFDLEVBQUUsRUFBRTtZQUN2QyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBZ0IsQ0FBQztZQUNwQyxPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2hHO2FBQU07WUFDTCxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBbUIsQ0FBQztZQUN2QyxPQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUM1QixJQUFJLElBQUksWUFBWSxJQUFJLEVBQUU7b0JBQ3hCLE9BQU8sT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7aUJBQ3hFO3FCQUFNO29CQUNMLE9BQU8sT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRSxDQUFDO2lCQUM1RDtZQUNILENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNmO0lBQ0gsQ0FBQztJQUVELElBQVcsT0FBTztRQUNoQixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUM7Q0FDRiJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.d.ts
index 6548da0..add3a58 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.d.ts
@@ -60,7 +60,8 @@ export declare class CachedRoutes {
      * Function to determine if, given a block number, the CachedRoute is expired or not.
      *
      * @param currentBlockNumber
+     * @param optimistic
      */
-    notExpired(currentBlockNumber: number): boolean;
+    notExpired(currentBlockNumber: number, optimistic?: boolean): boolean;
 }
 export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.js b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.js
index 71ff355..4ccd33f 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/model/cached-routes.js
@@ -62,9 +62,13 @@ export class CachedRoutes {
      * Function to determine if, given a block number, the CachedRoute is expired or not.
      *
      * @param currentBlockNumber
+     * @param optimistic
      */
-    notExpired(currentBlockNumber) {
-        return (currentBlockNumber - this.blockNumber) <= this.blocksToLive;
+    notExpired(currentBlockNumber, optimistic = false) {
+        // When it's not optimistic, we only allow the route of the existing block.
+        const blocksToLive = optimistic ? this.blocksToLive : 0;
+        const blocksDifference = currentBlockNumber - this.blockNumber;
+        return blocksDifference <= blocksToLive;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9tb2RlbC9jYWNoZWQtcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUl2QixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFjN0M7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8sWUFBWTtJQVl2Qjs7Ozs7Ozs7OztPQVVHO0lBQ0gsWUFDRSxFQUNFLE1BQU0sRUFDTixPQUFPLEVBQ1AsT0FBTyxFQUNQLFFBQVEsRUFDUixnQkFBZ0IsRUFDaEIsV0FBVyxFQUNYLFNBQVMsRUFDVCxjQUFjLEVBQ2QsWUFBWSxHQUFHLENBQUMsRUFDRztRQUVyQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUM7UUFDekMsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7SUFDbkMsQ0FBQztJQUVEOzs7Ozs7Ozs7Ozs7O09BYUc7SUFDSSxNQUFNLENBQUMseUJBQXlCLENBQ3JDLE1BQTZCLEVBQzdCLE9BQWdCLEVBQ2hCLE9BQWMsRUFDZCxRQUFlLEVBQ2YsZ0JBQTRCLEVBQzVCLFdBQW1CLEVBQ25CLFNBQW9CLEVBQ3BCLGNBQXNCO1FBRXRCLElBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxDQUFDO1lBQUUsT0FBTyxTQUFTLENBQUM7UUFFekMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUEwQixFQUFFLEVBQUUsQ0FDaEUsSUFBSSxXQUFXLENBQUMsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQ2hFLENBQUM7UUFFRixPQUFPLElBQUksWUFBWSxDQUFDO1lBQ3RCLE1BQU0sRUFBRSxZQUFZO1lBQ3BCLE9BQU87WUFDUCxPQUFPO1lBQ1AsUUFBUTtZQUNSLGdCQUFnQjtZQUNoQixXQUFXO1lBQ1gsU0FBUztZQUNULGNBQWM7U0FDZixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLFVBQVUsQ0FBQyxrQkFBMEI7UUFDMUMsT0FBTyxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDO0lBQ3RFLENBQUM7Q0FDRiJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGVkLXJvdXRlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9tb2RlbC9jYWNoZWQtcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUl2QixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFjN0M7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8sWUFBWTtJQVl2Qjs7Ozs7Ozs7OztPQVVHO0lBQ0gsWUFDRSxFQUNFLE1BQU0sRUFDTixPQUFPLEVBQ1AsT0FBTyxFQUNQLFFBQVEsRUFDUixnQkFBZ0IsRUFDaEIsV0FBVyxFQUNYLFNBQVMsRUFDVCxjQUFjLEVBQ2QsWUFBWSxHQUFHLENBQUMsRUFDRztRQUVyQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUM7UUFDekMsSUFBSSxDQUFDLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDL0IsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLFlBQVksR0FBRyxZQUFZLENBQUM7SUFDbkMsQ0FBQztJQUVEOzs7Ozs7Ozs7Ozs7O09BYUc7SUFDSSxNQUFNLENBQUMseUJBQXlCLENBQ3JDLE1BQTZCLEVBQzdCLE9BQWdCLEVBQ2hCLE9BQWMsRUFDZCxRQUFlLEVBQ2YsZ0JBQTRCLEVBQzVCLFdBQW1CLEVBQ25CLFNBQW9CLEVBQ3BCLGNBQXNCO1FBRXRCLElBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxDQUFDO1lBQUUsT0FBTyxTQUFTLENBQUM7UUFFekMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUEwQixFQUFFLEVBQUUsQ0FDaEUsSUFBSSxXQUFXLENBQUMsRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQ2hFLENBQUM7UUFFRixPQUFPLElBQUksWUFBWSxDQUFDO1lBQ3RCLE1BQU0sRUFBRSxZQUFZO1lBQ3BCLE9BQU87WUFDUCxPQUFPO1lBQ1AsUUFBUTtZQUNSLGdCQUFnQjtZQUNoQixXQUFXO1lBQ1gsU0FBUztZQUNULGNBQWM7U0FDZixDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxVQUFVLENBQUMsa0JBQTBCLEVBQUUsVUFBVSxHQUFHLEtBQUs7UUFDOUQsMkVBQTJFO1FBQzNFLE1BQU0sWUFBWSxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hELE1BQU0sZ0JBQWdCLEdBQUcsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztRQUUvRCxPQUFPLGdCQUFnQixJQUFJLFlBQVksQ0FBQztJQUMxQyxDQUFDO0NBQ0YifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.d.ts
index 847815e..8321a2d 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.d.ts
@@ -25,7 +25,7 @@ export declare abstract class IRouteCachingProvider {
      * @param protocols
      * @param blockNumber
      */
-    readonly getCachedRoute: (chainId: number, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[], blockNumber: number) => Promise<CachedRoutes | undefined>;
+    readonly getCachedRoute: (chainId: number, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[], blockNumber: number, optimistic?: boolean) => Promise<CachedRoutes | undefined>;
     /**
      * Final implementation of the public `setCachedRoute` method.
      * This method will set the blockToLive in the CachedRoutes object before calling the internal method to insert in cache.
@@ -55,7 +55,7 @@ export declare abstract class IRouteCachingProvider {
      * @param amount
      */
     abstract getCacheMode(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[]): Promise<CacheMode>;
-    private filterExpiredCachedRoutes;
+    protected filterExpiredCachedRoutes(cachedRoutes: CachedRoutes | undefined, blockNumber: number, optimistic: boolean): CachedRoutes | undefined;
     /**
      * Internal function to fetch the CachedRoute from the cache.
      * Must be implemented.
@@ -67,7 +67,7 @@ export declare abstract class IRouteCachingProvider {
      * @param protocols
      * @protected
      */
-    protected abstract _getCachedRoute(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[]): Promise<CachedRoutes | undefined>;
+    protected abstract _getCachedRoute(chainId: ChainId, amount: CurrencyAmount<Currency>, quoteToken: Token, tradeType: TradeType, protocols: Protocol[], currentBlockNumber: number, optimistic: boolean): Promise<CachedRoutes | undefined>;
     /**
      * Internal function to insert the CachedRoute into cache.
      * Must be implemented.
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.js
index c788a30..5d776d8 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/caching/route/route-caching-provider.js
@@ -19,12 +19,12 @@ export class IRouteCachingProvider {
          * @param blockNumber
          */
         this.getCachedRoute = async (// Defined as a readonly member instead of a regular function to make it final.
-        chainId, amount, quoteToken, tradeType, protocols, blockNumber) => {
+        chainId, amount, quoteToken, tradeType, protocols, blockNumber, optimistic = false) => {
             if (await this.getCacheMode(chainId, amount, quoteToken, tradeType, protocols) == CacheMode.Darkmode) {
                 return undefined;
             }
-            const cachedRoute = await this._getCachedRoute(chainId, amount, quoteToken, tradeType, protocols);
-            return this.filterExpiredCachedRoutes(cachedRoute, blockNumber);
+            const cachedRoute = await this._getCachedRoute(chainId, amount, quoteToken, tradeType, protocols, blockNumber, optimistic);
+            return this.filterExpiredCachedRoutes(cachedRoute, blockNumber, optimistic);
         };
         /**
          * Final implementation of the public `setCachedRoute` method.
@@ -54,8 +54,8 @@ export class IRouteCachingProvider {
         const quoteToken = cachedRoutes.tradeType == TradeType.EXACT_INPUT ? cachedRoutes.tokenOut : cachedRoutes.tokenIn;
         return this.getCacheMode(cachedRoutes.chainId, amount, quoteToken, cachedRoutes.tradeType, cachedRoutes.protocolsCovered);
     }
-    filterExpiredCachedRoutes(cachedRoutes, blockNumber) {
-        return (cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.notExpired(blockNumber)) ? cachedRoutes : undefined;
+    filterExpiredCachedRoutes(cachedRoutes, blockNumber, optimistic) {
+        return (cachedRoutes === null || cachedRoutes === void 0 ? void 0 : cachedRoutes.notExpired(blockNumber, optimistic)) ? cachedRoutes : undefined;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtY2FjaGluZy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9yb3V0ZS1jYWNoaW5nLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLE9BQU8sRUFBNEMsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFeEYsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUdwQzs7O0dBR0c7QUFDSCxNQUFNLE9BQWdCLHFCQUFxQjtJQUEzQztRQUNFOzs7Ozs7Ozs7OztXQVdHO1FBQ2EsbUJBQWMsR0FBRyxLQUFLLEVBQUcsK0VBQStFO1FBQ3RILE9BQWUsRUFDZixNQUFnQyxFQUNoQyxVQUFpQixFQUNqQixTQUFvQixFQUNwQixTQUFxQixFQUNyQixXQUFtQixFQUNnQixFQUFFO1lBQ3JDLElBQUksTUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUMsSUFBSSxTQUFTLENBQUMsUUFBUSxFQUFFO2dCQUNwRyxPQUFPLFNBQVMsQ0FBQzthQUNsQjtZQUVELE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUM7WUFFbEcsT0FBTyxJQUFJLENBQUMseUJBQXlCLENBQUMsV0FBVyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1FBQ2xFLENBQUMsQ0FBQztRQUVGOzs7Ozs7OztXQVFHO1FBQ2EsbUJBQWMsR0FBRyxLQUFLLEVBQUcsK0VBQStFO1FBQ3RILFlBQTBCLEVBQzFCLE1BQWdDLEVBQ2QsRUFBRTtZQUNwQixJQUFJLE1BQU0sSUFBSSxDQUFDLDRCQUE0QixDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsSUFBSSxTQUFTLENBQUMsUUFBUSxFQUFFO2dCQUN2RixPQUFPLEtBQUssQ0FBQzthQUNkO1lBRUQsWUFBWSxDQUFDLFlBQVksR0FBRyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFFOUUsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNwRCxDQUFDLENBQUM7SUF3RkosQ0FBQztJQXRGQzs7Ozs7T0FLRztJQUNJLDRCQUE0QixDQUNqQyxZQUEwQixFQUMxQixNQUFnQztRQUVoQyxNQUFNLFVBQVUsR0FBRyxZQUFZLENBQUMsU0FBUyxJQUFJLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUM7UUFFbEgsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUN0QixZQUFZLENBQUMsT0FBTyxFQUNwQixNQUFNLEVBQ04sVUFBVSxFQUNWLFlBQVksQ0FBQyxTQUFTLEVBQ3RCLFlBQVksQ0FBQyxnQkFBZ0IsQ0FDOUIsQ0FBQztJQUNKLENBQUM7SUFxQk8seUJBQXlCLENBQy9CLFlBQXNDLEVBQ3RDLFdBQW1CO1FBRW5CLE9BQU8sQ0FBQSxZQUFZLGFBQVosWUFBWSx1QkFBWixZQUFZLENBQUUsVUFBVSxDQUFDLFdBQVcsQ0FBQyxFQUFDLENBQUMsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUMxRSxDQUFDO0NBeUNGIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGUtY2FjaGluZy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvY2FjaGluZy9yb3V0ZS9yb3V0ZS1jYWNoaW5nLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLE9BQU8sRUFBNEMsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFeEYsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUdwQzs7O0dBR0c7QUFDSCxNQUFNLE9BQWdCLHFCQUFxQjtJQUEzQztRQUNFOzs7Ozs7Ozs7OztXQVdHO1FBQ2EsbUJBQWMsR0FBRyxLQUFLLEVBQUcsK0VBQStFO1FBQ3RILE9BQWUsRUFDZixNQUFnQyxFQUNoQyxVQUFpQixFQUNqQixTQUFvQixFQUNwQixTQUFxQixFQUNyQixXQUFtQixFQUNuQixVQUFVLEdBQUcsS0FBSyxFQUNpQixFQUFFO1lBQ3JDLElBQUksTUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxTQUFTLENBQUMsSUFBSSxTQUFTLENBQUMsUUFBUSxFQUFFO2dCQUNwRyxPQUFPLFNBQVMsQ0FBQzthQUNsQjtZQUVELE1BQU0sV0FBVyxHQUFHLE1BQU0sSUFBSSxDQUFDLGVBQWUsQ0FDNUMsT0FBTyxFQUNQLE1BQU0sRUFDTixVQUFVLEVBQ1YsU0FBUyxFQUNULFNBQVMsRUFDVCxXQUFXLEVBQ1gsVUFBVSxDQUNYLENBQUM7WUFFRixPQUFPLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxXQUFXLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxDQUFDO1FBQzlFLENBQUMsQ0FBQztRQUVGOzs7Ozs7OztXQVFHO1FBQ2EsbUJBQWMsR0FBRyxLQUFLLEVBQUcsK0VBQStFO1FBQ3RILFlBQTBCLEVBQzFCLE1BQWdDLEVBQ2QsRUFBRTtZQUNwQixJQUFJLE1BQU0sSUFBSSxDQUFDLDRCQUE0QixDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsSUFBSSxTQUFTLENBQUMsUUFBUSxFQUFFO2dCQUN2RixPQUFPLEtBQUssQ0FBQzthQUNkO1lBRUQsWUFBWSxDQUFDLFlBQVksR0FBRyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUM7WUFFOUUsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLFlBQVksRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNwRCxDQUFDLENBQUM7SUEyRkosQ0FBQztJQXpGQzs7Ozs7T0FLRztJQUNJLDRCQUE0QixDQUNqQyxZQUEwQixFQUMxQixNQUFnQztRQUVoQyxNQUFNLFVBQVUsR0FBRyxZQUFZLENBQUMsU0FBUyxJQUFJLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUM7UUFFbEgsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUN0QixZQUFZLENBQUMsT0FBTyxFQUNwQixNQUFNLEVBQ04sVUFBVSxFQUNWLFlBQVksQ0FBQyxTQUFTLEVBQ3RCLFlBQVksQ0FBQyxnQkFBZ0IsQ0FDOUIsQ0FBQztJQUNKLENBQUM7SUFxQlMseUJBQXlCLENBQ2pDLFlBQXNDLEVBQ3RDLFdBQW1CLEVBQ25CLFVBQW1CO1FBRW5CLE9BQU8sQ0FBQSxZQUFZLGFBQVosWUFBWSx1QkFBWixZQUFZLENBQUUsVUFBVSxDQUFDLFdBQVcsRUFBRSxVQUFVLENBQUMsRUFBQyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDdEYsQ0FBQztDQTJDRiJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/index.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/index.d.ts
index 922a012..7973a3e 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/index.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/index.d.ts
@@ -3,6 +3,7 @@ export * from './cache-node';
 export * from './caching-gas-provider';
 export * from './caching-token-list-provider';
 export * from './caching-token-provider';
+export * from './caching/route';
 export * from './eip-1559-gas-price-provider';
 export * from './eth-estimate-gas-provider';
 export * from './eth-gas-station-info-gas-price-provider';
@@ -16,10 +17,10 @@ export * from './simulation-provider';
 export * from './static-gas-price-provider';
 export * from './swap-router-provider';
 export * from './tenderly-simulation-provider';
+export * from './token-properties-provider';
 export * from './token-provider';
 export * from './token-validator-provider';
 export * from './uri-subgraph-provider';
-export * from './caching/route';
 export * from './v2/caching-pool-provider';
 export * from './v2/caching-subgraph-provider';
 export * from './v2/pool-provider';
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/index.js b/node_modules/@uniswap/smart-order-router/build/module/providers/index.js
index a62c754..ba68f74 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/index.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/index.js
@@ -3,6 +3,7 @@ export * from './cache-node';
 export * from './caching-gas-provider';
 export * from './caching-token-list-provider';
 export * from './caching-token-provider';
+export * from './caching/route';
 export * from './eip-1559-gas-price-provider';
 export * from './eth-estimate-gas-provider';
 export * from './eth-gas-station-info-gas-price-provider';
@@ -16,10 +17,10 @@ export * from './simulation-provider';
 export * from './static-gas-price-provider';
 export * from './swap-router-provider';
 export * from './tenderly-simulation-provider';
+export * from './token-properties-provider';
 export * from './token-provider';
 export * from './token-validator-provider';
 export * from './uri-subgraph-provider';
-export * from './caching/route';
 export * from './v2/caching-pool-provider';
 export * from './v2/caching-subgraph-provider';
 export * from './v2/pool-provider';
@@ -35,4 +36,4 @@ export * from './v3/static-subgraph-provider';
 export * from './v3/subgraph-provider';
 export * from './v3/subgraph-provider-with-fallback';
 export * from './v3/uri-subgraph-provider';
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsU0FBUyxDQUFDO0FBQ3hCLGNBQWMsY0FBYyxDQUFDO0FBQzdCLGNBQWMsd0JBQXdCLENBQUM7QUFDdkMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLDBCQUEwQixDQUFDO0FBQ3pDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyw2QkFBNkIsQ0FBQztBQUM1QyxjQUFjLDJDQUEyQyxDQUFDO0FBQzFELGNBQWMsc0JBQXNCLENBQUM7QUFDckMsY0FBYyw2QkFBNkIsQ0FBQztBQUM1QyxjQUFjLHNCQUFzQixDQUFDO0FBQ3JDLGNBQWMsOEJBQThCLENBQUM7QUFDN0MsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLDJCQUEyQixDQUFDO0FBQzFDLGNBQWMsdUJBQXVCLENBQUM7QUFDdEMsY0FBYyw2QkFBNkIsQ0FBQztBQUM1QyxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyxrQkFBa0IsQ0FBQztBQUNqQyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMseUJBQXlCLENBQUM7QUFDeEMsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLHFCQUFxQixDQUFDO0FBQ3BDLGNBQWMsK0JBQStCLENBQUM7QUFDOUMsY0FBYyx3QkFBd0IsQ0FBQztBQUN2QyxjQUFjLHNDQUFzQyxDQUFDO0FBQ3JELGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLGdDQUFnQyxDQUFDO0FBQy9DLGNBQWMsb0JBQW9CLENBQUM7QUFDbkMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsc0NBQXNDLENBQUM7QUFDckQsY0FBYyw0QkFBNEIsQ0FBQyJ9
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsU0FBUyxDQUFDO0FBQ3hCLGNBQWMsY0FBYyxDQUFDO0FBQzdCLGNBQWMsd0JBQXdCLENBQUM7QUFDdkMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLDBCQUEwQixDQUFDO0FBQ3pDLGNBQWMsaUJBQWlCLENBQUM7QUFDaEMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsMkNBQTJDLENBQUM7QUFDMUQsY0FBYyxzQkFBc0IsQ0FBQztBQUNyQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsc0JBQXNCLENBQUM7QUFDckMsY0FBYyw4QkFBOEIsQ0FBQztBQUM3QyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsMkJBQTJCLENBQUM7QUFDMUMsY0FBYyx1QkFBdUIsQ0FBQztBQUN0QyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsd0JBQXdCLENBQUM7QUFDdkMsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLDZCQUE2QixDQUFDO0FBQzVDLGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLHlCQUF5QixDQUFDO0FBQ3hDLGNBQWMsNEJBQTRCLENBQUM7QUFDM0MsY0FBYyxnQ0FBZ0MsQ0FBQztBQUMvQyxjQUFjLG9CQUFvQixDQUFDO0FBQ25DLGNBQWMscUJBQXFCLENBQUM7QUFDcEMsY0FBYywrQkFBK0IsQ0FBQztBQUM5QyxjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsc0NBQXNDLENBQUM7QUFDckQsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLDRCQUE0QixDQUFDO0FBQzNDLGNBQWMsZ0NBQWdDLENBQUM7QUFDL0MsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLCtCQUErQixDQUFDO0FBQzlDLGNBQWMsd0JBQXdCLENBQUM7QUFDdkMsY0FBYyxzQ0FBc0MsQ0FBQztBQUNyRCxjQUFjLDRCQUE0QixDQUFDIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.js
index f14fe5a..f755c53 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/on-chain-quote-provider.js
@@ -8,7 +8,7 @@ import stats from 'stats-lite';
 import { V2Route } from '../routers/router';
 import { IMixedRouteQuoterV1__factory } from '../types/other/factories/IMixedRouteQuoterV1__factory';
 import { IQuoterV2__factory } from '../types/v3/factories/IQuoterV2__factory';
-import { metric, MetricLoggerUnit } from '../util';
+import { ID_TO_NETWORK_NAME, metric, MetricLoggerUnit } from '../util';
 import { MIXED_ROUTE_QUOTER_V1_ADDRESSES, QUOTER_V2_ADDRESSES, } from '../util/addresses';
 import { log } from '../util/log';
 import { routeToString } from '../util/routes';
@@ -180,6 +180,8 @@ export class OnChainQuoteProvider {
         log.info(`About to get ${inputs.length} quotes in chunks of ${normalizedChunk} [${_.map(inputsChunked, (i) => i.length).join(',')}] ${gasLimitOverride
             ? `with a gas limit override of ${gasLimitOverride}`
             : ''} and block number: ${await providerConfig.blockNumber} [Original before offset: ${originalBlockNumber}].`);
+        metric.putMetric('QuoteBatchSize', inputs.length, MetricLoggerUnit.Count);
+        metric.putMetric(`QuoteBatchSize_${ID_TO_NETWORK_NAME(this.chainId)}`, inputs.length, MetricLoggerUnit.Count);
         let haveRetriedForSuccessRate = false;
         let haveRetriedForBlockHeader = false;
         let blockHeaderRetryAttemptNumber = 0;
@@ -514,4 +516,4 @@ export class OnChainQuoteProvider {
         }
     }
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/provider.d.ts
index 0eb6800..b5d6208 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/provider.d.ts
@@ -1,8 +1,11 @@
+import { BigNumber } from '@ethersproject/bignumber';
 export declare type ProviderConfig = {
     /**
      * The block number to use when getting data on-chain.
      */
     blockNumber?: number | Promise<number>;
+    additionalGasOverhead?: BigNumber;
+    debugRouting?: boolean;
 };
 export declare type LocalCacheEntry<T> = {
     entry: T;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.d.ts
new file mode 100644
index 0000000..6fdb25a
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.d.ts
@@ -0,0 +1,28 @@
+import { BigNumber } from '@ethersproject/bignumber';
+import { BaseProvider } from '@ethersproject/providers';
+import { ChainId } from '@uniswap/sdk-core';
+import { ProviderConfig } from './provider';
+export declare const DEFAULT_TOKEN_FEE_RESULT: {
+    buyFeeBps: BigNumber;
+    sellFeeBps: BigNumber;
+};
+declare type Address = string;
+export declare type TokenFeeResult = {
+    buyFeeBps?: BigNumber;
+    sellFeeBps?: BigNumber;
+};
+export declare type TokenFeeMap = Record<Address, TokenFeeResult>;
+export interface ITokenFeeFetcher {
+    fetchFees(addresses: Address[], providerConfig?: ProviderConfig): Promise<TokenFeeMap>;
+}
+export declare class OnChainTokenFeeFetcher implements ITokenFeeFetcher {
+    private chainId;
+    private tokenFeeAddress;
+    private gasLimitPerCall;
+    private amountToFlashBorrow;
+    private BASE_TOKEN;
+    private readonly contract;
+    constructor(chainId: ChainId, rpcProvider: BaseProvider, tokenFeeAddress?: string, gasLimitPerCall?: number, amountToFlashBorrow?: string);
+    fetchFees(addresses: Address[], providerConfig?: ProviderConfig): Promise<TokenFeeMap>;
+}
+export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.js b/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.js
new file mode 100644
index 0000000..a1bb098
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-fee-fetcher.js
@@ -0,0 +1,69 @@
+import { BigNumber } from '@ethersproject/bignumber';
+import { ChainId } from '@uniswap/sdk-core';
+import { TokenFeeDetector__factory } from '../types/other/factories/TokenFeeDetector__factory';
+import { log, WRAPPED_NATIVE_CURRENCY } from '../util';
+const DEFAULT_TOKEN_BUY_FEE_BPS = BigNumber.from(0);
+const DEFAULT_TOKEN_SELL_FEE_BPS = BigNumber.from(0);
+// on detector failure, assume no fee
+export const DEFAULT_TOKEN_FEE_RESULT = {
+    buyFeeBps: DEFAULT_TOKEN_BUY_FEE_BPS,
+    sellFeeBps: DEFAULT_TOKEN_SELL_FEE_BPS,
+};
+// address at which the FeeDetector lens is deployed
+const FEE_DETECTOR_ADDRESS = (chainId) => {
+    switch (chainId) {
+        case ChainId.MAINNET:
+        default:
+            return '0x19C97dc2a25845C7f9d1d519c8C2d4809c58b43f';
+    }
+};
+// Amount has to be big enough to avoid rounding errors, but small enough that
+// most v2 pools will have at least this many token units
+// 10000 is the smallest number that avoids rounding errors in bps terms
+const AMOUNT_TO_FLASH_BORROW = '10000';
+// 1M gas limit per validate call, should cover most swap cases
+const GAS_LIMIT_PER_VALIDATE = 1000000;
+export class OnChainTokenFeeFetcher {
+    constructor(chainId, rpcProvider, tokenFeeAddress = FEE_DETECTOR_ADDRESS(chainId), gasLimitPerCall = GAS_LIMIT_PER_VALIDATE, amountToFlashBorrow = AMOUNT_TO_FLASH_BORROW) {
+        var _a;
+        this.chainId = chainId;
+        this.tokenFeeAddress = tokenFeeAddress;
+        this.gasLimitPerCall = gasLimitPerCall;
+        this.amountToFlashBorrow = amountToFlashBorrow;
+        this.BASE_TOKEN = (_a = WRAPPED_NATIVE_CURRENCY[this.chainId]) === null || _a === void 0 ? void 0 : _a.address;
+        this.contract = TokenFeeDetector__factory.connect(this.tokenFeeAddress, rpcProvider);
+    }
+    async fetchFees(addresses, providerConfig) {
+        const tokenToResult = {};
+        const functionParams = addresses.map((address) => [
+            address,
+            this.BASE_TOKEN,
+            this.amountToFlashBorrow,
+        ]);
+        const results = await Promise.all(functionParams.map(async ([address, baseToken, amountToBorrow]) => {
+            try {
+                // We use the validate function instead of batchValidate to avoid poison pill problem.
+                // One token that consumes too much gas could cause the entire batch to fail.
+                const feeResult = await this.contract.callStatic.validate(address, baseToken, amountToBorrow, {
+                    gasLimit: this.gasLimitPerCall,
+                    blockTag: providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber,
+                });
+                return { address, ...feeResult };
+            }
+            catch (err) {
+                log.error({ err }, `Error calling validate on-chain for token ${address}`);
+                // in case of FOT token fee fetch failure, we return null
+                // so that they won't get returned from the token-fee-fetcher
+                // and thus no fee will be applied, and the cache won't cache on FOT tokens with failed fee fetching
+                return { address, buyFeeBps: undefined, sellFeeBps: undefined };
+            }
+        }));
+        results.forEach(({ address, buyFeeBps, sellFeeBps }) => {
+            if (buyFeeBps || sellFeeBps) {
+                tokenToResult[address] = { buyFeeBps, sellFeeBps };
+            }
+        });
+        return tokenToResult;
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tZmVlLWZldGNoZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3Rva2VuLWZlZS1mZXRjaGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUVyRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFNUMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFFL0YsT0FBTyxFQUFFLEdBQUcsRUFBRSx1QkFBdUIsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUl2RCxNQUFNLHlCQUF5QixHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDcEQsTUFBTSwwQkFBMEIsR0FBRyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBRXJELHFDQUFxQztBQUNyQyxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRztJQUN0QyxTQUFTLEVBQUUseUJBQXlCO0lBQ3BDLFVBQVUsRUFBRSwwQkFBMEI7Q0FDdkMsQ0FBQztBQVVGLG9EQUFvRDtBQUNwRCxNQUFNLG9CQUFvQixHQUFHLENBQUMsT0FBZ0IsRUFBRSxFQUFFO0lBQ2hELFFBQVEsT0FBTyxFQUFFO1FBQ2YsS0FBSyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3JCO1lBQ0UsT0FBTyw0Q0FBNEMsQ0FBQztLQUN2RDtBQUNILENBQUMsQ0FBQztBQUVGLDhFQUE4RTtBQUM5RSx5REFBeUQ7QUFDekQsd0VBQXdFO0FBQ3hFLE1BQU0sc0JBQXNCLEdBQUcsT0FBTyxDQUFDO0FBQ3ZDLCtEQUErRDtBQUMvRCxNQUFNLHNCQUFzQixHQUFHLE9BQVMsQ0FBQztBQVN6QyxNQUFNLE9BQU8sc0JBQXNCO0lBSWpDLFlBQ1UsT0FBZ0IsRUFDeEIsV0FBeUIsRUFDakIsa0JBQWtCLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxFQUMvQyxrQkFBa0Isc0JBQXNCLEVBQ3hDLHNCQUFzQixzQkFBc0I7O1FBSjVDLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFFaEIsb0JBQWUsR0FBZixlQUFlLENBQWdDO1FBQy9DLG9CQUFlLEdBQWYsZUFBZSxDQUF5QjtRQUN4Qyx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXlCO1FBRXBELElBQUksQ0FBQyxVQUFVLEdBQUcsTUFBQSx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLDBDQUFFLE9BQU8sQ0FBQztRQUNqRSxJQUFJLENBQUMsUUFBUSxHQUFHLHlCQUF5QixDQUFDLE9BQU8sQ0FDL0MsSUFBSSxDQUFDLGVBQWUsRUFDcEIsV0FBVyxDQUNaLENBQUM7SUFDSixDQUFDO0lBRU0sS0FBSyxDQUFDLFNBQVMsQ0FDcEIsU0FBb0IsRUFDcEIsY0FBK0I7UUFFL0IsTUFBTSxhQUFhLEdBQWdCLEVBQUUsQ0FBQztRQUV0QyxNQUFNLGNBQWMsR0FBRyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQztZQUNoRCxPQUFPO1lBQ1AsSUFBSSxDQUFDLFVBQVU7WUFDZixJQUFJLENBQUMsbUJBQW1CO1NBQ3pCLENBQStCLENBQUM7UUFFakMsTUFBTSxPQUFPLEdBQUcsTUFBTSxPQUFPLENBQUMsR0FBRyxDQUMvQixjQUFjLENBQUMsR0FBRyxDQUFDLEtBQUssRUFBRSxDQUFDLE9BQU8sRUFBRSxTQUFTLEVBQUUsY0FBYyxDQUFDLEVBQUUsRUFBRTtZQUNoRSxJQUFJO2dCQUNGLHNGQUFzRjtnQkFDdEYsNkVBQTZFO2dCQUM3RSxNQUFNLFNBQVMsR0FBRyxNQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FDdkQsT0FBTyxFQUNQLFNBQVMsRUFDVCxjQUFjLEVBQ2Q7b0JBQ0UsUUFBUSxFQUFFLElBQUksQ0FBQyxlQUFlO29CQUM5QixRQUFRLEVBQUUsY0FBYyxhQUFkLGNBQWMsdUJBQWQsY0FBYyxDQUFFLFdBQVc7aUJBQ3RDLENBQ0YsQ0FBQztnQkFDRixPQUFPLEVBQUUsT0FBTyxFQUFFLEdBQUcsU0FBUyxFQUFFLENBQUM7YUFDbEM7WUFBQyxPQUFPLEdBQUcsRUFBRTtnQkFDWixHQUFHLENBQUMsS0FBSyxDQUNQLEVBQUUsR0FBRyxFQUFFLEVBQ1AsNkNBQTZDLE9BQU8sRUFBRSxDQUN2RCxDQUFDO2dCQUNGLHlEQUF5RDtnQkFDekQsNkRBQTZEO2dCQUM3RCxvR0FBb0c7Z0JBQ3BHLE9BQU8sRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLENBQUM7YUFDakU7UUFDSCxDQUFDLENBQUMsQ0FDSCxDQUFDO1FBRUYsT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsRUFBRSxFQUFFO1lBQ3JELElBQUksU0FBUyxJQUFJLFVBQVUsRUFBRTtnQkFDM0IsYUFBYSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxDQUFDO2FBQ3BEO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLGFBQWEsQ0FBQztJQUN2QixDQUFDO0NBQ0YifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.d.ts
new file mode 100644
index 0000000..b2e92c0
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.d.ts
@@ -0,0 +1,27 @@
+import { ChainId, Token } from '@uniswap/sdk-core';
+import { ICache } from './cache';
+import { ProviderConfig } from './provider';
+import { ITokenFeeFetcher, TokenFeeResult } from './token-fee-fetcher';
+import { ITokenValidatorProvider, TokenValidationResult } from './token-validator-provider';
+export declare const DEFAULT_TOKEN_PROPERTIES_RESULT: TokenPropertiesResult;
+declare type Address = string;
+export declare type TokenPropertiesResult = {
+    tokenFeeResult?: TokenFeeResult;
+    tokenValidationResult?: TokenValidationResult;
+};
+export declare type TokenPropertiesMap = Record<Address, TokenPropertiesResult>;
+export interface ITokenPropertiesProvider {
+    getTokensProperties(tokens: Token[], providerConfig?: ProviderConfig): Promise<TokenPropertiesMap>;
+}
+export declare class TokenPropertiesProvider implements ITokenPropertiesProvider {
+    private chainId;
+    private tokenValidatorProvider;
+    private tokenPropertiesCache;
+    private tokenFeeFetcher;
+    private allowList;
+    private CACHE_KEY;
+    constructor(chainId: ChainId, tokenValidatorProvider: ITokenValidatorProvider, tokenPropertiesCache: ICache<TokenPropertiesResult>, tokenFeeFetcher: ITokenFeeFetcher, allowList?: Set<string>);
+    getTokensProperties(tokens: Token[], providerConfig?: ProviderConfig): Promise<TokenPropertiesMap>;
+    private buildAddressesRaw;
+}
+export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.js
new file mode 100644
index 0000000..d9df7c8
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-properties-provider.js
@@ -0,0 +1,88 @@
+import { log } from '../util';
+import { DEFAULT_TOKEN_FEE_RESULT, } from './token-fee-fetcher';
+import { DEFAULT_ALLOWLIST, TokenValidationResult, } from './token-validator-provider';
+export const DEFAULT_TOKEN_PROPERTIES_RESULT = {
+    tokenFeeResult: DEFAULT_TOKEN_FEE_RESULT,
+};
+export class TokenPropertiesProvider {
+    constructor(chainId, tokenValidatorProvider, tokenPropertiesCache, tokenFeeFetcher, allowList = DEFAULT_ALLOWLIST) {
+        this.chainId = chainId;
+        this.tokenValidatorProvider = tokenValidatorProvider;
+        this.tokenPropertiesCache = tokenPropertiesCache;
+        this.tokenFeeFetcher = tokenFeeFetcher;
+        this.allowList = allowList;
+        this.CACHE_KEY = (chainId, address) => `token-properties-${chainId}-${address}`;
+    }
+    async getTokensProperties(tokens, providerConfig) {
+        var _a;
+        const nonAllowlistTokens = tokens.filter((token) => !this.allowList.has(token.address.toLowerCase()));
+        const tokenValidationResults = await this.tokenValidatorProvider.validateTokens(nonAllowlistTokens, providerConfig);
+        const tokenToResult = {};
+        tokens.forEach((token) => {
+            if (this.allowList.has(token.address.toLowerCase())) {
+                // if the token is in the allowlist, make it UNKNOWN so that we don't fetch the FOT fee on-chain
+                tokenToResult[token.address.toLowerCase()] = {
+                    tokenValidationResult: TokenValidationResult.UNKN,
+                };
+            }
+            else {
+                tokenToResult[token.address.toLowerCase()] = {
+                    tokenValidationResult: tokenValidationResults.getValidationByToken(token),
+                };
+            }
+        });
+        const addressesToFetchFeesOnchain = [];
+        const addressesRaw = this.buildAddressesRaw(tokens);
+        const tokenProperties = await this.tokenPropertiesCache.batchGet(addressesRaw);
+        // Check if we have cached token validation results for any tokens.
+        for (const address of addressesRaw) {
+            const cachedValue = tokenProperties[address];
+            if (cachedValue) {
+                tokenToResult[address] = cachedValue;
+            }
+            else if (((_a = tokenToResult[address]) === null || _a === void 0 ? void 0 : _a.tokenValidationResult) ===
+                TokenValidationResult.FOT) {
+                addressesToFetchFeesOnchain.push(address);
+            }
+        }
+        if (addressesToFetchFeesOnchain.length > 0) {
+            let tokenFeeMap = {};
+            try {
+                tokenFeeMap = await this.tokenFeeFetcher.fetchFees(addressesToFetchFeesOnchain, providerConfig);
+            }
+            catch (err) {
+                log.error({ err }, `Error fetching fees for tokens ${addressesToFetchFeesOnchain}`);
+            }
+            await Promise.all(addressesToFetchFeesOnchain.map((address) => {
+                const tokenFee = tokenFeeMap[address];
+                if (tokenFee && (tokenFee.buyFeeBps || tokenFee.sellFeeBps)) {
+                    const tokenResultForAddress = tokenToResult[address];
+                    if (tokenResultForAddress) {
+                        tokenResultForAddress.tokenFeeResult = tokenFee;
+                    }
+                    // update cache concurrently
+                    // at this point, we are confident that the tokens are FOT, so we can hardcode the validation result
+                    return this.tokenPropertiesCache.set(this.CACHE_KEY(this.chainId, address), {
+                        tokenFeeResult: tokenFee,
+                        tokenValidationResult: TokenValidationResult.FOT,
+                    });
+                }
+                else {
+                    return Promise.resolve(true);
+                }
+            }));
+        }
+        return tokenToResult;
+    }
+    buildAddressesRaw(tokens) {
+        const addressesRaw = new Set();
+        for (const token of tokens) {
+            const address = token.address.toLowerCase();
+            if (!addressesRaw.has(address)) {
+                addressesRaw.add(address);
+            }
+        }
+        return addressesRaw;
+    }
+}
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tcHJvcGVydGllcy1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdG9rZW4tcHJvcGVydGllcy1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBRzlCLE9BQU8sRUFDTCx3QkFBd0IsR0FJekIsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQ0wsaUJBQWlCLEVBRWpCLHFCQUFxQixHQUN0QixNQUFNLDRCQUE0QixDQUFDO0FBRXBDLE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUEwQjtJQUNwRSxjQUFjLEVBQUUsd0JBQXdCO0NBQ3pDLENBQUM7QUFnQkYsTUFBTSxPQUFPLHVCQUF1QjtJQUlsQyxZQUNVLE9BQWdCLEVBQ2hCLHNCQUErQyxFQUMvQyxvQkFBbUQsRUFDbkQsZUFBaUMsRUFDakMsWUFBWSxpQkFBaUI7UUFKN0IsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQiwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXlCO1FBQy9DLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBK0I7UUFDbkQsb0JBQWUsR0FBZixlQUFlLENBQWtCO1FBQ2pDLGNBQVMsR0FBVCxTQUFTLENBQW9CO1FBUi9CLGNBQVMsR0FBRyxDQUFDLE9BQWdCLEVBQUUsT0FBZSxFQUFFLEVBQUUsQ0FDeEQsb0JBQW9CLE9BQU8sSUFBSSxPQUFPLEVBQUUsQ0FBQztJQVF4QyxDQUFDO0lBRUcsS0FBSyxDQUFDLG1CQUFtQixDQUM5QixNQUFlLEVBQ2YsY0FBK0I7O1FBRS9CLE1BQU0sa0JBQWtCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FDdEMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUM1RCxDQUFD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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.d.ts
index ee243bc..f0d4619 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.d.ts
@@ -78,6 +78,7 @@ export declare const CEUR_CELO_ALFAJORES: Token;
 export declare const DAI_AVAX: Token;
 export declare const USDC_AVAX: Token;
 export declare const USDC_BASE: Token;
+export declare const USDT_TENET: Token;
 export declare const USDC_BASE_GOERLI: Token;
 export declare const USDC_ETHEREUM_GNOSIS: Token;
 export declare const WXDAI_GNOSIS: Token;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js
index 3b1efd9..9c6d99b 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-provider.js
@@ -70,6 +70,8 @@ export const DAI_AVAX = new Token(ChainId.AVALANCHE, '0xd586E7F844cEa2F87f501526
 export const USDC_AVAX = new Token(ChainId.AVALANCHE, '0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E', 6, 'USDC', 'USDC Token');
 // Base Tokens
 export const USDC_BASE = new Token(ChainId.BASE, '0xd9aAEc86B65D86f6A7B5B1b0c42FFA531710b6CA', 6, 'USDbC', 'USD Base Coin');
+// Base Tokens
+export const USDT_TENET = new Token(ChainId.TENET, '0x205022527f77800161685bC00a61473CcFa54C35', 6, 'USDT', 'USDT TENET');
 // Base Goerli Tokens 
 export const USDC_BASE_GOERLI = new Token(ChainId.BASE_GOERLI, '0x853154e2A5604E5C74a2546E2871Ad44932eB92C', 6, 'USDbC', 'USD Base Coin');
 // Gnosis Tokens
@@ -280,4 +282,4 @@ export const USDC_ON = (chainId) => {
 export const WNATIVE_ON = (chainId) => {
     return WRAPPED_NATIVE_CURRENCY[chainId];
 };
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-validator-provider.d.ts b/node_modules/@uniswap/smart-order-router/build/module/providers/token-validator-provider.d.ts
index 5103c6a..3c0c171 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-validator-provider.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-validator-provider.d.ts
@@ -2,6 +2,7 @@ import { ChainId, Token } from '@uniswap/sdk-core';
 import { ICache } from './cache';
 import { IMulticallProvider } from './multicall-provider';
 import { ProviderConfig } from './provider';
+export declare const DEFAULT_ALLOWLIST: Set<string>;
 export declare enum TokenValidationResult {
     UNKN = 0,
     FOT = 1,
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/token-validator-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/token-validator-provider.js
index 67cf0bb..5598a4b 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/token-validator-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/token-validator-provider.js
@@ -1,7 +1,7 @@
 import _ from 'lodash';
 import { ITokenValidator__factory } from '../types/other/factories/ITokenValidator__factory';
 import { log, WRAPPED_NATIVE_CURRENCY } from '../util';
-const DEFAULT_ALLOWLIST = new Set([
+export const DEFAULT_ALLOWLIST = new Set([
     // RYOSHI. Does not allow transfers between contracts so fails validation.
     '0x777E2ae845272a2F540ebf6a3D03734A5a8f618e'.toLowerCase(),
 ]);
@@ -85,4 +85,4 @@ export class TokenValidatorProvider {
         };
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tdmFsaWRhdG9yLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy90b2tlbi12YWxpZGF0b3ItcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQzdGLE9BQU8sRUFBRSxHQUFHLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFNdkQsTUFBTSxpQkFBaUIsR0FBRyxJQUFJLEdBQUcsQ0FBUztJQUN4QywwRUFBMEU7SUFDMUUsNENBQTRDLENBQUMsV0FBVyxFQUFFO0NBQzNELENBQUMsQ0FBQztBQUVILE1BQU0sQ0FBTixJQUFZLHFCQUlYO0FBSkQsV0FBWSxxQkFBcUI7SUFDL0IsaUVBQVEsQ0FBQTtJQUNSLCtEQUFPLENBQUE7SUFDUCwrREFBTyxDQUFBO0FBQ1QsQ0FBQyxFQUpXLHFCQUFxQixLQUFyQixxQkFBcUIsUUFJaEM7QUFNRCxNQUFNLHVCQUF1QixHQUFHLDRDQUE0QyxDQUFDO0FBQzdFLE1BQU0sc0JBQXNCLEdBQUcsTUFBTSxDQUFDO0FBQ3RDLE1BQU0sc0JBQXNCLEdBQUcsT0FBUyxDQUFDO0FBc0J6QyxNQUFNLE9BQU8sc0JBQXNCO0lBTWpDLFlBQ1ksT0FBZ0IsRUFDaEIsa0JBQXNDLEVBQ3hDLG9CQUFtRCxFQUNuRCx3QkFBd0IsdUJBQXVCLEVBQy9DLGtCQUFrQixzQkFBc0IsRUFDeEMsc0JBQXNCLHNCQUFzQixFQUM1QyxZQUFZLGlCQUFpQjtRQU4zQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDeEMseUJBQW9CLEdBQXBCLG9CQUFvQixDQUErQjtRQUNuRCwwQkFBcUIsR0FBckIscUJBQXFCLENBQTBCO1FBQy9DLG9CQUFlLEdBQWYsZUFBZSxD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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9rZW4tdmFsaWRhdG9yLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy90b2tlbi12YWxpZGF0b3ItcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQzdGLE9BQU8sRUFBRSxHQUFHLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFNdkQsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsSUFBSSxHQUFHLENBQVM7SUFDL0MsMEVBQTBFO0lBQzFFLDRDQUE0QyxDQUFDLFdBQVcsRUFBRTtDQUMzRCxDQUFDLENBQUM7QUFFSCxNQUFNLENBQU4sSUFBWSxxQkFJWDtBQUpELFdBQVkscUJBQXFCO0lBQy9CLGlFQUFRLENBQUE7SUFDUiwrREFBTyxDQUFBO0lBQ1AsK0RBQU8sQ0FBQTtBQUNULENBQUMsRUFKVyxxQkFBcUIsS0FBckIscUJBQXFCLFFBSWhDO0FBTUQsTUFBTSx1QkFBdUIsR0FBRyw0Q0FBNEMsQ0FBQztBQUM3RSxNQUFNLHNCQUFzQixHQUFHLE1BQU0sQ0FBQztBQUN0QyxNQUFNLHNCQUFzQixHQUFHLE9BQVMsQ0FBQztBQXNCekMsTUFBTSxPQUFPLHNCQUFzQjtJQU1qQyxZQUNZLE9BQWdCLEVBQ2hCLGtCQUFzQyxFQUN4QyxvQkFBbUQsRUFDbkQsd0JBQXdCLHVCQUF1QixFQUMvQyxrQkFBa0Isc0JBQXNCLEVBQ3hDLHNCQUFzQixzQkFBc0IsRUFDNUMsWUFBWSxpQkFBaUI7UUFOM0IsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNoQix1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO1FBQ3hDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBK0I7UUFDbkQsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUEwQjtRQUMvQyxvQkFBZSxH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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-pool-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-pool-provider.js
index 98520c4..ce6b0d1 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-pool-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/caching-pool-provider.js
@@ -58,7 +58,8 @@ export class CachingV2PoolProvider {
                 const pool = poolAccessor.getPoolByAddress(address);
                 if (pool) {
                     poolAddressToPool[address] = pool;
-                    await this.cache.set(this.POOL_KEY(this.chainId, address), {
+                    // We don't want to wait for this caching to complete before returning the pools.
+                    this.cache.set(this.POOL_KEY(this.chainId, address), {
                         pair: pool,
                         block: blockNumber,
                     });
@@ -78,4 +79,4 @@ export class CachingV2PoolProvider {
         return this.poolProvider.getPoolAddress(tokenA, tokenB);
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1wb29sLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9jYWNoaW5nLXBvb2wtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQU1yQzs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTyxxQkFBcUI7SUFJaEM7Ozs7O09BS0c7SUFDSCxZQUNZLE9BQWdCLEVBQ2hCLFlBQTZCO0lBQ3ZDLDZGQUE2RjtJQUM3RiwrQkFBK0I7SUFDL0IsNEZBQTRGO0lBQ3BGLEtBQTZDO1FBTDNDLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsaUJBQVksR0FBWixZQUFZLENBQWlCO1FBSS9CLFVBQUssR0FBTCxLQUFLLENBQXdDO1FBZi9DLGFBQVEsR0FBRyxDQUFDLE9BQWdCLEVBQUUsT0FBZSxFQUFFLEVBQUUsQ0FDdkQsUUFBUSxPQUFPLElBQUksT0FBTyxFQUFFLENBQUM7SUFlNUIsQ0FBQztJQUVHLEtBQUssQ0FBQyxRQUFRLENBQ25CLFVBQTRCLEVBQzVCLGNBQStCO1FBRS9CLE1BQU0sY0FBYyxHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ3RELE1BQU0sb0JBQW9CLEdBQTBCLEVBQUUsQ0FBQztRQUN2RCxNQUFNLG1CQUFtQixHQUFhLEVBQUUsQ0FBQztRQUN6QyxNQUFNLGlCQUFpQixHQUFvQyxFQUFFLENBQUM7UUFFOUQsTUFBTSxXQUFXLEdBQUcsTUFBTSxDQUFBLGNBQWMsYUFBZCxjQUFjLHVCQUFkLGNBQWMsQ0FBRSxXQUFXLENBQUEsQ0FBQztRQUV0RCxLQUFLLE1BQU0sQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLElBQUksVUFBVSxFQUFFO1lBQ3pDLE1BQU0sRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQ3pELE1BQU0sRUFDTixNQUFNLENBQ1AsQ0FBQztZQUVGLElBQUksY0FBYyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsRUFBRTtnQkFDbkMsU0FBUzthQUNWO1lBRUQsY0FBYyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUVoQyxNQUFNLFVBQVUsR0FBRyxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUNyQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsV0FBVyxDQUFDLENBQ3pDLENBQUM7WUFFRixJQUFJLFVBQVUsRUFBRTtnQkFDZCwwRkFBMEY7Z0JBQzFGLDRGQUE0RjtnQkFDNUYsU0FBUztnQkFDVCxJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsV0FBVyxJQUFJLFVBQVUsQ0FBQyxLQUFLLElBQUksV0FBVyxDQUFDLEVBQUU7b0JBQ3BFLGlCQUFpQixDQUFDLFdBQVcsQ0FBQyxHQUFHLFVBQVUsQ0FBQyxJQUFJLENBQUM7b0JBQ2pELFNBQVM7aUJBQ1Y7YUFDRjtZQUVELG9CQUFvQixDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO1lBQzVDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUN2QztRQUVELEdBQUcsQ0FBQyxJQUFJLENBQ047WUFDRSxVQUFVLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FDZixNQUFNLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEVBQ2hDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxHQUFHLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQy9DO1lBQ0Qsb0JBQW9CLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FDekIsb0JBQW9CLEVBQ3BCLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUN2QztTQUNGLEVBQ0QsU0FDRSxNQUFNLENBQUMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsTUFDakMsOENBQThDLFdBQVcsK0JBQ3ZELG9CQUFvQixDQUFDLE1BQ3ZCLFNBQVMsQ0FDVixDQUFDO1FBRUYsSUFBSSxtQkFBbUIsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQ2xDLE1BQU0sWUFBWSxHQUFHLE1BQU0sSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQ25ELG9CQUFvQixFQUNwQixjQUFjLENBQ2YsQ0FBQztZQUNGLEtBQUssTUFBTSxPQUFPLElBQUksbUJBQW1CLEVBQUU7Z0JBQ3pDLE1BQU0sSUFBSSxHQUFHLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDcEQsSUFBSSxJQUFJLEVBQUU7b0JBQ1IsaUJBQWlCLENBQUMsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFDO29CQUNsQyxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsRUFBRTt3QkFDekQsSUFBSSxFQUFFLElBQUk7d0JBQ1YsS0FBSyxFQUFFLFdBQVc7cUJBQ25CLENBQUMsQ0FBQztpQkFDSjthQUNGO1NBQ0Y7UUFFRCxPQUFPO1lBQ0wsT0FBTyxFQUFFLENBQUMsTUFBYSxFQUFFLE1BQWEsRUFBb0IsRUFBRTtnQkFDMUQsTUFBTSxFQUFFLFdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO2dCQUM1RCxPQUFPLGlCQUFpQixDQUFDLFdBQVcsQ0FBQyxDQUFDO1lBQ3hDLENBQUM7WUFDRCxnQkFBZ0IsRUFBRSxDQUFDLE9BQWUsRUFBb0IsRUFBRSxDQUN0RCxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7WUFDNUIsV0FBVyxFQUFFLEdBQVcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsaUJBQWlCLENBQUM7U0FDNUQsQ0FBQztJQUNKLENBQUM7SUFFTSxjQUFjLENBQ25CLE1BQWEsRUFDYixNQUFhO1FBRWIsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDMUQsQ0FBQztDQUNGIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1wb29sLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9jYWNoaW5nLXBvb2wtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQU1yQzs7Ozs7R0FLRztBQUNILE1BQU0sT0FBTyxxQkFBcUI7SUFJaEM7Ozs7O09BS0c7SUFDSCxZQUNZLE9BQWdCLEVBQ2hCLFlBQTZCO0lBQ3ZDLDZGQUE2RjtJQUM3RiwrQkFBK0I7SUFDL0IsNEZBQTRGO0lBQ3BGLEtBQTZDO1FBTDNDLFlBQU8sR0FBUCxPQUFPLENBQVM7UUFDaEIsaUJBQVksR0FBWixZQUFZLENBQWlCO1FBSS9CLFVBQUssR0FBTCxLQUFLLENBQXdDO1FBZi9DLGFBQVEsR0FBRyxDQUFDLE9BQWdCLEVBQUUsT0FBZSxFQUFFLEVBQUUsQ0FDdkQsUUFBUSxPQUFPLElBQUksT0FBTyxFQUFFLENBQUM7SUFnQi9CLENBQUM7SUFFTSxLQUFLLENBQUMsUUFBUSxDQUNuQixVQUE0QixFQUM1QixjQUErQjtRQUUvQixNQUFNLGNBQWMsR0FBZ0IsSUFBSSxHQUFHLEVBQVUsQ0FBQztRQUN0RCxNQUFNLG9CQUFvQixHQUEwQixFQUFFLENBQUM7UUFDdkQsTUFBTSxtQkFBbUIsR0FBYSxFQUFFLENBQUM7UUFDekMsTUFBTSxpQkFBaUIsR0FBb0MsRUFBRSxDQUFDO1FBRTlELE1BQU0sV0FBVyxHQUFHLE1BQU0sQ0FBQSxjQUFjLGFBQWQsY0FBYyx1QkFBZCxjQUFjLENBQUUsV0FBVyxDQUFBLENBQUM7UUFFdEQsS0FBSyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxJQUFJLFVBQVUsRUFBRTtZQUN6QyxNQUFNLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUs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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/pool-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/pool-provider.js
index 51eb622..08f4a96 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/pool-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/pool-provider.js
@@ -2,7 +2,7 @@ import { Pair } from '@uniswap/v2-sdk';
 import retry from 'async-retry';
 import _ from 'lodash';
 import { IUniswapV2Pair__factory } from '../../types/v2/factories/IUniswapV2Pair__factory';
-import { CurrencyAmount, metric, MetricLoggerUnit } from '../../util';
+import { CurrencyAmount, ID_TO_NETWORK_NAME, metric, MetricLoggerUnit } from '../../util';
 import { log } from '../../util/log';
 import { poolToString } from '../../util/routes';
 export class V2PoolProvider {
@@ -40,6 +40,8 @@ export class V2PoolProvider {
         }
         log.debug(`getPools called with ${tokenPairs.length} token pairs. Deduped down to ${poolAddressSet.size}`);
         metric.putMetric('V2_RPC_POOL_RPC_CALL', 1, MetricLoggerUnit.None);
+        metric.putMetric('V2GetReservesBatchSize', sortedPoolAddresses.length, MetricLoggerUnit.Count);
+        metric.putMetric(`V2GetReservesBatchSize_${ID_TO_NETWORK_NAME(this.chainId)}`, sortedPoolAddresses.length, MetricLoggerUnit.Count);
         const reservesResults = await this.getPoolsData(sortedPoolAddresses, 'getReserves', providerConfig);
         log.info(`Got reserves for ${poolAddressSet.size} pools ${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)
             ? `as of block: ${await (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)}.`
@@ -101,4 +103,4 @@ export class V2PoolProvider {
         return results;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxLQUFrQyxNQUFNLGFBQWEsQ0FBQztBQUM3RCxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDM0YsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdEUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQWtEakQsTUFBTSxPQUFPLGNBQWM7SUFLekI7Ozs7O09BS0c7SUFDSCxZQUNZLE9BQWdCLEVBQ2hCLGtCQUFzQyxFQUN0QyxlQUFtQztRQUMzQyxPQUFPLEVBQUUsQ0FBQztRQUNWLFVBQVUsRUFBRSxFQUFFO1FBQ2QsVUFBVSxFQUFFLEdBQUc7S0FDaEI7UUFOUyxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDdEMsaUJBQVksR0FBWixZQUFZLENBSXJCO1FBakJILHlFQUF5RTtRQUN6RSxrREFBa0Q7UUFDMUMsdUJBQWtCLEdBQThCLEVBQUUsQ0FBQztJQWdCeEQsQ0FBQztJQUVHLEtBQUssQ0FBQyxRQUFRLENBQ25CLFVBQTRCLEVBQzVCLGNBQStCO1FBRS9CLE1BQU0sY0FBYyxHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ3RELE1BQU0sZ0JBQWdCLEdBQTBCLEVBQUUsQ0FBQztRQUNuRCxNQUFNLG1CQUFtQixHQUFhLEVBQUUsQ0FBQztRQUV6QyxLQUFLLE1B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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9vbC1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvcG9vbC1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdkMsT0FBTyxLQUFrQyxNQUFNLGFBQWEsQ0FBQztBQUM3RCxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDM0YsT0FBTyxFQUFFLGNBQWMsRUFBRSxrQkFBa0IsRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDMUYsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQWtEakQsTUFBTSxPQUFPLGNBQWM7SUFLekI7Ozs7O09BS0c7SUFDSCxZQUNZLE9BQWdCLEVBQ2hCLGtCQUFzQyxFQUN0QyxlQUFtQztRQUMzQyxPQUFPLEVBQUUsQ0FBQztRQUNWLFVBQVUsRUFBRSxFQUFFO1FBQ2QsVUFBVSxFQUFFLEdBQUc7S0FDaEI7UUFOUyxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFDdEMsaUJBQVksR0FBWixZQUFZLENBSXJCO1FBakJILHlFQUF5RTtRQUN6RSxrREFBa0Q7UUFDMUMsdUJBQWtCLEdBQThCLEVBQUUsQ0FBQztJQWlCM0QsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFRLENBQ25CLFVBQTRCLEVBQzVCLGNBQStCO1FBRS9CLE1BQU0sY0FBYyxHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ3RELE1BQU0sZ0JBQWdCLEdBQTBCLEVBQUUsQ0FBQztRQUNuRCxNQUFNLG1CQUFtQixHQUFhLEVBQUUsQ0FBQztR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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js
index 68d11d3..7d4b512 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v2/static-subgraph-provider.js
@@ -28,7 +28,8 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
     [ChainId.BNB]: [],
     [ChainId.AVALANCHE]: [],
     [ChainId.BASE_GOERLI]: [],
-    [ChainId.BASE]: []
+    [ChainId.BASE]: [],
+    [ChainId.TENET]: []
 };
 /**
  * Provider that does not get data from an external source and instead returns
@@ -87,4 +88,4 @@ export class StaticV2SubgraphProvider {
         return subgraphPools;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBUyxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDNUQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFDTCxXQUFXLEVBQ1gsWUFBWSxFQUNaLFlBQVksRUFDWixZQUFZLEVBQ2IsTUFBTSxtQkFBbUIsQ0FBQztBQVEzQixNQUFNLDZCQUE2QixHQUFtQjtJQUNwRCxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUNqQix1QkFBdUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFFO1FBQ3pDLFdBQVc7UUFDWCxZQUFZO1FBQ1osWUFBWTtRQUNaLFlBQVk7S0FDYjtJQUNELENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsdUJBQXVCLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBRSxDQUFDO0lBQzVELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsdUJBQXVCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBRSxDQUFDO0lBQzlELDZHQUE2RztJQUM3RyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFO0lBQ3RCLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUFFLEVBQUU7SUFDMUIsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsRUFBRTtJQUM3QixDQUFDLE9BQU8sQ0FBQyxlQUFlLENB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBUyxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDNUQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFDTCxXQUFXLEVBQ1gsWUFBWSxFQUNaLFlBQVksRUFDWixZQUFZLEVBQ2IsTUFBTSxtQkFBbUIsQ0FBQztBQVEzQixNQUFNLDZCQUE2QixHQUFtQjtJQUNwRCxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUNqQix1QkFBdUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFFO1FBQ3pDLFdBQVc7UUFDWCxZQUFZO1FBQ1osWUFBWTtRQUNaLFlBQVk7S0FDYjtJQUNELENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsdUJBQXVCLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBRSxDQUFDO0lBQzVELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsdUJBQXVCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBRSxDQUFDO0lBQzlELDZHQUE2RztJQUM3RyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxFQUFFO0lBQ3RCLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUFFLEVBQUU7SUFDMUIsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsRUFBRTtJQUM3QixDQUFDLE9BQU8sQ0FBQyxlQUFlLENB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-pool-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-pool-provider.js
index f050210..efe078c 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-pool-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/caching-pool-provider.js
@@ -53,7 +53,8 @@ export class CachingV3PoolProvider {
                 const pool = poolAccessor.getPoolByAddress(address);
                 if (pool) {
                     poolAddressToPool[address] = pool;
-                    await this.cache.set(this.POOL_KEY(this.chainId, address), pool);
+                    // We don't want to wait for this caching to complete before returning the pools.
+                    this.cache.set(this.POOL_KEY(this.chainId, address), pool);
                 }
             }
         }
@@ -70,4 +71,4 @@ export class CachingV3PoolProvider {
         return this.poolProvider.getPoolAddress(tokenA, tokenB, feeAmount);
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1wb29sLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9jYWNoaW5nLXBvb2wtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdEQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBT3JDOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLE9BQU8scUJBQXFCO0lBSWhDOzs7OztPQUtHO0lBQ0gsWUFDWSxPQUFnQixFQUNoQixZQUE2QixFQUMvQixLQUFtQjtRQUZqQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGlCQUFZLEdBQVosWUFBWSxDQUFpQjtRQUMvQixVQUFLLEdBQUwsS0FBSyxDQUFjO1FBWnJCLGFBQVEsR0FBRyxDQUFDLE9BQWdCLEVBQUUsT0FBZSxFQUFFLEVBQUUsQ0FDdkQsUUFBUSxPQUFPLElBQUksT0FBTyxFQUFFLENBQUM7SUFZNUIsQ0FBQztJQUVHLEtBQUssQ0FBQyxRQUFRLENBQ25CLFVBQXVDLEVBQ3ZDLGNBQStCO1FBRS9CLE1BQU0sY0FBYyxHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ3RELE1BQU0sb0JBQW9CLEdBQXFDLEVBQUUsQ0FBQztRQUNsRSxNQUFNLG1CQUFtQixHQUFhLEVBQUUsQ0FBQztRQUN6QyxNQUFNLGlCQUFpQixHQUFvQyxFQUFFLENBQUM7UUFFOUQsS0FBSyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsSUFBSSxVQUFVLEVBQUU7WUFDcEQsTUFBTSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FDekQsTUFBTSxFQUNOLE1BQU0sRUFDTixTQUFTLENB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1wb29sLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9jYWNoaW5nLXBvb2wtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDdEQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBT3JDOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLE9BQU8scUJBQXFCO0lBSWhDOzs7OztPQUtHO0lBQ0gsWUFDWSxPQUFnQixFQUNoQixZQUE2QixFQUMvQixLQUFtQjtRQUZqQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGlCQUFZLEdBQVosWUFBWSxDQUFpQjtRQUMvQixVQUFLLEdBQUwsS0FBSyxDQUFjO1FBWnJCLGFBQVEsR0FBRyxDQUFDLE9BQWdCLEVBQUUsT0FBZSxFQUFFLEVBQUUsQ0FDdkQsUUFBUSxPQUFPLElBQUksT0FBTyxFQUFFLENBQUM7SUFhL0IsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFRLENBQ25CLFVBQXVDLEVBQ3ZDLGNBQStCO1FBRS9CLE1BQU0sY0FBYyxHQUFnQixJQUFJLEdBQUcsRUFBVSxDQUFDO1FBQ3RELE1BQU0sb0JBQW9CLEdBQXFDLEVBQUUsQ0FBQztRQUNsRSxNQUFNLG1CQUFtQixHQUFhLEVBQUUsQ0FBQztRQUN6QyxNQUFNLGlCQUFpQixHQUFvQyxFQUFFLENBQUM7UUFFOUQsS0FBSyxNQUFNLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsSUFBSSxVQUFVLEVBQUU7WUFDcEQsTUFBTSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FDekQsTUFBTSxFQUNOLE1BQU0sRUFDTixTQUFTLENB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js
index 26f8306..ef8ba1a 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/static-subgraph-provider.js
@@ -6,7 +6,7 @@ import _ from 'lodash';
 import { unparseFeeAmount } from '../../util/amounts';
 import { WRAPPED_NATIVE_CURRENCY } from '../../util/chains';
 import { log } from '../../util/log';
-import { ARB_ARBITRUM, BTC_BNB, BUSD_BNB, CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_CELO, DAI_CELO_ALFAJORES, DAI_GOERLI, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_POLYGON_MUMBAI, ETH_BNB, OP_OPTIMISM, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_ETHEREUM_GNOSIS, USDC_GOERLI, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_POLYGON, USDC_SEPOLIA, USDT_ARBITRUM, USDT_BNB, USDT_GOERLI, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_GOERLI, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISM_GOERLI, WETH_POLYGON, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS } from '../token-provider';
+import { ARB_ARBITRUM, BTC_BNB, BUSD_BNB, CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_CELO, DAI_CELO_ALFAJORES, DAI_GOERLI, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_POLYGON_MUMBAI, ETH_BNB, OP_OPTIMISM, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_ETHEREUM_GNOSIS, USDC_GOERLI, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_POLYGON, USDC_SEPOLIA, USDT_ARBITRUM, USDT_BNB, USDT_GOERLI, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, USDT_TENET, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_GOERLI, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISM_GOERLI, WETH_POLYGON, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS } from '../token-provider';
 const BASES_TO_CHECK_TRADES_AGAINST = {
     [ChainId.MAINNET]: [
         WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET],
@@ -91,6 +91,7 @@ const BASES_TO_CHECK_TRADES_AGAINST = {
     ],
     [ChainId.BASE_GOERLI]: [WRAPPED_NATIVE_CURRENCY[ChainId.BASE_GOERLI]],
     [ChainId.BASE]: [WRAPPED_NATIVE_CURRENCY[ChainId.BASE], USDC_BASE],
+    [ChainId.TENET]: [WRAPPED_NATIVE_CURRENCY[ChainId.TENET], USDT_TENET],
 };
 /**
  * Provider that uses a hardcoded list of V3 pools to generate a list of subgraph pools.
@@ -160,4 +161,4 @@ export class StaticV3SubgraphProvider {
         return subgraphPools;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEO0FBQzdELE9BQU8sRUFBRSxPQUFPLEVBQVMsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2xELE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUN4QixPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDdEQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDNUQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJDLE9BQU8sRUFDTCxZQUFZLEVBQ1osT0FBTyxFQUNQLFFBQVEsRUFDUixJQUFJLEVBQ0osY0FBYyxFQUNkLFNBQVMsRUFDVCxtQkFBbUIsRUFDbkIsU0FBUyxFQUNULG1CQUFtQixFQUNuQixZQUFZLEVBQ1osUUFBUSxFQUNSLE9BQU8sRUFDUCxRQUFRLEVBQ1Isa0JBQWtCLEVBQ2xCLFVBQVUsRUFDVixXQUFXLEVBQ1gsWUFBWSxFQUNaLFlBQVksRUFDWixtQkFBbUIsRUFDbkIsa0JBQWtCLEVBQ2xCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsYUFBYSxFQUNiLG9CQUFvQixFQUNwQixTQUFTLEVBQ1QsU0FBUyxFQUNULFFBQVEsRUFDUixvQkFBb0IsRUFDcEIsV0FBVyxFQUNYLFlBQVksRUFDWixhQUFhLEVBQ2IsYUFBYSxFQUNiLG9CQUFvQixFQUNwQixZQUFZLEVBQ1osWUFBWSxFQUNaLGFBQWEsRUFDYixRQUFRLEVBQ1IsV0FBVyxFQUNYLFlBQVksRUFDWixhQUFhLEVB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkRBQTZEO0FBQzdELE9BQU8sRUFBRSxPQUFPLEVBQVMsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2xELE9BQU8sSUFBSSxNQUFNLE1BQU0sQ0FBQztBQUN4QixPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDdEQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDNUQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJDLE9BQU8sRUFDTCxZQUFZLEVBQ1osT0FBTyxFQUNQLFFBQVEsRUFDUixJQUFJLEVBQ0osY0FBYyxFQUNkLFNBQVMsRUFDVCxtQkFBbUIsRUFDbkIsU0FBUyxFQUNULG1CQUFtQixFQUNuQixZQUFZLEVBQ1osUUFBUSxFQUNSLE9BQU8sRUFDUCxRQUFRLEVBQ1Isa0JBQWtCLEVBQ2xCLFVBQVUsRUFDVixXQUFXLEVBQ1gsWUFBWSxFQUNaLFlBQVksRUFDWixtQkFBbUIsRUFDbkIsa0JBQWtCLEVBQ2xCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsYUFBYSxFQUNiLG9CQUFvQixFQUNwQixTQUFTLEVBQ1QsU0FBUyxFQUNULFFBQVEsRUFDUixvQkFBb0IsRUFDcEIsV0FBVyxFQUNYLFlBQVksRUFDWixhQUFhLEVBQ2IsYUFBYSxFQUNiLG9CQUFvQixFQUNwQixZQUFZLEVBQ1osWUFBWSxFQUNaLGFBQWEsRUFDYixRQUFRLEVBQ1IsV0FBVyxFQUNYLFlBQVksRUFDWixhQUFhLEVB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider.js b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider.js
index 9820ba5..ffc612c 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/providers/v3/subgraph-provider.js
@@ -15,7 +15,7 @@ const SUBGRAPH_URL_BY_CHAIN = {
     [ChainId.GOERLI]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-gorli',
     [ChainId.BNB]: 'https://api.thegraph.com/subgraphs/name/ilyamk/uniswap-v3---bnb-chain',
     [ChainId.AVALANCHE]: 'https://api.thegraph.com/subgraphs/name/lynnshaoyu/uniswap-v3-avax',
-    [ChainId.BASE]: 'https://api.studio.thegraph.com/query/48211/uniswap-v3-base/v0.0.1',
+    [ChainId.BASE]: 'https://api.studio.thegraph.com/query/48211/uniswap-v3-base/version/latest',
 };
 const PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.
 export class V3SubgraphProvider {
@@ -129,4 +129,4 @@ export class V3SubgraphProvider {
         return poolsSanitized;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YzL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQVMsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEtBQUssTUFBTSxhQUFhLENBQUM7QUFDaEMsT0FBTyxPQUFPLE1BQU0sZUFBZSxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxHQUFHLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDckQsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFrQ2pDLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLENBQUMsQ0FBaUIsRUFBRSxFQUFFLENBQ3ZELEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBRS9DLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLENBQUMsQ0FBaUIsRUFBRSxFQUFFLENBQ3ZELEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FBQztBQUVsQyxNQUFNLHFCQUFxQixHQUFzQztJQUMvRCxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFDZiw0REFBNEQ7SUFDOUQsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQ2hCLDJFQUEyRTtJQUM3RSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFDcEIsb0VBQW9FO0lBQ3RFLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUNmLHNFQUFzRTtJQUN4RSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFDWixpRUFBaUU7SUFD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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YzL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQVMsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEtBQUssTUFBTSxhQUFhLENBQUM7QUFDaEMsT0FBTyxPQUFPLE1BQU0sZUFBZSxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxHQUFHLEVBQUUsYUFBYSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDckQsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFrQ2pDLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLENBQUMsQ0FBaUIsRUFBRSxFQUFFLENBQ3ZELEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBRS9DLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLENBQUMsQ0FBaUIsRUFBRSxFQUFFLENBQ3ZELEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FBQztBQUVsQyxNQUFNLHFCQUFxQixHQUFzQztJQUMvRCxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFDZiw0REFBNEQ7SUFDOUQsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQ2hCLDJFQUEyRTtJQUM3RSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFDcEIsb0VBQW9FO0lBQ3RFLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUNmLHNFQUFzRTtJQUN4RSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFDWixpRUFBaUU7SUFD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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.d.ts
index eedefd4..ec7fa43 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.d.ts
@@ -2,7 +2,7 @@ import { BaseProvider } from '@ethersproject/providers';
 import { Protocol } from '@uniswap/router-sdk';
 import { ChainId, Currency, TradeType } from '@uniswap/sdk-core';
 import { Position } from '@uniswap/v3-sdk';
-import { IOnChainQuoteProvider, IRouteCachingProvider, ISwapRouterProvider, IV2QuoteProvider, IV2SubgraphProvider, Simulator, UniswapMulticallProvider } from '../../providers';
+import { CacheMode, IOnChainQuoteProvider, IRouteCachingProvider, ISwapRouterProvider, ITokenPropertiesProvider, IV2QuoteProvider, IV2SubgraphProvider, Simulator, UniswapMulticallProvider } from '../../providers';
 import { ITokenListProvider } from '../../providers/caching-token-list-provider';
 import { IGasPriceProvider } from '../../providers/gas-price-provider';
 import { ITokenProvider } from '../../providers/token-provider';
@@ -109,6 +109,10 @@ export declare type AlphaRouterParams = {
      * A provider for caching the best route given an amount, quoteToken, tradeType
      */
     routeCachingProvider?: IRouteCachingProvider;
+    /**
+     * A provider for getting token properties for special tokens like fee-on-transfer tokens.
+     */
+    tokenPropertiesProvider?: ITokenPropertiesProvider;
 };
 export declare class MapWithLowerCaseKey<V> extends Map<string, V> {
     set(key: string, value: V): this;
@@ -218,6 +222,29 @@ export declare type AlphaRouterConfig = {
      * 40% of input => Route 3
      */
     distributionPercent: number;
+    /**
+     * Flag to indicate whether to use the cached routes or not.
+     * By default, the cached routes will be used.
+     */
+    useCachedRoutes?: boolean;
+    /**
+     * Flag to indicate whether to write to the cached routes or not.
+     * By default, the cached routes will be written to.
+     */
+    writeToCachedRoutes?: boolean;
+    /**
+     * Flag to indicate whether to use the CachedRoutes in optimistic mode.
+     * Optimistic mode means that we will allow blocksToLive greater than 1.
+     */
+    optimisticCachedRoutes?: boolean;
+    /**
+     * Debug param that helps to see the short-term latencies improvements without impacting the main path.
+     */
+    debugRouting?: boolean;
+    /**
+     * Flag that allow us to override the cache mode.
+     */
+    overwriteCacheMode?: CacheMode;
 };
 export declare class AlphaRouter implements IRouter<AlphaRouterConfig>, ISwapToRatio<AlphaRouterConfig, SwapAndAddConfig> {
     protected chainId: ChainId;
@@ -243,7 +270,8 @@ export declare class AlphaRouter implements IRouter<AlphaRouterConfig>, ISwapToR
     protected v3Quoter: V3Quoter;
     protected mixedQuoter: MixedQuoter;
     protected routeCachingProvider?: IRouteCachingProvider;
-    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, optimismGasDataProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, }: AlphaRouterParams);
+    protected tokenPropertiesProvider?: ITokenPropertiesProvider;
+    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, optimismGasDataProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, tokenPropertiesProvider, }: AlphaRouterParams);
     routeToRatio(token0Balance: CurrencyAmount, token1Balance: CurrencyAmount, position: Position, swapAndAddConfig: SwapAndAddConfig, swapAndAddOptions?: SwapAndAddOptions, routingConfig?: Partial<AlphaRouterConfig>): Promise<SwapToRatioResponse>;
     /**
      * @inheritdoc IRouter
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.js
index f4e9599..a747349 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/alpha-router.js
@@ -8,8 +8,9 @@ import retry from 'async-retry';
 import JSBI from 'jsbi';
 import _ from 'lodash';
 import NodeCache from 'node-cache';
-import { CachedRoutes, CacheMode, CachingGasStationProvider, CachingTokenProviderWithFallback, CachingV2PoolProvider, CachingV2SubgraphProvider, CachingV3PoolProvider, CachingV3SubgraphProvider, EIP1559GasPriceProvider, ETHGasStationInfoProvider, LegacyGasPriceProvider, NodeJSCache, OnChainGasPriceProvider, OnChainQuoteProvider, StaticV2SubgraphProvider, StaticV3SubgraphProvider, SwapRouterProvider, UniswapMulticallProvider, URISubgraphProvider, V2QuoteProvider, V2SubgraphProviderWithFallBacks, V3SubgraphProviderWithFallBacks, } from '../../providers';
+import { CachedRoutes, CacheMode, CachingGasStationProvider, CachingTokenProviderWithFallback, CachingV2PoolProvider, CachingV2SubgraphProvider, CachingV3PoolProvider, CachingV3SubgraphProvider, EIP1559GasPriceProvider, ETHGasStationInfoProvider, LegacyGasPriceProvider, NodeJSCache, OnChainGasPriceProvider, OnChainQuoteProvider, StaticV2SubgraphProvider, StaticV3SubgraphProvider, SwapRouterProvider, TokenPropertiesProvider, UniswapMulticallProvider, URISubgraphProvider, V2QuoteProvider, V2SubgraphProviderWithFallBacks, V3SubgraphProviderWithFallBacks } from '../../providers';
 import { CachingTokenListProvider } from '../../providers/caching-token-list-provider';
+import { OnChainTokenFeeFetcher } from '../../providers/token-fee-fetcher';
 import { TokenProvider } from '../../providers/token-provider';
 import { TokenValidatorProvider, } from '../../providers/token-validator-provider';
 import { V2PoolProvider } from '../../providers/v2/pool-provider';
@@ -28,8 +29,10 @@ import { SwapToRatioStatus, } from '../router';
 import { DEFAULT_ROUTING_CONFIG_BY_CHAIN, ETH_GAS_STATION_API_URL } from './config';
 import { getBestSwapRoute } from './functions/best-swap-route';
 import { calculateRatioAmountIn } from './functions/calculate-ratio-amount-in';
+import { getV2CandidatePools, getV3CandidatePools, } from './functions/get-candidate-pools';
 import { MixedRouteHeuristicGasModelFactory } from './gas-models/mixedRoute/mixed-route-heuristic-gas-model';
 import { V2HeuristicGasModelFactory } from './gas-models/v2/v2-heuristic-gas-model';
+import { NATIVE_OVERHEAD } from './gas-models/v3/gas-costs';
 import { V3HeuristicGasModelFactory } from './gas-models/v3/v3-heuristic-gas-model';
 import { MixedQuoter, V2Quoter, V3Quoter } from './quoters';
 export class MapWithLowerCaseKey extends Map {
@@ -38,7 +41,7 @@ export class MapWithLowerCaseKey extends Map {
     }
 }
 export class AlphaRouter {
-    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, optimismGasDataProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, }) {
+    constructor({ chainId, provider, multicall2Provider, v3PoolProvider, onChainQuoteProvider, v2PoolProvider, v2QuoteProvider, v2SubgraphProvider, tokenProvider, blockedTokenListProvider, v3SubgraphProvider, gasPriceProvider, v3GasModelFactory, v2GasModelFactory, mixedRouteGasModelFactory, swapRouterProvider, optimismGasDataProvider, tokenValidatorProvider, arbitrumGasDataProvider, simulator, routeCachingProvider, tokenPropertiesProvider, }) {
         this.chainId = chainId;
         this.provider = provider;
         this.multicall2Provider =
@@ -54,6 +57,29 @@ export class AlphaRouter {
             switch (chainId) {
                 case ChainId.OPTIMISM:
                 case ChainId.OPTIMISM_GOERLI:
+                    this.onChainQuoteProvider = new OnChainQuoteProvider(chainId, provider, this.multicall2Provider, {
+                        retries: 2,
+                        minTimeout: 100,
+                        maxTimeout: 1000,
+                    }, {
+                        multicallChunk: 110,
+                        gasLimitPerCall: 1200000,
+                        quoteMinSuccessRate: 0.1,
+                    }, {
+                        gasLimitOverride: 3000000,
+                        multicallChunk: 45,
+                    }, {
+                        gasLimitOverride: 3000000,
+                        multicallChunk: 45,
+                    }, {
+                        baseBlockOffset: -10,
+                        rollback: {
+                            enabled: true,
+                            attemptsBeforeRollback: 1,
+                            rollbackBlockOffset: -10,
+                        },
+                    });
+                    break;
                 case ChainId.BASE:
                 case ChainId.BASE_GOERLI:
                     this.onChainQuoteProvider = new OnChainQuoteProvider(chainId, provider, this.multicall2Provider, {
@@ -61,7 +87,7 @@ export class AlphaRouter {
                         minTimeout: 100,
                         maxTimeout: 1000,
                     }, {
-                        multicallChunk: 110,
+                        multicallChunk: 80,
                         gasLimitPerCall: 1200000,
                         quoteMinSuccessRate: 0.1,
                     }, {
@@ -190,6 +216,12 @@ export class AlphaRouter {
         else if (this.chainId === ChainId.MAINNET) {
             this.tokenValidatorProvider = new TokenValidatorProvider(this.chainId, this.multicall2Provider, new NodeJSCache(new NodeCache({ stdTTL: 30000, useClones: false })));
         }
+        if (tokenPropertiesProvider) {
+            this.tokenPropertiesProvider = tokenPropertiesProvider;
+        }
+        else if (this.chainId === ChainId.MAINNET) {
+            this.tokenPropertiesProvider = new TokenPropertiesProvider(this.chainId, this.tokenValidatorProvider, new NodeJSCache(new NodeCache({ stdTTL: 86400, useClones: false })), new OnChainTokenFeeFetcher(this.chainId, provider));
+        }
         // Initialize the Quoters.
         // Quoters are an abstraction encapsulating the business logic of fetching routes and quotes.
         this.v2Quoter = new V2Quoter(this.v2SubgraphProvider, this.v2PoolProvider, this.v2QuoteProvider, this.v2GasModelFactory, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider);
@@ -323,7 +355,7 @@ export class AlphaRouter {
      * @inheritdoc IRouter
      */
     async route(amount, quoteCurrency, tradeType, swapConfig, partialRoutingConfig = {}) {
-        var _a, _c, _d;
+        var _a, _c, _d, _e;
         const { currencyIn, currencyOut } = this.determineCurrencyInOutFromTradeType(tradeType, amount, quoteCurrency);
         const tokenIn = currencyIn.wrapped;
         const tokenOut = currencyOut.wrapped;
@@ -336,20 +368,29 @@ export class AlphaRouter {
         // Get a block number to specify in all our calls. Ensures data we fetch from chain is
         // from the same block.
         const blockNumber = (_a = partialRoutingConfig.blockNumber) !== null && _a !== void 0 ? _a : this.getBlockNumberPromise();
-        const routingConfig = _.merge({}, DEFAULT_ROUTING_CONFIG_BY_CHAIN(this.chainId), partialRoutingConfig, { blockNumber });
+        const routingConfig = _.merge({
+            // These settings could be changed by the partialRoutingConfig
+            useCachedRoutes: true,
+            writeToCachedRoutes: true,
+            optimisticCachedRoutes: false,
+        }, DEFAULT_ROUTING_CONFIG_BY_CHAIN(this.chainId), partialRoutingConfig, { blockNumber });
+        if (routingConfig.debugRouting) {
+            log.warn(`Finalized routing config is ${JSON.stringify(routingConfig)}`);
+        }
         const gasPriceWei = await this.getGasPriceWei();
         const quoteToken = quoteCurrency.wrapped;
-        const [v3GasModel, mixedRouteGasModel] = await this.getGasModels(gasPriceWei, amount.currency.wrapped, quoteToken, { blockNumber });
+        const [v3GasModel, mixedRouteGasModel] = await this.getGasModels(gasPriceWei, amount.currency.wrapped, quoteToken, { blockNumber, additionalGasOverhead: NATIVE_OVERHEAD(this.chainId, amount.currency, quoteCurrency) });
         // Create a Set to sanitize the protocols input, a Set of undefined becomes an empty set,
         // Then create an Array from the values of that Set.
         const protocols = Array.from(new Set(routingConfig.protocols).values());
-        const cacheMode = await ((_c = this.routeCachingProvider) === null || _c === void 0 ? void 0 : _c.getCacheMode(this.chainId, amount, quoteToken, tradeType, protocols));
+        const cacheMode = (_c = routingConfig.overwriteCacheMode) !== null && _c !== void 0 ? _c : await ((_d = this.routeCachingProvider) === null || _d === void 0 ? void 0 : _d.getCacheMode(this.chainId, amount, quoteToken, tradeType, protocols));
         // Fetch CachedRoutes
         let cachedRoutes;
-        if (cacheMode !== CacheMode.Darkmode) {
-            cachedRoutes = await ((_d = this.routeCachingProvider) === null || _d === void 0 ? void 0 : _d.getCachedRoute(this.chainId, amount, quoteToken, tradeType, protocols, await blockNumber));
+        if (routingConfig.useCachedRoutes && cacheMode !== CacheMode.Darkmode) {
+            cachedRoutes = await ((_e = this.routeCachingProvider) === null || _e === void 0 ? void 0 : _e.getCachedRoute(this.chainId, amount, quoteToken, tradeType, protocols, await blockNumber, routingConfig.optimisticCachedRoutes));
         }
-        if (cacheMode && cacheMode !== CacheMode.Darkmode && !cachedRoutes) {
+        metric.putMetric(routingConfig.useCachedRoutes ? 'GetQuoteUsingCachedRoutes' : 'GetQuoteNotUsingCachedRoutes', 1, MetricLoggerUnit.Count);
+        if (cacheMode && routingConfig.useCachedRoutes && cacheMode !== CacheMode.Darkmode && !cachedRoutes) {
             metric.putMetric(`GetCachedRoute_miss_${cacheMode}`, 1, MetricLoggerUnit.Count);
             log.info({
                 tokenIn: tokenIn.symbol,
@@ -362,7 +403,7 @@ export class AlphaRouter {
                 tradeType: this.tradeTypeStr(tradeType)
             }, `GetCachedRoute miss ${cacheMode} for ${this.tokenPairSymbolTradeTypeChainId(tokenIn, tokenOut, tradeType)}`);
         }
-        else if (cachedRoutes) {
+        else if (cachedRoutes && routingConfig.useCachedRoutes) {
             metric.putMetric(`GetCachedRoute_hit_${cacheMode}`, 1, MetricLoggerUnit.Count);
             log.info({
                 tokenIn: tokenIn.symbol,
@@ -388,8 +429,10 @@ export class AlphaRouter {
             swapRouteFromChainPromise
         ]);
         let swapRouteRaw;
+        let hitsCachedRoute = false;
         if (cacheMode === CacheMode.Livemode && swapRouteFromCache) {
             log.info(`CacheMode is ${cacheMode}, and we are using swapRoute from cache`);
+            hitsCachedRoute = true;
             swapRouteRaw = swapRouteFromCache;
         }
         else {
@@ -428,7 +471,10 @@ export class AlphaRouter {
             return null;
         }
         const { quote, quoteGasAdjusted, estimatedGasUsed, routes: routeAmounts, estimatedGasUsedQuoteToken, estimatedGasUsedUSD, } = swapRouteRaw;
-        if (this.routeCachingProvider && cacheMode !== CacheMode.Darkmode && swapRouteFromChain) {
+        if (this.routeCachingProvider &&
+            routingConfig.writeToCachedRoutes &&
+            cacheMode !== CacheMode.Darkmode &&
+            swapRouteFromChain) {
             // Generate the object to be cached
             const routesToCache = CachedRoutes.fromRoutesWithValidQuotes(swapRouteFromChain.routes, this.chainId, tokenIn, tokenOut, protocols.sort(), // sort it for consistency in the order of the protocols.
             await blockNumber, tradeType, amount.toExact());
@@ -446,6 +492,9 @@ export class AlphaRouter {
                     metric.putMetric(`SetCachedRoute_failure`, 1, MetricLoggerUnit.Count);
                 });
             }
+            else {
+                metric.putMetric(`SetCachedRoute_unnecessary`, 1, MetricLoggerUnit.Count);
+            }
         }
         metric.putMetric(`QuoteFoundForChain${this.chainId}`, 1, MetricLoggerUnit.Count);
         // Build Trade object that represents the optimal swap.
@@ -467,6 +516,7 @@ export class AlphaRouter {
             trade,
             methodParameters,
             blockNumber: BigNumber.from(await blockNumber),
+            hitsCachedRoute: hitsCachedRoute,
         };
         if (swapConfig &&
             swapConfig.simulate &&
@@ -515,17 +565,30 @@ export class AlphaRouter {
         }
         if (v3Routes.length > 0) {
             const v3RoutesFromCache = v3Routes.map((cachedRoute) => cachedRoute.route);
-            quotePromises.push(this.v3Quoter.getQuotes(v3RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, v3GasModel));
+            metric.putMetric('SwapRouteFromCache_V3_GetQuotes_Request', 1, MetricLoggerUnit.Count);
+            const beforeGetQuotes = Date.now();
+            quotePromises.push(this.v3Quoter.getQuotes(v3RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, v3GasModel).then((result) => {
+                metric.putMetric(`SwapRouteFromCache_V3_GetQuotes_Load`, Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
+                return result;
+            }));
         }
         if (v2Routes.length > 0) {
-            quotePromises.push(
-            // When we fetch the quotes in V2, we are not calling the `onChainProvider` like on v3Routes and mixedRoutes
-            // Instead we are using the reserves in the Pool object, so we need to re-load the current reserves.
-            this.v2Quoter.getRoutesThenQuotes(v2Routes[0].tokenIn, v2Routes[0].tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, undefined, gasPriceWei));
+            const v2RoutesFromCache = v2Routes.map((cachedRoute) => cachedRoute.route);
+            metric.putMetric('SwapRouteFromCache_V2_GetQuotes_Request', 1, MetricLoggerUnit.Count);
+            const beforeGetQuotes = Date.now();
+            quotePromises.push(this.v2Quoter.refreshRoutesThenGetQuotes(cachedRoutes.tokenIn, cachedRoutes.tokenOut, v2RoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, gasPriceWei).then((result) => {
+                metric.putMetric(`SwapRouteFromCache_V2_GetQuotes_Load`, Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
+                return result;
+            }));
         }
         if (mixedRoutes.length > 0) {
             const mixedRoutesFromCache = mixedRoutes.map((cachedRoute) => cachedRoute.route);
-            quotePromises.push(this.mixedQuoter.getQuotes(mixedRoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, mixedRouteGasModel));
+            metric.putMetric('SwapRouteFromCache_Mixed_GetQuotes_Request', 1, MetricLoggerUnit.Count);
+            const beforeGetQuotes = Date.now();
+            quotePromises.push(this.mixedQuoter.getQuotes(mixedRoutesFromCache, amounts, percents, quoteToken, tradeType, routingConfig, undefined, mixedRouteGasModel).then((result) => {
+                metric.putMetric(`SwapRouteFromCache_Mixed_GetQuotes_Load`, Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
+                return result;
+            }));
         }
         const getQuotesResults = await Promise.all(quotePromises);
         const allRoutesWithValidQuotes = _.flatMap(getQuotesResults, (quoteResult) => quoteResult.routesWithValidQuotes);
@@ -543,23 +606,79 @@ export class AlphaRouter {
         const shouldQueryMixedProtocol = protocols.includes(Protocol.MIXED) || (noProtocolsSpecified && v2SupportedInChain);
         const mixedProtocolAllowed = [ChainId.MAINNET, ChainId.GOERLI].includes(this.chainId) &&
             tradeType === TradeType.EXACT_INPUT;
+        const beforeGetCandidates = Date.now();
+        let v3CandidatePoolsPromise = Promise.resolve(undefined);
+        if (v3ProtocolSpecified ||
+            noProtocolsSpecified ||
+            (shouldQueryMixedProtocol && mixedProtocolAllowed)) {
+            v3CandidatePoolsPromise = getV3CandidatePools({
+                tokenIn,
+                tokenOut,
+                tokenProvider: this.tokenProvider,
+                blockedTokenListProvider: this.blockedTokenListProvider,
+                poolProvider: this.v3PoolProvider,
+                routeType: tradeType,
+                subgraphProvider: this.v3SubgraphProvider,
+                routingConfig,
+                chainId: this.chainId,
+            }).then((candidatePools) => {
+                metric.putMetric('GetV3CandidatePools', Date.now() - beforeGetCandidates, MetricLoggerUnit.Milliseconds);
+                return candidatePools;
+            });
+        }
+        let v2CandidatePoolsPromise = Promise.resolve(undefined);
+        if ((v2SupportedInChain && (v2ProtocolSpecified || noProtocolsSpecified)) ||
+            (shouldQueryMixedProtocol && mixedProtocolAllowed)) {
+            // Fetch all the pools that we will consider routing via. There are thousands
+            // of pools, so we filter them to a set of candidate pools that we expect will
+            // result in good prices.
+            v2CandidatePoolsPromise = getV2CandidatePools({
+                tokenIn,
+                tokenOut,
+                tokenProvider: this.tokenProvider,
+                blockedTokenListProvider: this.blockedTokenListProvider,
+                poolProvider: this.v2PoolProvider,
+                routeType: tradeType,
+                subgraphProvider: this.v2SubgraphProvider,
+                routingConfig,
+                chainId: this.chainId,
+            }).then((candidatePools) => {
+                metric.putMetric('GetV2CandidatePools', Date.now() - beforeGetCandidates, MetricLoggerUnit.Milliseconds);
+                return candidatePools;
+            });
+        }
         const quotePromises = [];
         // Maybe Quote V3 - if V3 is specified, or no protocol is specified
         if (v3ProtocolSpecified || noProtocolsSpecified) {
             log.info({ protocols, tradeType }, 'Routing across V3');
-            quotePromises.push(this.v3Quoter.getRoutesThenQuotes(tokenIn, tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, v3GasModel));
+            metric.putMetric('SwapRouteFromChain_V3_GetRoutesThenQuotes_Request', 1, MetricLoggerUnit.Count);
+            const beforeGetRoutesThenQuotes = Date.now();
+            quotePromises.push(v3CandidatePoolsPromise.then((v3CandidatePools) => this.v3Quoter.getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, v3CandidatePools, tradeType, routingConfig, v3GasModel).then((result) => {
+                metric.putMetric(`SwapRouteFromChain_V3_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, MetricLoggerUnit.Milliseconds);
+                return result;
+            })));
         }
         // Maybe Quote V2 - if V2 is specified, or no protocol is specified AND v2 is supported in this chain
         if (v2SupportedInChain && (v2ProtocolSpecified || noProtocolsSpecified)) {
             log.info({ protocols, tradeType }, 'Routing across V2');
-            quotePromises.push(this.v2Quoter.getRoutesThenQuotes(tokenIn, tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, undefined, gasPriceWei));
+            metric.putMetric('SwapRouteFromChain_V2_GetRoutesThenQuotes_Request', 1, MetricLoggerUnit.Count);
+            const beforeGetRoutesThenQuotes = Date.now();
+            quotePromises.push(v2CandidatePoolsPromise.then((v2CandidatePools) => this.v2Quoter.getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, v2CandidatePools, tradeType, routingConfig, undefined, gasPriceWei).then((result) => {
+                metric.putMetric(`SwapRouteFromChain_V2_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, MetricLoggerUnit.Milliseconds);
+                return result;
+            })));
         }
         // Maybe Quote mixed routes
         // if MixedProtocol is specified or no protocol is specified and v2 is supported AND tradeType is ExactIn
         // AND is Mainnet or Gorli
         if (shouldQueryMixedProtocol && mixedProtocolAllowed) {
             log.info({ protocols, tradeType }, 'Routing across MixedRoutes');
-            quotePromises.push(this.mixedQuoter.getRoutesThenQuotes(tokenIn, tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, mixedRouteGasModel));
+            metric.putMetric('SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Request', 1, MetricLoggerUnit.Count);
+            const beforeGetRoutesThenQuotes = Date.now();
+            quotePromises.push(Promise.all([v3CandidatePoolsPromise, v2CandidatePoolsPromise]).then(([v3CandidatePools, v2CandidatePools]) => this.mixedQuoter.getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, [v3CandidatePools, v2CandidatePools], tradeType, routingConfig, mixedRouteGasModel).then((result) => {
+                metric.putMetric(`SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Load`, Date.now() - beforeGetRoutesThenQuotes, MetricLoggerUnit.Milliseconds);
+                return result;
+            })));
         }
         const getQuotesResults = await Promise.all(quotePromises);
         const allRoutesWithValidQuotes = [];
@@ -828,4 +947,4 @@ export class AlphaRouter {
         });
     }
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/compute-all-routes.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/compute-all-routes.js
index 1be6431..4f3435c 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/compute-all-routes.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/compute-all-routes.js
@@ -27,7 +27,7 @@ export function computeAllRoutes(tokenIn, tokenOut, buildRoute, pools, maxHops)
     var _a;
     const poolsUsed = Array(pools.length).fill(false);
     const routes = [];
-    const computeRoutes = (tokenIn, tokenOut, currentRoute, poolsUsed, _previousTokenOut) => {
+    const computeRoutes = (tokenIn, tokenOut, currentRoute, poolsUsed, tokensVisited, _previousTokenOut) => {
         if (currentRoute.length > maxHops) {
             return;
         }
@@ -48,18 +48,23 @@ export function computeAllRoutes(tokenIn, tokenOut, buildRoute, pools, maxHops)
             const currentTokenOut = curPool.token0.equals(previousTokenOut)
                 ? curPool.token1
                 : curPool.token0;
+            if (tokensVisited.has(currentTokenOut.address.toLowerCase())) {
+                continue;
+            }
+            tokensVisited.add(currentTokenOut.address.toLowerCase());
             currentRoute.push(curPool);
             poolsUsed[i] = true;
-            computeRoutes(tokenIn, tokenOut, currentRoute, poolsUsed, currentTokenOut);
+            computeRoutes(tokenIn, tokenOut, currentRoute, poolsUsed, tokensVisited, currentTokenOut);
             poolsUsed[i] = false;
             currentRoute.pop();
+            tokensVisited.delete(currentTokenOut.address.toLowerCase());
         }
     };
-    computeRoutes(tokenIn, tokenOut, [], poolsUsed);
+    computeRoutes(tokenIn, tokenOut, [], poolsUsed, new Set([tokenIn.address.toLowerCase()]));
     log.info({
         routes: routes.map(routeToString),
         pools: pools.map(poolToString),
     }, `Computed ${routes.length} possible routes for type ${(_a = routes[0]) === null || _a === void 0 ? void 0 : _a.protocol}.`);
     return routes;
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZS1hbGwtcm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2Z1bmN0aW9ucy9jb21wdXRlLWFsbC1yb3V0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUV2QyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDeEMsT0FBTyxFQUFFLFlBQVksRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFNUQsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQWEsRUFDYixPQUFlO0lBRWYsT0FBTyxnQkFBZ0IsQ0FDckIsT0FBTyxFQUNQLFFBQVEsRUFDUixDQUFDLEtBQWEsRUFBRSxPQUFjLEVBQUUsUUFBZSxFQUFFLEVBQUU7UUFDakQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUMsRUFDRCxLQUFLLEVBQ0wsT0FBTyxDQUNSLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQWEsRUFDYixPQUFlO0lBRWYsT0FBTyxnQkFBZ0IsQ0FDckIsT0FBTyxFQUNQLFFBQVEsRUFDUixDQUFDLEtBQWEsRUFBRSxPQUFjLEVBQUUsUUFBZSxFQUFFLEVBQUU7UUFDakQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUMsRUFDRCxLQUFLLEVBQ0wsT0FBTyxDQUNSLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLHFCQUFxQixDQUNuQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQXNCLEVBQ3RCLE9BQWU7SUFFZixNQUFNLFNBQVMsR0FBRyxnQkFBZ0IsQ0FDaEMsT0FBTyxFQUNQLFFBQVEsRUFDUixDQUFDLEtBQXNCLEVBQUUsT0FBYyxFQUFFLFFBQWUsRUFBRSxFQUFFO1FBQzFELE9BQU8sSUFBSSxVQUFVLENBQUMsS0FBSyxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNsRCxDQUFDLEVBQ0QsS0FBSyxFQUNMLE9BQU8sQ0FDUixDQUFDO0lBQ0Ysb0NBQW9DO0lBQ3BDLE9BQU8sU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO1FBQ2hDLE9BQU8sQ0FDTCxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLFlBQVksSUFBSSxDQUFDO1lBQ2xELENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksWUFBWSxJQUFJLENBQUMsQ0FDbkQsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUVELE1BQU0sVUFBVSxnQkFBZ0IsQ0FJOUIsT0FBYyxFQUNkLFFBQWUsRUFDZixVQUF1RSxFQUN2RSxLQUFjLEVBQ2QsT0FBZTs7SUFFZixNQUFNLFNBQVMsR0FBRyxLQUFLLENBQVUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzRCxNQUFNLE1BQU0sR0FBYSxFQUFFLENBQUM7SUFFNUIsTUFBTSxhQUFhLEdBQUcsQ0FDcEIsT0FBYyxFQUNkLFFBQWUsRUFDZixZQUFxQixFQUNyQixTQUFvQixFQUNwQixpQkFBeUIsRUFDekIsRUFBRTtRQUNGLElBQUksWUFBWSxDQUFDLE1BQU0sR0FBRyxPQUFPLEVBQUU7WUFDakMsT0FBTztTQUNSO1FBRUQsSUFDRSxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUM7WUFDdkIsWUFBWSxDQUFDLFlBQVksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFFLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxFQUM5RDtZQUNBLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsR0FBRyxZQUFZLENBQUMsRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUM5RCxPQUFPO1NBQ1I7UUFFRCxLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUNyQyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtnQkFDaEIsU0FBUzthQUNWO1lBRUQsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLENBQUMsQ0FBRSxDQUFDO1lBQzFCLE1BQU0sZ0JBQWdCLEdBQUcsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUM7WUFFekUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtnQkFDNUMsU0FBUzthQUNWO1lBRUQsTUFBTSxlQUFlLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUM7Z0JBQzdELENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTTtnQkFDaEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7WUFFbkIsWUFBWSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUMzQixTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO1lBQ3BCLGFBQWEsQ0FDWCxPQUFPLEVBQ1AsUUFBUSxFQUNSLFlBQVksRUFDWixTQUFTLEVBQ1QsZUFBZSxDQUNoQixDQUFDO1lBQ0YsU0FBUyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQztZQUNyQixZQUFZLENBQUMsR0FBRyxFQUFFLENBQUM7U0FDcEI7SUFDSCxDQUFDLENBQUM7SUFFRixhQUFhLENBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsU0FBUyxDQUFDLENBQUM7SUFFaEQsR0FBRyxDQUFDLElBQUksQ0FDTjtRQUNFLE1BQU0sRUFBRSxNQUFNLENBQUMsR0FBRyxDQUFDLGFBQWEsQ0FBQztRQUNqQyxLQUFLLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUM7S0FDL0IsRUFDRCxZQUFZLE1BQU0sQ0FBQyxNQUFNLDZCQUE2QixNQUFBLE1BQU0sQ0FBQyxDQUFDLENBQUMsMENBQUUsUUFBUSxHQUFHLENBQzdFLENBQUM7SUFFRixPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZS1hbGwtcm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2Z1bmN0aW9ucy9jb21wdXRlLWFsbC1yb3V0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUV2QyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDeEMsT0FBTyxFQUFFLFlBQVksRUFBRSxhQUFhLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFFNUQsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQWEsRUFDYixPQUFlO0lBRWYsT0FBTyxnQkFBZ0IsQ0FDckIsT0FBTyxFQUNQLFFBQVEsRUFDUixDQUFDLEtBQWEsRUFBRSxPQUFjLEVBQUUsUUFBZSxFQUFFLEVBQUU7UUFDakQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUMsRUFDRCxLQUFLLEVBQ0wsT0FBTyxDQUNSLENBQUM7QUFDSixDQUFDO0FBRUQsTUFBTSxVQUFVLGtCQUFrQixDQUNoQyxPQUFjLEVBQ2QsUUFBZSxFQUNmLEtBQWEsRUFDYixPQUFlO0lBRWYsT0FBTyxnQkFBZ0IsQ0FDckIsT0FBTyxFQUNQLFFBQVEsRUFDUixDQUFDLEtBQWEsRUFBRSxPQUFjLEVBQUUsUUFBZSxFQUFFLEVBQUU7UUFDakQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQy9DLENBQUMsRUFDRCxLQUFLLEVB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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.d.ts
index a3f760d..07db71c 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.d.ts
@@ -47,31 +47,31 @@ export declare type V2GetCandidatePoolsParams = {
     chainId: ChainId;
 };
 export declare type MixedRouteGetCandidatePoolsParams = {
-    tokenIn: Token;
-    tokenOut: Token;
-    routeType: TradeType;
+    v3CandidatePools: V3CandidatePools;
+    v2CandidatePools: V2CandidatePools;
     routingConfig: AlphaRouterConfig;
-    v2subgraphProvider: IV2SubgraphProvider;
-    v3subgraphProvider: IV3SubgraphProvider;
     tokenProvider: ITokenProvider;
     v2poolProvider: IV2PoolProvider;
     v3poolProvider: IV3PoolProvider;
     blockedTokenListProvider?: ITokenListProvider;
     chainId: ChainId;
 };
-export declare function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }: V3GetCandidatePoolsParams): Promise<{
+export declare type V3CandidatePools = {
     poolAccessor: V3PoolAccessor;
     candidatePools: CandidatePoolsBySelectionCriteria;
     subgraphPools: V3SubgraphPool[];
-}>;
-export declare function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }: V2GetCandidatePoolsParams): Promise<{
+};
+export declare function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }: V3GetCandidatePoolsParams): Promise<V3CandidatePools>;
+export declare type V2CandidatePools = {
     poolAccessor: V2PoolAccessor;
     candidatePools: CandidatePoolsBySelectionCriteria;
     subgraphPools: V2SubgraphPool[];
-}>;
-export declare function getMixedRouteCandidatePools({ tokenIn, tokenOut, routeType, routingConfig, v3subgraphProvider, v2subgraphProvider, tokenProvider, v3poolProvider, v2poolProvider, blockedTokenListProvider, chainId, }: MixedRouteGetCandidatePoolsParams): Promise<{
+};
+export declare function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }: V2GetCandidatePoolsParams): Promise<V2CandidatePools>;
+export declare type MixedCandidatePools = {
     V2poolAccessor: V2PoolAccessor;
     V3poolAccessor: V3PoolAccessor;
     candidatePools: CandidatePoolsBySelectionCriteria;
     subgraphPools: (V2SubgraphPool | V3SubgraphPool)[];
-}>;
+};
+export declare function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools, routingConfig, tokenProvider, v3poolProvider, v2poolProvider, }: MixedRouteGetCandidatePoolsParams): Promise<MixedCandidatePools>;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.js
index e7bc620..5a53ece 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/functions/get-candidate-pools.js
@@ -2,9 +2,9 @@ import { Protocol } from '@uniswap/router-sdk';
 import { ChainId, TradeType } from '@uniswap/sdk-core';
 import { FeeAmount } from '@uniswap/v3-sdk';
 import _ from 'lodash';
-import { CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_POLYGON_MUMBAI, DAI_SEPOLIA, FEI_MAINNET, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_ETHEREUM_GNOSIS, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_POLYGON, USDC_SEPOLIA, USDT_ARBITRUM, USDT_BNB, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISM_GOERLI, WGLMR_MOONBEAM, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS, } from '../../../providers/token-provider';
-import { WRAPPED_NATIVE_CURRENCY } from '../../../util';
-import { parseFeeAmount, unparseFeeAmount } from '../../../util/amounts';
+import { CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_POLYGON_MUMBAI, DAI_SEPOLIA, FEI_MAINNET, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_ETHEREUM_GNOSIS, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_POLYGON, USDC_SEPOLIA, USDT_ARBITRUM, USDT_BNB, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, USDT_TENET, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISM_GOERLI, WGLMR_MOONBEAM, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS, } from '../../../providers/token-provider';
+import { unparseFeeAmount, WRAPPED_NATIVE_CURRENCY } from '../../../util';
+import { parseFeeAmount } from '../../../util/amounts';
 import { log } from '../../../util/log';
 import { metric, MetricLoggerUnit } from '../../../util/metric';
 const baseTokensByChain = {
@@ -66,47 +66,52 @@ const baseTokensByChain = {
     [ChainId.BASE]: [
         USDC_BASE,
     ],
+    [ChainId.TENET]: [
+        USDT_TENET
+    ]
 };
+class SubcategorySelectionPools {
+    constructor(pools, poolsNeeded) {
+        this.pools = pools;
+        this.poolsNeeded = poolsNeeded;
+    }
+    hasEnoughPools() {
+        return this.pools.length >= this.poolsNeeded;
+    }
+}
 export async function getV3CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }) {
     var _a, _b, _c, _d, _e;
     const { blockNumber, v3PoolSelection: { topN, topNDirectSwaps, topNTokenInOut, topNSecondHop, topNSecondHopForTokenAddress, topNWithEachBaseToken, topNWithBaseToken, }, } = routingConfig;
     const tokenInAddress = tokenIn.address.toLowerCase();
     const tokenOutAddress = tokenOut.address.toLowerCase();
     const beforeSubgraphPools = Date.now();
-    const allPoolsRaw = await subgraphProvider.getPools(tokenIn, tokenOut, {
+    const allPools = await subgraphProvider.getPools(tokenIn, tokenOut, {
         blockNumber,
     });
-    log.info({ samplePools: allPoolsRaw.slice(0, 3) }, 'Got all pools from V3 subgraph provider');
-    const allPools = _.map(allPoolsRaw, (pool) => {
-        return {
-            ...pool,
-            token0: {
-                ...pool.token0,
-                id: pool.token0.id.toLowerCase(),
-            },
-            token1: {
-                ...pool.token1,
-                id: pool.token1.id.toLowerCase(),
-            },
-        };
-    });
+    log.info({ samplePools: allPools.slice(0, 3) }, 'Got all pools from V3 subgraph provider');
+    // Although this is less of an optimization than the V2 equivalent,
+    // save some time copying objects by mutating the underlying pool directly.
+    for (const pool of allPools) {
+        pool.token0.id = pool.token0.id.toLowerCase();
+        pool.token1.id = pool.token1.id.toLowerCase();
+    }
     metric.putMetric('V3SubgraphPoolsLoad', Date.now() - beforeSubgraphPools, MetricLoggerUnit.Milliseconds);
+    const beforePoolsFiltered = Date.now();
     // Only consider pools where neither tokens are in the blocked token list.
     let filteredPools = allPools;
     if (blockedTokenListProvider) {
         filteredPools = [];
         for (const pool of allPools) {
-            const token0InBlocklist = await blockedTokenListProvider.getTokenByAddress(pool.token0.id);
-            const token1InBlocklist = await blockedTokenListProvider.getTokenByAddress(pool.token1.id);
+            const token0InBlocklist = await blockedTokenListProvider.hasTokenByAddress(pool.token0.id);
+            const token1InBlocklist = await blockedTokenListProvider.hasTokenByAddress(pool.token1.id);
             if (token0InBlocklist || token1InBlocklist) {
                 continue;
             }
             filteredPools.push(pool);
         }
     }
-    const subgraphPoolsSorted = _(filteredPools)
-        .sortBy((tokenListPool) => -tokenListPool.tvlUSD)
-        .value();
+    // Sort by tvlUSD in descending order
+    const subgraphPoolsSorted = filteredPools.sort((a, b) => b.tvlUSD - a.tvlUSD);
     log.info(`After filtering blocked tokens went from ${allPools.length} to ${subgraphPoolsSorted.length}.`);
     const poolAddressesSoFar = new Set();
     const addToAddressSet = (pools) => {
@@ -181,7 +186,7 @@ export async function getV3CandidatePools({ tokenIn, tokenOut, routeType, routin
         });
     }
     addToAddressSet(top2DirectSwapPool);
-    const wrappedNativeAddress = (_b = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _b === void 0 ? void 0 : _b.address;
+    const wrappedNativeAddress = (_b = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _b === void 0 ? void 0 : _b.address.toLowerCase();
     // Main reason we need this is for gas estimates, only needed if token out is not native.
     // We don't check the seen address set because if we've already added pools for getting native quotes
     // theres no need to add more.
@@ -334,6 +339,7 @@ export async function getV3CandidatePools({ tokenIn, tokenOut, routeType, routin
         return [tokenA, tokenB, fee];
     });
     const tokenPairs = _.compact(tokenPairsRaw);
+    metric.putMetric('V3PoolsFilterLoad', Date.now() - beforePoolsFiltered, MetricLoggerUnit.Milliseconds);
     const beforePoolsLoad = Date.now();
     const poolAccessor = await poolProvider.getPools(tokenPairs, {
         blockNumber,
@@ -357,91 +363,31 @@ export async function getV3CandidatePools({ tokenIn, tokenOut, routeType, routin
 }
 export async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routingConfig, subgraphProvider, tokenProvider, poolProvider, blockedTokenListProvider, chainId, }) {
     var _a;
-    const { blockNumber, v2PoolSelection: { topN, topNDirectSwaps, topNTokenInOut, topNSecondHop, topNWithEachBaseToken, topNWithBaseToken, }, } = routingConfig;
+    const { blockNumber, v2PoolSelection: { topN, topNDirectSwaps, topNTokenInOut, topNSecondHop, topNWithEachBaseToken, topNWithBaseToken, }, debugRouting, } = routingConfig;
     const tokenInAddress = tokenIn.address.toLowerCase();
     const tokenOutAddress = tokenOut.address.toLowerCase();
     const beforeSubgraphPools = Date.now();
     const allPoolsRaw = await subgraphProvider.getPools(tokenIn, tokenOut, {
         blockNumber,
     });
-    const allPools = _.map(allPoolsRaw, (pool) => {
-        return {
-            ...pool,
-            token0: {
-                ...pool.token0,
-                id: pool.token0.id.toLowerCase(),
-            },
-            token1: {
-                ...pool.token1,
-                id: pool.token1.id.toLowerCase(),
-            },
-        };
-    });
-    metric.putMetric('V2SubgraphPoolsLoad', Date.now() - beforeSubgraphPools, MetricLoggerUnit.Milliseconds);
-    // Only consider pools where neither tokens are in the blocked token list.
-    let filteredPools = allPools;
-    if (blockedTokenListProvider) {
-        filteredPools = [];
-        for (const pool of allPools) {
-            const token0InBlocklist = await blockedTokenListProvider.getTokenByAddress(pool.token0.id);
-            const token1InBlocklist = await blockedTokenListProvider.getTokenByAddress(pool.token1.id);
-            if (token0InBlocklist || token1InBlocklist) {
-                continue;
-            }
-            filteredPools.push(pool);
-        }
+    // With tens of thousands of V2 pools, operations that copy pools become costly.
+    // Mutate the pool directly rather than creating a new pool / token to optimmize for speed.
+    for (const pool of allPoolsRaw) {
+        pool.token0.id = pool.token0.id.toLowerCase();
+        pool.token1.id = pool.token1.id.toLowerCase();
     }
-    const subgraphPoolsSorted = _(filteredPools)
-        .sortBy((tokenListPool) => -tokenListPool.reserve)
-        .value();
-    log.info(`After filtering blocked tokens went from ${allPools.length} to ${subgraphPoolsSorted.length}.`);
+    metric.putMetric('V2SubgraphPoolsLoad', Date.now() - beforeSubgraphPools, MetricLoggerUnit.Milliseconds);
+    const beforePoolsFiltered = Date.now();
+    // Sort by pool reserve in descending order.
+    const subgraphPoolsSorted = allPoolsRaw.sort((a, b) => b.reserve - a.reserve);
     const poolAddressesSoFar = new Set();
-    const addToAddressSet = (pools) => {
-        _(pools)
-            .map((pool) => pool.id)
-            .forEach((poolAddress) => poolAddressesSoFar.add(poolAddress));
-    };
-    const baseTokens = (_a = baseTokensByChain[chainId]) !== null && _a !== void 0 ? _a : [];
-    const topByBaseWithTokenIn = _(baseTokens)
-        .flatMap((token) => {
-        return _(subgraphPoolsSorted)
-            .filter((subgraphPool) => {
-            const tokenAddress = token.address.toLowerCase();
-            return ((subgraphPool.token0.id == tokenAddress &&
-                subgraphPool.token1.id == tokenInAddress) ||
-                (subgraphPool.token1.id == tokenAddress &&
-                    subgraphPool.token0.id == tokenInAddress));
-        })
-            .sortBy((tokenListPool) => -tokenListPool.reserve)
-            .slice(0, topNWithEachBaseToken)
-            .value();
-    })
-        .sortBy((tokenListPool) => -tokenListPool.reserve)
-        .slice(0, topNWithBaseToken)
-        .value();
-    const topByBaseWithTokenOut = _(baseTokens)
-        .flatMap((token) => {
-        return _(subgraphPoolsSorted)
-            .filter((subgraphPool) => {
-            const tokenAddress = token.address.toLowerCase();
-            return ((subgraphPool.token0.id == tokenAddress &&
-                subgraphPool.token1.id == tokenOutAddress) ||
-                (subgraphPool.token1.id == tokenAddress &&
-                    subgraphPool.token0.id == tokenOutAddress));
-        })
-            .sortBy((tokenListPool) => -tokenListPool.reserve)
-            .slice(0, topNWithEachBaseToken)
-            .value();
-    })
-        .sortBy((tokenListPool) => -tokenListPool.reserve)
-        .slice(0, topNWithBaseToken)
-        .value();
     // Always add the direct swap pool into the mix regardless of if it exists in the subgraph pool list.
     // Ensures that new pools can be swapped on immediately, and that if a pool was filtered out of the
     // subgraph query for some reason (e.g. trackedReserveETH was 0), then we still consider it.
     let topByDirectSwapPool = [];
-    if (topNDirectSwaps != 0) {
+    if (topNDirectSwaps > 0) {
         const { token0, token1, poolAddress } = poolProvider.getPoolAddress(tokenIn, tokenOut);
+        poolAddressesSoFar.add(poolAddress.toLowerCase());
         topByDirectSwapPool = [
             {
                 id: poolAddress,
@@ -457,98 +403,244 @@ export async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routin
             },
         ];
     }
-    addToAddressSet(topByDirectSwapPool);
-    const wethAddress = WRAPPED_NATIVE_CURRENCY[chainId].address;
-    // Main reason we need this is for gas estimates, only needed if token out is not ETH.
-    // We don't check the seen address set because if we've already added pools for getting ETH quotes
-    // theres no need to add more.
-    // Note: we do not need to check other native currencies for the V2 Protocol
-    let topByEthQuoteTokenPool = [];
-    if (tokenOut.symbol != 'WETH' &&
-        tokenOut.symbol != 'WETH9' &&
-        tokenOut.symbol != 'ETH') {
-        topByEthQuoteTokenPool = _(subgraphPoolsSorted)
-            .filter((subgraphPool) => {
-            if (routeType == TradeType.EXACT_INPUT) {
-                return ((subgraphPool.token0.id == wethAddress &&
-                    subgraphPool.token1.id == tokenOutAddress) ||
-                    (subgraphPool.token1.id == wethAddress &&
-                        subgraphPool.token0.id == tokenOutAddress));
+    const wethAddress = WRAPPED_NATIVE_CURRENCY[chainId].address.toLowerCase();
+    const topByBaseWithTokenInMap = new Map();
+    const topByBaseWithTokenOutMap = new Map();
+    const baseTokens = (_a = baseTokensByChain[chainId]) !== null && _a !== void 0 ? _a : [];
+    const baseTokensAddresses = new Set();
+    baseTokens.forEach((token) => {
+        const baseTokenAddr = token.address.toLowerCase();
+        baseTokensAddresses.add(baseTokenAddr);
+        topByBaseWithTokenInMap.set(baseTokenAddr, new SubcategorySelectionPools([], topNWithEachBaseToken));
+        topByBaseWithTokenOutMap.set(baseTokenAddr, new SubcategorySelectionPools([], topNWithEachBaseToken));
+    });
+    let topByBaseWithTokenInPoolsFound = 0;
+    let topByBaseWithTokenOutPoolsFound = 0;
+    // Main reason we need this is for gas estimates
+    // There can ever only be 1 Token/ETH pool, so we will only look for 1
+    let topNEthQuoteToken = 1;
+    // but, we only need it if token out is not ETH.
+    if (tokenOut.symbol == 'WETH' || tokenOut.symbol == 'WETH9' || tokenOut.symbol == 'ETH') {
+        // if it's eth we change the topN to 0, so we can break early from the loop.
+        topNEthQuoteToken = 0;
+    }
+    const topByEthQuoteTokenPool = [];
+    const topByTVLUsingTokenIn = [];
+    const topByTVLUsingTokenOut = [];
+    const topByTVL = [];
+    // Used to track how many iterations we do in the first loop
+    let loopsInFirstIteration = 0;
+    // Filtering step for up to first hop
+    // The pools are pre-sorted, so we can just iterate through them and fill our heuristics.
+    for (const subgraphPool of subgraphPoolsSorted) {
+        loopsInFirstIteration += 1;
+        // Check if we have satisfied all the heuristics, if so, we can stop.
+        if (topByBaseWithTokenInPoolsFound >= topNWithBaseToken &&
+            topByBaseWithTokenOutPoolsFound >= topNWithBaseToken &&
+            topByEthQuoteTokenPool.length >= topNEthQuoteToken &&
+            topByTVL.length >= topN &&
+            topByTVLUsingTokenIn.length >= topNTokenInOut &&
+            topByTVLUsingTokenOut.length >= topNTokenInOut) {
+            // We have satisfied all the heuristics, so we can stop.
+            break;
+        }
+        if (poolAddressesSoFar.has(subgraphPool.id)) {
+            // We've already added this pool, so skip it.
+            continue;
+        }
+        // Only consider pools where neither tokens are in the blocked token list.
+        if (blockedTokenListProvider) {
+            const [token0InBlocklist, token1InBlocklist] = await Promise.all([
+                blockedTokenListProvider.hasTokenByAddress(subgraphPool.token0.id),
+                blockedTokenListProvider.hasTokenByAddress(subgraphPool.token1.id)
+            ]);
+            if (token0InBlocklist || token1InBlocklist) {
+                continue;
             }
-            else {
-                return ((subgraphPool.token0.id == wethAddress &&
-                    subgraphPool.token1.id == tokenInAddress) ||
-                    (subgraphPool.token1.id == wethAddress &&
-                        subgraphPool.token0.id == tokenInAddress));
+        }
+        const tokenInToken0TopByBase = topByBaseWithTokenInMap.get(subgraphPool.token0.id);
+        if (topByBaseWithTokenInPoolsFound < topNWithBaseToken &&
+            tokenInToken0TopByBase &&
+            subgraphPool.token0.id != tokenOutAddress &&
+            subgraphPool.token1.id == tokenInAddress) {
+            topByBaseWithTokenInPoolsFound += 1;
+            poolAddressesSoFar.add(subgraphPool.id);
+            if (topByTVLUsingTokenIn.length < topNTokenInOut) {
+                topByTVLUsingTokenIn.push(subgraphPool);
             }
-        })
-            .slice(0, 1)
-            .value();
+            if (routeType === TradeType.EXACT_OUTPUT && subgraphPool.token0.id == wethAddress) {
+                topByEthQuoteTokenPool.push(subgraphPool);
+            }
+            tokenInToken0TopByBase.pools.push(subgraphPool);
+            continue;
+        }
+        const tokenInToken1TopByBase = topByBaseWithTokenInMap.get(subgraphPool.token1.id);
+        if (topByBaseWithTokenInPoolsFound < topNWithBaseToken &&
+            tokenInToken1TopByBase &&
+            subgraphPool.token0.id == tokenInAddress &&
+            subgraphPool.token1.id != tokenOutAddress) {
+            topByBaseWithTokenInPoolsFound += 1;
+            poolAddressesSoFar.add(subgraphPool.id);
+            if (topByTVLUsingTokenIn.length < topNTokenInOut) {
+                topByTVLUsingTokenIn.push(subgraphPool);
+            }
+            if (routeType === TradeType.EXACT_OUTPUT && subgraphPool.token1.id == wethAddress) {
+                topByEthQuoteTokenPool.push(subgraphPool);
+            }
+            tokenInToken1TopByBase.pools.push(subgraphPool);
+            continue;
+        }
+        const tokenOutToken0TopByBase = topByBaseWithTokenOutMap.get(subgraphPool.token0.id);
+        if (topByBaseWithTokenOutPoolsFound < topNWithBaseToken &&
+            tokenOutToken0TopByBase &&
+            subgraphPool.token0.id != tokenInAddress &&
+            subgraphPool.token1.id == tokenOutAddress) {
+            topByBaseWithTokenOutPoolsFound += 1;
+            poolAddressesSoFar.add(subgraphPool.id);
+            if (topByTVLUsingTokenOut.length < topNTokenInOut) {
+                topByTVLUsingTokenOut.push(subgraphPool);
+            }
+            if (routeType === TradeType.EXACT_INPUT && subgraphPool.token0.id == wethAddress) {
+                topByEthQuoteTokenPool.push(subgraphPool);
+            }
+            tokenOutToken0TopByBase.pools.push(subgraphPool);
+            continue;
+        }
+        const tokenOutToken1TopByBase = topByBaseWithTokenOutMap.get(subgraphPool.token1.id);
+        if (topByBaseWithTokenOutPoolsFound < topNWithBaseToken &&
+            tokenOutToken1TopByBase &&
+            subgraphPool.token0.id == tokenOutAddress &&
+            subgraphPool.token1.id != tokenInAddress) {
+            topByBaseWithTokenOutPoolsFound += 1;
+            poolAddressesSoFar.add(subgraphPool.id);
+            if (topByTVLUsingTokenOut.length < topNTokenInOut) {
+                topByTVLUsingTokenOut.push(subgraphPool);
+            }
+            if (routeType === TradeType.EXACT_INPUT && subgraphPool.token1.id == wethAddress) {
+                topByEthQuoteTokenPool.push(subgraphPool);
+            }
+            tokenOutToken1TopByBase.pools.push(subgraphPool);
+            continue;
+        }
+        // Note: we do not need to check other native currencies for the V2 Protocol
+        if (topByEthQuoteTokenPool.length < topNEthQuoteToken &&
+            (routeType === TradeType.EXACT_INPUT && ((subgraphPool.token0.id == wethAddress && subgraphPool.token1.id == tokenOutAddress) ||
+                (subgraphPool.token1.id == wethAddress && subgraphPool.token0.id == tokenOutAddress)) ||
+                routeType === TradeType.EXACT_OUTPUT && ((subgraphPool.token0.id == wethAddress && subgraphPool.token1.id == tokenInAddress) ||
+                    (subgraphPool.token1.id == wethAddress && subgraphPool.token0.id == tokenInAddress)))) {
+            poolAddressesSoFar.add(subgraphPool.id);
+            topByEthQuoteTokenPool.push(subgraphPool);
+            continue;
+        }
+        if (topByTVL.length < topN) {
+            poolAddressesSoFar.add(subgraphPool.id);
+            topByTVL.push(subgraphPool);
+            continue;
+        }
+        if (topByTVLUsingTokenIn.length < topNTokenInOut &&
+            (subgraphPool.token0.id == tokenInAddress || subgraphPool.token1.id == tokenInAddress)) {
+            poolAddressesSoFar.add(subgraphPool.id);
+            topByTVLUsingTokenIn.push(subgraphPool);
+            continue;
+        }
+        if (topByTVLUsingTokenOut.length < topNTokenInOut &&
+            (subgraphPool.token0.id == tokenOutAddress || subgraphPool.token1.id == tokenOutAddress)) {
+            poolAddressesSoFar.add(subgraphPool.id);
+            topByTVLUsingTokenOut.push(subgraphPool);
+            continue;
+        }
+    }
+    metric.putMetric('V2SubgraphLoopsInFirstIteration', loopsInFirstIteration, MetricLoggerUnit.Count);
+    const topByBaseWithTokenIn = [];
+    for (const topByBaseWithTokenInSelection of topByBaseWithTokenInMap.values()) {
+        topByBaseWithTokenIn.push(...topByBaseWithTokenInSelection.pools);
+    }
+    const topByBaseWithTokenOut = [];
+    for (const topByBaseWithTokenOutSelection of topByBaseWithTokenOutMap.values()) {
+        topByBaseWithTokenOut.push(...topByBaseWithTokenOutSelection.pools);
+    }
+    // Filtering step for second hops
+    const topByTVLUsingTokenInSecondHopsMap = new Map();
+    const topByTVLUsingTokenOutSecondHopsMap = new Map();
+    const tokenInSecondHopAddresses = topByTVLUsingTokenIn.map((pool) => tokenInAddress == pool.token0.id ? pool.token1.id : pool.token0.id);
+    const tokenOutSecondHopAddresses = topByTVLUsingTokenOut.map((pool) => tokenOutAddress == pool.token0.id ? pool.token1.id : pool.token0.id);
+    for (const secondHopId of tokenInSecondHopAddresses) {
+        topByTVLUsingTokenInSecondHopsMap.set(secondHopId, new SubcategorySelectionPools([], topNSecondHop));
+    }
+    for (const secondHopId of tokenOutSecondHopAddresses) {
+        topByTVLUsingTokenOutSecondHopsMap.set(secondHopId, new SubcategorySelectionPools([], topNSecondHop));
+    }
+    // Used to track how many iterations we do in the second loop
+    let loopsInSecondIteration = 0;
+    if (tokenInSecondHopAddresses.length > 0 || tokenOutSecondHopAddresses.length > 0) {
+        for (const subgraphPool of subgraphPoolsSorted) {
+            loopsInSecondIteration += 1;
+            let allTokenInSecondHopsHaveTheirTopN = true;
+            for (const secondHopPools of topByTVLUsingTokenInSecondHopsMap.values()) {
+                if (!secondHopPools.hasEnoughPools()) {
+                    allTokenInSecondHopsHaveTheirTopN = false;
+                    break;
+                }
+            }
+            let allTokenOutSecondHopsHaveTheirTopN = true;
+            for (const secondHopPools of topByTVLUsingTokenOutSecondHopsMap.values()) {
+                if (!secondHopPools.hasEnoughPools()) {
+                    allTokenOutSecondHopsHaveTheirTopN = false;
+                    break;
+                }
+            }
+            if (allTokenInSecondHopsHaveTheirTopN && allTokenOutSecondHopsHaveTheirTopN) {
+                // We have satisfied all the heuristics, so we can stop.
+                break;
+            }
+            if (poolAddressesSoFar.has(subgraphPool.id)) {
+                continue;
+            }
+            // Only consider pools where neither tokens are in the blocked token list.
+            if (blockedTokenListProvider) {
+                const [token0InBlocklist, token1InBlocklist] = await Promise.all([
+                    blockedTokenListProvider.hasTokenByAddress(subgraphPool.token0.id),
+                    blockedTokenListProvider.hasTokenByAddress(subgraphPool.token1.id)
+                ]);
+                if (token0InBlocklist || token1InBlocklist) {
+                    continue;
+                }
+            }
+            const tokenInToken0SecondHop = topByTVLUsingTokenInSecondHopsMap.get(subgraphPool.token0.id);
+            if (tokenInToken0SecondHop && !tokenInToken0SecondHop.hasEnoughPools()) {
+                poolAddressesSoFar.add(subgraphPool.id);
+                tokenInToken0SecondHop.pools.push(subgraphPool);
+                continue;
+            }
+            const tokenInToken1SecondHop = topByTVLUsingTokenInSecondHopsMap.get(subgraphPool.token1.id);
+            if (tokenInToken1SecondHop && !tokenInToken1SecondHop.hasEnoughPools()) {
+                poolAddressesSoFar.add(subgraphPool.id);
+                tokenInToken1SecondHop.pools.push(subgraphPool);
+                continue;
+            }
+            const tokenOutToken0SecondHop = topByTVLUsingTokenOutSecondHopsMap.get(subgraphPool.token0.id);
+            if (tokenOutToken0SecondHop && !tokenOutToken0SecondHop.hasEnoughPools()) {
+                poolAddressesSoFar.add(subgraphPool.id);
+                tokenOutToken0SecondHop.pools.push(subgraphPool);
+                continue;
+            }
+            const tokenOutToken1SecondHop = topByTVLUsingTokenOutSecondHopsMap.get(subgraphPool.token1.id);
+            if (tokenOutToken1SecondHop && !tokenOutToken1SecondHop.hasEnoughPools()) {
+                poolAddressesSoFar.add(subgraphPool.id);
+                tokenOutToken1SecondHop.pools.push(subgraphPool);
+                continue;
+            }
+        }
+    }
+    metric.putMetric('V2SubgraphLoopsInSecondIteration', loopsInSecondIteration, MetricLoggerUnit.Count);
+    const topByTVLUsingTokenInSecondHops = [];
+    for (const secondHopPools of topByTVLUsingTokenInSecondHopsMap.values()) {
+        topByTVLUsingTokenInSecondHops.push(...secondHopPools.pools);
+    }
+    const topByTVLUsingTokenOutSecondHops = [];
+    for (const secondHopPools of topByTVLUsingTokenOutSecondHopsMap.values()) {
+        topByTVLUsingTokenOutSecondHops.push(...secondHopPools.pools);
     }
-    addToAddressSet(topByEthQuoteTokenPool);
-    const topByTVL = _(subgraphPoolsSorted)
-        .filter((subgraphPool) => {
-        return !poolAddressesSoFar.has(subgraphPool.id);
-    })
-        .slice(0, topN)
-        .value();
-    addToAddressSet(topByTVL);
-    const topByTVLUsingTokenIn = _(subgraphPoolsSorted)
-        .filter((subgraphPool) => {
-        return (!poolAddressesSoFar.has(subgraphPool.id) &&
-            (subgraphPool.token0.id == tokenInAddress ||
-                subgraphPool.token1.id == tokenInAddress));
-    })
-        .slice(0, topNTokenInOut)
-        .value();
-    addToAddressSet(topByTVLUsingTokenIn);
-    const topByTVLUsingTokenOut = _(subgraphPoolsSorted)
-        .filter((subgraphPool) => {
-        return (!poolAddressesSoFar.has(subgraphPool.id) &&
-            (subgraphPool.token0.id == tokenOutAddress ||
-                subgraphPool.token1.id == tokenOutAddress));
-    })
-        .slice(0, topNTokenInOut)
-        .value();
-    addToAddressSet(topByTVLUsingTokenOut);
-    const topByTVLUsingTokenInSecondHops = _(topByTVLUsingTokenIn)
-        .map((subgraphPool) => {
-        return tokenInAddress == subgraphPool.token0.id
-            ? subgraphPool.token1.id
-            : subgraphPool.token0.id;
-    })
-        .flatMap((secondHopId) => {
-        return _(subgraphPoolsSorted)
-            .filter((subgraphPool) => {
-            return (!poolAddressesSoFar.has(subgraphPool.id) &&
-                (subgraphPool.token0.id == secondHopId ||
-                    subgraphPool.token1.id == secondHopId));
-        })
-            .slice(0, topNSecondHop)
-            .value();
-    })
-        .uniqBy((pool) => pool.id)
-        .value();
-    addToAddressSet(topByTVLUsingTokenInSecondHops);
-    const topByTVLUsingTokenOutSecondHops = _(topByTVLUsingTokenOut)
-        .map((subgraphPool) => {
-        return tokenOutAddress == subgraphPool.token0.id
-            ? subgraphPool.token1.id
-            : subgraphPool.token0.id;
-    })
-        .flatMap((secondHopId) => {
-        return _(subgraphPoolsSorted)
-            .filter((subgraphPool) => {
-            return (!poolAddressesSoFar.has(subgraphPool.id) &&
-                (subgraphPool.token0.id == secondHopId ||
-                    subgraphPool.token1.id == secondHopId));
-        })
-            .slice(0, topNSecondHop)
-            .value();
-    })
-        .uniqBy((pool) => pool.id)
-        .value();
-    addToAddressSet(topByTVLUsingTokenOutSecondHops);
     const subgraphPools = _([
         ...topByBaseWithTokenIn,
         ...topByBaseWithTokenOut,
@@ -560,14 +652,14 @@ export async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routin
         ...topByTVLUsingTokenInSecondHops,
         ...topByTVLUsingTokenOutSecondHops,
     ])
-        .compact()
         .uniqBy((pool) => pool.id)
         .value();
-    const tokenAddresses = _(subgraphPools)
-        .flatMap((subgraphPool) => [subgraphPool.token0.id, subgraphPool.token1.id])
-        .compact()
-        .uniq()
-        .value();
+    const tokenAddressesSet = new Set();
+    for (const pool of subgraphPools) {
+        tokenAddressesSet.add(pool.token0.id);
+        tokenAddressesSet.add(pool.token1.id);
+    }
+    const tokenAddresses = Array.from(tokenAddressesSet);
     log.info(`Getting the ${tokenAddresses.length} tokens within the ${subgraphPools.length} V2 pools we are considering`);
     const tokenAccessor = await tokenProvider.getTokens(tokenAddresses, {
         blockNumber,
@@ -597,8 +689,9 @@ export async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routin
         return [tokenA, tokenB];
     });
     const tokenPairs = _.compact(tokenPairsRaw);
+    metric.putMetric('V2PoolsFilterLoad', Date.now() - beforePoolsFiltered, MetricLoggerUnit.Milliseconds);
     const beforePoolsLoad = Date.now();
-    const poolAccessor = await poolProvider.getPools(tokenPairs, { blockNumber });
+    const poolAccessor = await poolProvider.getPools(tokenPairs, { blockNumber, debugRouting });
     metric.putMetric('V2PoolsLoad', Date.now() - beforePoolsLoad, MetricLoggerUnit.Milliseconds);
     const poolsBySelection = {
         protocol: Protocol.V2,
@@ -606,7 +699,7 @@ export async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routin
             topByBaseWithTokenIn,
             topByBaseWithTokenOut,
             topByDirectSwapPool,
-            topByEthQuoteTokenPool: topByEthQuoteTokenPool,
+            topByEthQuoteTokenPool,
             topByTVL,
             topByTVLUsingTokenIn,
             topByTVLUsingTokenOut,
@@ -616,30 +709,12 @@ export async function getV2CandidatePools({ tokenIn, tokenOut, routeType, routin
     };
     return { poolAccessor, candidatePools: poolsBySelection, subgraphPools };
 }
-export async function getMixedRouteCandidatePools({ tokenIn, tokenOut, routeType, routingConfig, v3subgraphProvider, v2subgraphProvider, tokenProvider, v3poolProvider, v2poolProvider, blockedTokenListProvider, chainId, }) {
-    const { blockNumber } = routingConfig;
-    const { subgraphPools: V3subgraphPools, candidatePools: V3candidatePools } = await getV3CandidatePools({
-        tokenIn,
-        tokenOut,
-        tokenProvider,
-        blockedTokenListProvider,
-        poolProvider: v3poolProvider,
-        routeType,
-        subgraphProvider: v3subgraphProvider,
-        routingConfig,
-        chainId,
-    });
-    const { subgraphPools: V2subgraphPools, candidatePools: V2candidatePools } = await getV2CandidatePools({
-        tokenIn,
-        tokenOut,
-        tokenProvider,
-        blockedTokenListProvider,
-        poolProvider: v2poolProvider,
-        routeType,
-        subgraphProvider: v2subgraphProvider,
-        routingConfig,
-        chainId,
-    });
+export async function getMixedRouteCandidatePools({ v3CandidatePools, v2CandidatePools, routingConfig, tokenProvider, v3poolProvider, v2poolProvider, }) {
+    const beforeSubgraphPools = Date.now();
+    const { blockNumber, debugRouting } = routingConfig;
+    const [{ subgraphPools: V3subgraphPools, candidatePools: V3candidatePools }, { subgraphPools: V2subgraphPools, candidatePools: V2candidatePools }] = [v3CandidatePools, v2CandidatePools];
+    metric.putMetric('MixedSubgraphPoolsLoad', Date.now() - beforeSubgraphPools, MetricLoggerUnit.Milliseconds);
+    const beforePoolsFiltered = Date.now();
     /**
      * Main heuristic for pruning mixedRoutes:
      * - we pick V2 pools with higher liq than respective V3 pools, or if the v3 pool doesn't exist
@@ -731,14 +806,19 @@ export async function getMixedRouteCandidatePools({ tokenIn, tokenOut, routeType
         return [tokenA, tokenB];
     });
     const V2tokenPairs = _.compact(V2tokenPairsRaw);
+    metric.putMetric('MixedPoolsFilterLoad', Date.now() - beforePoolsFiltered, MetricLoggerUnit.Milliseconds);
+    const beforePoolsLoad = Date.now();
     const [V2poolAccessor, V3poolAccessor] = await Promise.all([
         v2poolProvider.getPools(V2tokenPairs, {
             blockNumber,
+            debugRouting,
         }),
         v3poolProvider.getPools(V3tokenPairs, {
             blockNumber,
+            debugRouting
         }),
     ]);
+    metric.putMetric('MixedPoolsLoad', Date.now() - beforePoolsLoad, MetricLoggerUnit.Milliseconds);
     /// @dev a bit tricky here since the original V2CandidateSelections object included pools that we may have dropped
     /// as part of the heuristic. We need to reconstruct a new object with the v3 pools too.
     const buildPoolsBySelection = (key) => {
@@ -768,4 +848,4 @@ export async function getMixedRouteCandidatePools({ tokenIn, tokenOut, routeType
         subgraphPools,
     };
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.d.ts
index ac30e39..b21f426 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.d.ts
@@ -29,6 +29,7 @@ export declare type BuildV2GasModelFactoryType = {
     gasPriceWei: BigNumber;
     poolProvider: IV2PoolProvider;
     token: Token;
+    providerConfig?: ProviderConfig;
 };
 export declare type LiquidityCalculationPools = {
     usdPool: Pool;
@@ -71,7 +72,7 @@ export declare type IGasModel<TRouteWithValidQuote extends RouteWithValidQuote>
  * @class IV2GasModelFactory
  */
 export declare abstract class IV2GasModelFactory {
-    abstract buildGasModel({ chainId, gasPriceWei, poolProvider, token, }: BuildV2GasModelFactoryType): Promise<IGasModel<V2RouteWithValidQuote>>;
+    abstract buildGasModel({ chainId, gasPriceWei, poolProvider, token, providerConfig, }: BuildV2GasModelFactoryType): Promise<IGasModel<V2RouteWithValidQuote>>;
 }
 /**
  * Factory for building gas models that can be used with any route to generate
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.js
index 97cba0c..2998fc8 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/gas-model.js
@@ -1,5 +1,5 @@
 import { ChainId } from '@uniswap/sdk-core';
-import { CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_GOERLI, DAI_MAINNET, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_POLYGON_MUMBAI, DAI_SEPOLIA, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_AVAX, USDC_BASE, USDC_BNB, USDC_ETHEREUM_GNOSIS, USDC_GOERLI, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_POLYGON, USDC_SEPOLIA, USDT_ARBITRUM, USDT_BNB, USDT_GOERLI, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, WBTC_GOERLI, } from '../../../providers/token-provider';
+import { CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_AVAX, DAI_BNB, DAI_GOERLI, DAI_MAINNET, DAI_OPTIMISM, DAI_OPTIMISM_GOERLI, DAI_POLYGON_MUMBAI, DAI_SEPOLIA, USDC_ARBITRUM, USDC_ARBITRUM_GOERLI, USDC_AVAX, USDC_BASE, USDT_TENET, USDC_BNB, USDC_ETHEREUM_GNOSIS, USDC_GOERLI, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISM_GOERLI, USDC_POLYGON, USDC_SEPOLIA, USDT_ARBITRUM, USDT_BNB, USDT_GOERLI, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISM_GOERLI, WBTC_GOERLI, } from '../../../providers/token-provider';
 // When adding new usd gas tokens, ensure the tokens are ordered
 // from tokens with highest decimals to lowest decimals. For example,
 // DAI_AVAX has 18 decimals and comes before USDC_AVAX which has 6 decimals.
@@ -24,6 +24,7 @@ export const usdGasTokensByChain = {
     [ChainId.BNB]: [USDT_BNB, USDC_BNB, DAI_BNB],
     [ChainId.AVALANCHE]: [DAI_AVAX, USDC_AVAX],
     [ChainId.BASE]: [USDC_BASE],
+    [ChainId.TENET]: [USDT_TENET],
 };
 /**
  * Factory for building gas models that can be used with any route to generate
@@ -51,4 +52,4 @@ export class IV2GasModelFactory {
  */
 export class IOnChainGasModelFactory {
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvZ2FzLW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxPQUFPLEVBQVMsTUFBTSxtQkFBbUIsQ0FBQztBQUluRCxPQUFPLEVBQ0wsU0FBUyxFQUNULG1CQUFtQixFQUNuQixZQUFZLEVBQ1osUUFBUSxFQUNSLE9BQU8sRUFDUCxVQUFVLEVBQ1YsV0FBVyxFQUNYLFlBQVksRUFDWixtQkFBbUIsRUFDbkIsa0JBQWtCLEVBQ2xCLFdBQVcsRUFDWCxhQUFhLEVBQ2Isb0JBQW9CLEVBQ3BCLFNBQVMsRUFDVCxTQUFTLEVBQ1QsUUFBUSxFQUNSLG9CQUFvQixFQUNwQixXQUFXLEVBQ1gsWUFBWSxFQUNaLGFBQWEsRUFDYixhQUFhLEVBQ2Isb0JBQW9CLEVBQ3BCLFlBQVksRUFDWixZQUFZLEVBQ1osYUFBYSxFQUNiLFFBQVEsRUFDUixXQUFXLEVBQ1gsWUFBWSxFQUNaLGFBQWEsRUFDYixvQkFBb0IsRUFDcEIsV0FBVyxHQUNaLE1BQU0sbUNBQW1DLENBQUM7QUFZM0MsaUVBQWlFO0FBQ2pFLHFFQUFxRTtBQUNyRSw0RUFBNEU7QUFDNUUsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQXVDO0lBQ3JFLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsV0FBVyxFQUFFLFlBQVksRUFBRSxZQUFZLENBQUM7SUFDNUQsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQUUsQ0FBQyxZQUFZLEVBQUUsYUFBYSxFQUFFLGFBQWEsQ0FBQztJQUNwRSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxhQUFhLEVBQUUsYUFBYSxDQUFDO0lBQ2hFLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFO1FBQ3pCLG1CQUFtQjtRQUNuQixvQkFBb0I7UUFDcEIsb0JBQW9CO0tBQ3JCO0lBQ0QsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztJQUNqRCxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLFVBQVUsRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLFdBQVcsQ0FBQztJQUNyRSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxXQUFXLENBQUM7SUFDOUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxZQUFZLENBQUM7SUFDakMsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztJQUM5QyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQztJQUMzQixDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLG1CQUFtQixDQUFDO0lBQy9DLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsb0JBQW9CLENBQUM7SUFDeEMsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUM7SUFDbkMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLE9BQU8sQ0FBQztJQUM1QyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUM7SUFDMUMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUM7Q0FDNUIsQ0FBQztBQTJERjs7Ozs7Ozs7OztHQVVHO0FBQ0gsTUFBTSxPQUFnQixrQkFBa0I7Q0FPdkM7QUFFRDs7Ozs7Ozs7OztHQVVHO0FBQ0gsTUFBTSxPQUFnQix1QkFBdUI7Q0FZNUMifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvZ2FzLW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxPQUFPLEVBQVMsTUFBTSxtQkFBbUIsQ0FBQztBQUluRCxPQUFPLEVBQ0wsU0FBUyxFQUNULG1CQUFtQixFQUNuQixZQUFZLEVBQ1osUUFBUSxFQUNSLE9BQU8sRUFDUCxVQUFVLEVBQ1YsV0FBVyxFQUNYLFlBQVksRUFDWixtQkFBbUIsRUFDbkIsa0JBQWtCLEVBQ2xCLFdBQVcsRUFDWCxhQUFhLEVBQ2Isb0JBQW9CLEVBQ3BCLFNBQVMsRUFDVCxTQUFTLEVBQUUsVUFBVSxFQUNyQixRQUFRLEVBQ1Isb0JBQW9CLEVBQ3BCLFdBQVcsRUFDWCxZQUFZLEVBQ1osYUFBYSxFQUNiLGFBQWEsRUFDYixvQkFBb0IsRUFDcEIsWUFBWSxFQUNaLFlBQVksRUFDWixhQUFhLEVBQ2IsUUFBUSxFQUNSLFdBQVcsRUFDWCxZQUFZLEVBQ1osYUFBYSxFQUNiLG9CQUFvQixFQUNwQixXQUFXLEdBQ1osTUFBTSxtQ0FBbUMsQ0FBQztBQWUzQyxnRUFBZ0U7QUFDaEUscUVBQXFFO0FBQ3JFLDRFQUE0RTtBQUM1RSxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBdUM7SUFDckUsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxXQUFXLEVBQUUsWUFBWSxFQUFFLFlBQVksQ0FBQztJQUM1RCxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLFlBQVksRUFBRSxhQUFhLEVBQUUsYUFBYSxDQUFDO0lBQ3BFLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLGFBQWEsRUFBRSxhQUFhLENBQUM7SUFDaEUsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUU7UUFDekIsbUJBQW1CO1FBQ25CLG9CQUFvQjtRQUNwQixvQkFBb0I7S0FDckI7SUFDRCxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsRUFBRSxDQUFDLG9CQUFvQixDQUFDO0lBQ2pELENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFLFdBQVcsRUFBRSxXQUFXLEVBQUUsV0FBVyxDQUFDO0lBQ3JFLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUMsWUFBWSxFQUFFLFdBQVcsQ0FBQztJQUM5QyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQztJQUNqQyxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFBRSxDQUFDLGtCQUFrQixDQUFDO0lBQzlDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDO0lBQzNCLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsbUJBQW1CLENBQUM7SUFDL0MsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztJQUN4QyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQztJQUNuQyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDO0lBQzVDLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFLFNBQVMsQ0FBQztJQUMxQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQztJQUMzQixDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLFVBQVUsQ0FBQztDQUM5QixDQUFDO0FBNERGOzs7Ozs7Ozs7O0dBVUc7QUFDSCxNQUFNLE9BQWdCLGtCQUFrQjtDQVF2QztBQUVEOzs7Ozs7Ozs7O0dBVUc7QUFDSCxNQUFNLE9BQWdCLHVCQUF1QjtDQVk1QyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts
index adaaee8..9291918 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.d.ts
@@ -20,6 +20,6 @@ import { BuildOnChainGasModelFactoryType, IGasModel, IOnChainGasModelFactory } f
  */
 export declare class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory {
     constructor();
-    buildGasModel({ chainId, gasPriceWei, pools, quoteToken, v2poolProvider: V2poolProvider, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<MixedRouteWithValidQuote>>;
+    buildGasModel({ chainId, gasPriceWei, pools, quoteToken, v2poolProvider: V2poolProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<MixedRouteWithValidQuote>>;
     private estimateGas;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js
index c323f21..8632ed5 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.js
@@ -7,7 +7,7 @@ import _ from 'lodash';
 import { WRAPPED_NATIVE_CURRENCY } from '../../../..';
 import { log } from '../../../../util';
 import { CurrencyAmount } from '../../../../util/amounts';
-import { getV2NativePool, } from '../../../../util/gas-factory-helpers';
+import { getV2NativePool } from '../../../../util/gas-factory-helpers';
 import { IOnChainGasModelFactory, } from '../gas-model';
 import { BASE_SWAP_COST as BASE_SWAP_COST_V2, COST_PER_EXTRA_HOP as COST_PER_EXTRA_HOP_V2, } from '../v2/v2-heuristic-gas-model';
 import { BASE_SWAP_COST, COST_PER_HOP, COST_PER_INIT_TICK, COST_PER_UNINIT_TICK, } from '../v3/gas-costs';
@@ -33,7 +33,7 @@ export class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory
     constructor() {
         super();
     }
-    async buildGasModel({ chainId, gasPriceWei, pools, quoteToken, v2poolProvider: V2poolProvider, }) {
+    async buildGasModel({ chainId, gasPriceWei, pools, quoteToken, v2poolProvider: V2poolProvider, providerConfig, }) {
         const usdPool = pools.usdPool;
         // If our quote token is WETH, we don't need to convert our gas use to be in terms
         // of the quote token in order to produce a gas adjusted amount.
@@ -41,7 +41,7 @@ export class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory
         const nativeCurrency = WRAPPED_NATIVE_CURRENCY[chainId];
         if (quoteToken.equals(nativeCurrency)) {
             const estimateGasCost = (routeWithValidQuote) => {
-                const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);
+                const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
                 const token0 = usdPool.token0.address == nativeCurrency.address;
                 const nativeTokenPrice = token0
                     ? usdPool.token0Price
@@ -63,13 +63,13 @@ export class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory
         let nativeV2Pool;
         if (V2poolProvider) {
             /// MixedRoutes
-            nativeV2Pool = await getV2NativePool(quoteToken, V2poolProvider);
+            nativeV2Pool = await getV2NativePool(quoteToken, V2poolProvider, providerConfig);
         }
         const usdToken = usdPool.token0.address == nativeCurrency.address
             ? usdPool.token1
             : usdPool.token0;
         const estimateGasCost = (routeWithValidQuote) => {
-            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);
+            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
             if (!nativeV3Pool && !nativeV2Pool) {
                 log.info(`Unable to find ${nativeCurrency.symbol} pool with the quote token, ${quoteToken.symbol} to produce gas adjusted costs. Route will not account for gas.`);
                 return {
@@ -130,7 +130,7 @@ export class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory
             estimateGasCost: estimateGasCost.bind(this),
         };
     }
-    estimateGas(routeWithValidQuote, gasPriceWei, chainId) {
+    estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig) {
         const totalInitializedTicksCrossed = BigNumber.from(Math.max(1, _.sum(routeWithValidQuote.initializedTicksCrossedList)));
         /**
          * Since we must make a separate call to multicall for each v3 and v2 section, we will have to
@@ -155,6 +155,9 @@ export class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory
         const uninitializedTickGasUse = COST_PER_UNINIT_TICK.mul(0);
         // base estimate gas used based on chainId estimates for hops and ticks gas useage
         baseGasUse = baseGasUse.add(tickGasUse).add(uninitializedTickGasUse);
+        if (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.additionalGasOverhead) {
+            baseGasUse = baseGasUse.add(providerConfig.additionalGasOverhead);
+        }
         const baseGasCostWei = gasPriceWei.mul(baseGasUse);
         const wrappedCurrency = WRAPPED_NATIVE_CURRENCY[chainId];
         const totalGasCostNativeCurrency = CurrencyAmount.fromRawAmount(wrappedCurrency, baseGasCostWei.toString());
@@ -165,4 +168,4 @@ export class MixedRouteHeuristicGasModelFactory extends IOnChainGasModelFactory
         };
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL21peGVkUm91dGUvbWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFcEUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN0RCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdkMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFDTCxlQUFlLEdBQ2hCLE1BQU0sc0NBQXNDLENBQUM7QUFFOUMsT0FBTyxFQUdMLHVCQUF1QixHQUN4QixNQUFNLGNBQWMsQ0FBQztBQUN0QixPQUFPLEVBQ0wsY0FBYyxJQUFJLGlCQUFpQixFQUNuQyxrQkFBa0IsSUFBSSxxQkFBcUIsR0FDNUMsTUFBTSw4QkFBOEIsQ0FBQztBQUN0QyxPQUFPLEVBQ0wsY0FBYyxFQUNkLFlBQVksRUFDWixrQkFBa0IsRUFDbEIsb0JBQW9CLEdBQ3JCLE1BQU0saUJBQWlCLENBQUM7QUFFekI7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUJHO0FBQ0gsTUFBTSxPQUFPLGtDQUFtQyxTQUFRLHVCQUF1QjtJQUM3RTtRQUNFLEtBQUss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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL21peGVkUm91dGUvbWl4ZWQtcm91dGUtaGV1cmlzdGljLWdhcy1tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDckQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFcEUsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUV0RCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDdkMsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQzFELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUV2RSxPQUFPLEVBR0wsdUJBQXVCLEdBQ3hCLE1BQU0sY0FBYyxDQUFDO0FBQ3RCLE9BQU8sRUFDTCxjQUFjLElBQUksaUJBQWlCLEVBQ25DLGtCQUFrQixJQUFJLHFCQUFxQixHQUM1QyxNQUFNLDhCQUE4QixDQUFDO0FBQ3RDLE9BQU8sRUFDTCxjQUFjLEVBQ2QsWUFBWSxFQUNaLGtCQUFrQixFQUNsQixvQkFBb0IsR0FDckIsTUFBTSxpQkFBaUIsQ0FBQztBQUV6Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQkc7QUFDSCxNQUFNLE9BQU8sa0NBQW1DLFNBQVEsdUJBQXVCO0lBQzdFO1FBQ0UsS0FBSyxF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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts
index 4bae4d4..a319a95 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.d.ts
@@ -22,7 +22,7 @@ export declare const COST_PER_EXTRA_HOP: BigNumber;
  */
 export declare class V2HeuristicGasModelFactory extends IV2GasModelFactory {
     constructor();
-    buildGasModel({ chainId, gasPriceWei, poolProvider, token, }: BuildV2GasModelFactoryType): Promise<IGasModel<V2RouteWithValidQuote>>;
+    buildGasModel({ chainId, gasPriceWei, poolProvider, token, providerConfig, }: BuildV2GasModelFactoryType): Promise<IGasModel<V2RouteWithValidQuote>>;
     private estimateGas;
     private getEthPool;
     private getHighestLiquidityUSDPool;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js
index f2ed831..19268a3 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.js
@@ -28,12 +28,12 @@ export class V2HeuristicGasModelFactory extends IV2GasModelFactory {
     constructor() {
         super();
     }
-    async buildGasModel({ chainId, gasPriceWei, poolProvider, token, }) {
+    async buildGasModel({ chainId, gasPriceWei, poolProvider, token, providerConfig, }) {
         if (token.equals(WRAPPED_NATIVE_CURRENCY[chainId])) {
-            const usdPool = await this.getHighestLiquidityUSDPool(chainId, poolProvider);
+            const usdPool = await this.getHighestLiquidityUSDPool(chainId, poolProvider, providerConfig);
             return {
                 estimateGasCost: (routeWithValidQuote) => {
-                    const { gasCostInEth, gasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);
+                    const { gasCostInEth, gasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
                     const ethToken0 = usdPool.token0.address == WRAPPED_NATIVE_CURRENCY[chainId].address;
                     const ethTokenPrice = ethToken0
                         ? usdPool.token0Price
@@ -49,17 +49,23 @@ export class V2HeuristicGasModelFactory extends IV2GasModelFactory {
         }
         // If the quote token is not WETH, we convert the gas cost to be in terms of the quote token.
         // We do this by getting the highest liquidity <token>/ETH pool.
-        const ethPool = await this.getEthPool(chainId, token, poolProvider);
+        const ethPoolPromise = this.getEthPool(chainId, token, poolProvider, providerConfig);
+        const usdPoolPromise = this.getHighestLiquidityUSDPool(chainId, poolProvider, providerConfig);
+        const [ethPool, usdPool] = await Promise.all([
+            ethPoolPromise,
+            usdPoolPromise,
+        ]);
         if (!ethPool) {
             log.info('Unable to find ETH pool with the quote token to produce gas adjusted costs. Route will not account for gas.');
         }
-        const usdPool = await this.getHighestLiquidityUSDPool(chainId, poolProvider);
         return {
             estimateGasCost: (routeWithValidQuote) => {
                 const usdToken = usdPool.token0.address == WRAPPED_NATIVE_CURRENCY[chainId].address
                     ? usdPool.token1
                     : usdPool.token0;
-                const { gasCostInEth, gasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);
+                const { gasCostInEth, gasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, {
+                    ...providerConfig,
+                });
                 if (!ethPool) {
                     return {
                         gasEstimate: gasUse,
@@ -107,17 +113,20 @@ export class V2HeuristicGasModelFactory extends IV2GasModelFactory {
             },
         };
     }
-    estimateGas(routeWithValidQuote, gasPriceWei, chainId) {
+    estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig) {
         const hops = routeWithValidQuote.route.pairs.length;
-        const gasUse = BASE_SWAP_COST.add(COST_PER_EXTRA_HOP.mul(hops - 1));
+        let gasUse = BASE_SWAP_COST.add(COST_PER_EXTRA_HOP.mul(hops - 1));
+        if (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.additionalGasOverhead) {
+            gasUse = gasUse.add(providerConfig.additionalGasOverhead);
+        }
         const totalGasCostWei = gasPriceWei.mul(gasUse);
         const weth = WRAPPED_NATIVE_CURRENCY[chainId];
         const gasCostInEth = CurrencyAmount.fromRawAmount(weth, totalGasCostWei.toString());
         return { gasCostInEth, gasUse };
     }
-    async getEthPool(chainId, token, poolProvider) {
+    async getEthPool(chainId, token, poolProvider, providerConfig) {
         const weth = WRAPPED_NATIVE_CURRENCY[chainId];
-        const poolAccessor = await poolProvider.getPools([[weth, token]]);
+        const poolAccessor = await poolProvider.getPools([[weth, token]], providerConfig);
         const pool = poolAccessor.getPool(weth, token);
         if (!pool || pool.reserve0.equalTo(0) || pool.reserve1.equalTo(0)) {
             log.error({
@@ -130,7 +139,7 @@ export class V2HeuristicGasModelFactory extends IV2GasModelFactory {
         }
         return pool;
     }
-    async getHighestLiquidityUSDPool(chainId, poolProvider) {
+    async getHighestLiquidityUSDPool(chainId, poolProvider, providerConfig) {
         const usdTokens = usdGasTokensByChain[chainId];
         if (!usdTokens) {
             throw new Error(`Could not find a USD token for computing gas costs on ${chainId}`);
@@ -139,7 +148,7 @@ export class V2HeuristicGasModelFactory extends IV2GasModelFactory {
             usdToken,
             WRAPPED_NATIVE_CURRENCY[chainId],
         ]);
-        const poolAccessor = await poolProvider.getPools(usdPools);
+        const poolAccessor = await poolProvider.getPools(usdPools, providerConfig);
         const poolsRaw = poolAccessor.getAllPools();
         const pools = _.filter(poolsRaw, (pool) => pool.reserve0.greaterThan(0) && pool.reserve1.greaterThan(0));
         if (pools.length == 0) {
@@ -157,4 +166,4 @@ export class V2HeuristicGasModelFactory extends IV2GasModelFactory {
         return maxPool;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YyL3YyLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBR3JELE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUd2QixPQUFPLEVBQUUsR0FBRyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRTFELE9BQU8sRUFHTCxrQkFBa0IsRUFDbEIsbUJBQW1CLEdBQ3BCLE1BQU0sY0FBYyxDQUFDO0FBRXRCLHdEQUF3RDtBQUN4RCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLDZDQUE2QztBQUVuRyx1Q0FBdUM7QUFDdkMsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLDRDQUE0QztBQUVyRzs7Ozs7Ozs7Ozs7Ozs7OztHQWdCRztBQUNILE1BQU0sT0FBTywwQkFBMkIsU0FBUSxrQkFBa0I7SUFDaEU7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQ3pCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsWUFBWSxFQUNaLEtBQUssR0FDc0I7UUFDM0IsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBRSxDQUFDLEVBQUU7WUFDbkQsTUFBTSxPQUFPLEdBQVMsTUFBTSxJQUFJLENBQUMsMEJBQTBCLENBQ3pELE9BQU8sRUFDUCxZQUFZLENBQ2IsQ0FB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItaGV1cmlzdGljLWdhcy1tb2RlbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9nYXMtbW9kZWxzL3YyL3YyLWhldXJpc3RpYy1nYXMtbW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBR3JELE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUl2QixPQUFPLEVBQUUsR0FBRyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRTFELE9BQU8sRUFHTCxrQkFBa0IsRUFDbEIsbUJBQW1CLEdBQ3BCLE1BQU0sY0FBYyxDQUFDO0FBRXRCLHdEQUF3RDtBQUN4RCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLDZDQUE2QztBQUVuRyx1Q0FBdUM7QUFDdkMsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLDRDQUE0QztBQUVyRzs7Ozs7Ozs7Ozs7Ozs7OztHQWdCRztBQUNILE1BQU0sT0FBTywwQkFBMkIsU0FBUSxrQkFBa0I7SUFDaEU7UUFDRSxLQUFLLEVBQUUsQ0FBQztJQUNWLENBQUM7SUFFTSxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQ3pCLE9BQU8sRUFDUCxXQUFXLEVBQ1gsWUFBWSxFQUNaLEtBQUssRUFDTCxjQUFjLEdBQ2E7UUFDM0IsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBRSxDQUFDLEVBQUU7WUFDbkQsTUFBTSxPQUFPLEdBQVMsTUFBTSxJQUFJLENBQUMsMEJBQTBCLENBQ3pELE9BQU8sRUFDUCxZQUFZLEVBQ1osY0FBYyxDQUNmLENBQUM7WUFFRixPQUFPO2dCQUNMLGVBQWUsRUFBRSxDQUFDLG1CQUEwQyxFQUFFLEVBQUU7b0JBQzlELE1BQU0sRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FDL0MsbUJBQW1CLEVBQ25CLFdBQVcsRUFDWCxPQUFPLEVBQ1AsY0FBYyxDQUNmLENBQUM7b0JBRUYsTUFBTSxTQUFTLEdBQ2IsT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksdUJBQXVCLENBQUMsT0FBTyxDQUFFLENBQUMsT0FBTyxDQUFDO29CQUV0RSxNQUFNLGFBQWEsR0FBRyxTQUFTO3dCQUM3QixDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVc7d0JBQ3JCLENBQUMsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDO29CQUV4QixNQUFNLG1CQUFtQixHQUFtQixhQUFhLENBQUMsS0FBSyxDQUM3RCxZQUFZLENBQ0ssQ0FBQztvQkFFcEIsT0FBTzt3QkFDTCxXQUFXLEVBQUUsTUFBTTt3QkFDbkIsY0FBYyxFQUFFLFlBQVk7d0JBQzVCLFlBQVksRUFBRSxtQkFBbUI7cUJBQ2xDLENBQUM7Z0JBQ0osQ0FBQzthQUNGLENBQUM7U0FDSDtRQUVELDZGQUE2RjtRQUM3RixnRUFBZ0U7UUFDaEUsTUFBTSxjQUFjLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FDcEMsT0FBTyxFQUNQLEtBQUssRUFDTCxZQUFZLEVBQ1osY0FBYyxDQUNmLENBQUM7UUFFRixNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsMEJBQTBCLENBQ3BELE9BQU8sRUFDUCxZQUFZLEVBQ1osY0FBYyxDQUNmLENBQUM7UUFFRixNQUFNLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxHQUFHLE1BQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQztZQUMzQyxjQUFjO1lBQ2QsY0FBYztTQUNmLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDWixHQUFHLENBQUMsSUFBSSxDQUNOLDZHQUE2RyxDQUM5RyxDQUFDO1NBQ0g7UUFFRCxPQUFPO1lBQ0wsZUFBZSxFQUFFLENBQUMsbUJBQTBDLEVBQUUsRUFBRTtnQkFDOUQsTUFBTSxRQUFRLEdBQ1osT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksdUJBQXVCLENBQUMsT0FBTyxDQUFFLENBQUMsT0FBTztvQkFDakUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxNQUFNO29CQUNoQixDQUFDLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQztnQkFFckIsTUFBTSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUMvQyxtQkFBbUIsRUFDbkIsV0FBVyxFQUNYLE9BQU8sRUFDUDtvQkFDRSxHQUFHLGNBQWM7aUJBQ2xCLENBQ0YsQ0FBQztnQkFFRixJQUFJLENBQUMsT0FBTyxFQUFFO29CQUNaLE9BQU87d0JBQ0wsV0FBVyxFQUFFLE1BQU07d0JBQ25CLGNBQWMsRUFBRSxjQUFjLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7d0JBQ3RELFlBQVksRUFBRSxjQUFjLENBQUMsYUFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUM7cUJBQ3hELENBQUM7aUJBQ0g7Z0JBRUQsTUFBTSxTQUFTLEdBQ2IsT0FBTyxDQUFDLE1BQU0sQ0FBQyxPQUFPLElBQUksdUJBQXVCLENBQUMsT0FBTyxDQUFFLENBQUMsT0FBTyxDQUFDO2dCQUV0RSxNQUFNLGFBQWEsR0FBRyxTQUFTO29CQUM3QixDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVc7b0JBQ3JCLENBQUMsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDO2dCQUV4QixJQUFJLDBCQUEwQyxDQUFDO2dCQUMvQyxJQUFJO29CQUNGLDBCQUEwQixHQUFHLGFBQWEsQ0FBQyxLQUFLLENBQzlDLFlBQVksQ0FDSyxDQUFDO2lCQUNyQjtnQkFBQyxPQUFPLEdBQUcsRUFBRTtvQkFDWixHQUFHLENBQUMsS0FBSyxDQUNQO3dCQUNFLGlCQUFpQixFQUFFLGFBQWEsQ0FBQyxZQUFZO3dCQUM3QyxrQkFBa0IsRUFBRSxhQUFhLENBQUMsYUFBYTt3QkFDL0MsWUFBWSxFQUFFLFlBQVksQ0FBQyxRQUFRO3FCQUNwQyxFQUNELDZCQUE2QixDQUM5QixDQUFDO29CQUNGLE1BQU0sR0FBRyxDQUFDO2lCQUNYO2dCQUVELE1BQU0sZ0JBQWdCLEdBQ3BCLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxJQUFJLHVCQUF1QixDQUFDLE9BQU8sQ0FBRSxDQUFDLE9BQU8sQ0FBQztnQkFFdEUsTUFBTSxvQkFBb0IsR0FBRyxnQkFBZ0I7b0JBQzNDLENBQUMsQ0FBQyxPQUFPLENBQUMsV0FBVztvQkFDckIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUM7Z0JBRXhCLElBQUksbUJBQW1DLENBQUM7Z0JBQ3hDLElBQUk7b0JBQ0YsbUJBQW1CLEdBQUcsb0JBQW9CLENBQUMsS0FBSyxDQUM5QyxZQUFZLENBQ0ssQ0FBQztpQkFDckI7Z0JBQUMsT0FBTyxHQUFHLEVBQUU7b0JBQ1osR0FBRyxDQUFDLEtBQUssQ0FDUDt3QkFDRSxLQUFLLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNO3dCQUM1QixLQUFLLEVBQUUsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNO3dCQUM1QixpQkFBaUIsRUFBRSxZQUFZLENBQUMsUUFBUSxDQUFDLE1BQU07cUJBQ2hELEVBQ0QsaUNBQWlDLENBQ2xDLENBQUM7b0JBQ0YsTUFBTSxHQUFHLENBQUM7aUJBQ1g7Z0JBRUQsT0FBTztvQkFDTCxXQUFXLEVBQUUsTUFBTTtvQkFDbkIsY0FBYyxFQUFFLDBCQUEwQjtvQkFDMUMsWUFBWSxFQUFFLG1CQUFvQjtpQkFDbkMsQ0FBQztZQUNKLENBQUM7U0FDRixDQUFDO0lBQ0osQ0FBQztJQUVPLFdBQVcsQ0FDakIsbUJBQTBDLEVBQzFDLFdBQXNCLEVBQ3RCLE9BQWdCLEVBQ2hCLGNBQStCO1FBRS9CLE1BQU0sSUFBSSxHQUFHLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO1FBQ3BELElBQUksTUFBTSxHQUFHLGNBQWMsQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBRWxFLElBQUksY0FBYyxhQUFkLGNBQWMsdUJBQWQsY0FBYyxDQUFFLHFCQUFxQixFQUFFO1lBQ3pDLE1BQU0sR0FBRyxNQUFNLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1NBQzNEO1FBRUQsTUFBTSxlQUFlLEdBQUcsV0FBVyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVoRCxNQUFNLElBQUksR0FBRyx1QkFBdUIsQ0FBQyxPQUFPLENBQUUsQ0FBQztRQUUvQyxNQUFNLFlBQVksR0FBRyxjQUFjLENBQUMsYUFBYSxDQUMvQyxJQUFJLEVBQ0osZUFBZSxDQUFDLFFBQVEsRUFBRSxDQUMzQixDQUFDO1FBRUYsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsQ0FBQztJQUNsQyxDQUFDO0lBRU8sS0FBSyxDQUFDLFVBQVUsQ0FDdEIsT0FBZ0IsRUFDaEIsS0FBWSxFQUNaLFlBQTZCLEVBQzdCLGNBQStCO1FBRS9CLE1BQU0sSUFBSSxHQUFHLHVCQUF1QixDQUFDLE9BQU8sQ0FBRSxDQUFDO1FBRS9DLE1BQU0sWUFBWSxHQUFHLE1BQU0sWUFBWSxDQUFDLFFBQVEsQ0FDOUMsQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsQ0FBQyxFQUNmLGNBQWMsQ0FDZixDQUFDO1FBQ0YsTUFBTSxJQUFJLEdBQUcsWUFBWSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFL0MsSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNqRSxHQUFHLENBQUMsS0FBSyxDQUNQO2dCQUNFLElBQUk7Z0JBQ0osS0FBSztnQkFDTCxRQUFRLEVBQUUsSUFBSSxhQUFKLElBQUksdUJBQUosSUFBSSxDQUFFLFFBQVEsQ0FBQyxPQUFPLEVBQUU7Z0JBQ2xDLFFBQVEsRUFBRSxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsUUFBUSxDQUFDLE9BQU8sRUFBRTthQUNuQyxFQUNELHlDQUF5QyxLQUFLLENBQUMsTUFBTSwyQkFBMkIsQ0FDakYsQ0FBQztZQUVGLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFFTyxLQUFLLENBQUMsMEJBQTBCLENBQ3RDLE9BQWdCLEVBQ2hCLFlBQTZCLEVBQzdCLGNBQStCO1FBRS9CLE1BQU0sU0FBUyxHQUFHLG1CQUFtQixDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRS9DLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDZCxNQUFNLElBQUksS0FBSyxDQUNiLHlEQUF5RCxPQUFPLEVBQUUsQ0FDbkUsQ0FBQztTQUNIO1FBRUQsTUFBTSxRQUFRLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBd0IsU0FBUyxFQUFFLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQztZQUNyRSxRQUFRO1lBQ1IsdUJBQXVCLENBQUMsT0FBTyxDQUFFO1NBQ2xDLENBQUMsQ0FBQztRQUNILE1BQU0sWUFBWSxHQUFHLE1BQU0sWUFBWSxDQUFDLFFBQVEsQ0FBQyxRQUFRLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFDM0UsTUFBTSxRQUFRLEdBQUcsWUFBWSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQzVDLE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQ3BCLFFBQVEsRUFDUixDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLElBQUksSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQ3ZFLENBQUM7UUFFRixJQUFJLEtBQUssQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO1lBQ3JCLEdBQUcsQ0FBQyxLQUFLLENBQ1AsRUFBRSxLQUFLLEVBQUUsRUFDVCx5REFBeUQsQ0FDMUQsQ0FBQztZQUNGLE1BQU0sSUFBSSxLQUFLLENBQUMsbURBQW1ELENBQUMsQ0FBQztTQUN0RTtRQUVELE1BQU0sT0FBTyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUMsSUFBSSxFQUFFLEVBQUU7WUFDdEMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUUsQ0FBQyxFQUFFO2dCQUN6RCxPQUFPLFVBQVUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ25EO2lCQUFNO2dCQUNMLE9BQU8sVUFBVSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDbkQ7UUFDSCxDQUFDLENBQVMsQ0FBQztRQUVYLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7Q0FDRiJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.d.ts
index d580c0a..af0d85b 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.d.ts
@@ -1,5 +1,5 @@
 import { BigNumber } from '@ethersproject/bignumber';
-import { ChainId } from '@uniswap/sdk-core';
+import { ChainId, Currency } from '@uniswap/sdk-core';
 import { V3Route } from '../../../router';
 export declare const COST_PER_UNINIT_TICK: BigNumber;
 export declare const BASE_SWAP_COST: (id: ChainId) => BigNumber;
@@ -7,3 +7,6 @@ export declare const COST_PER_INIT_TICK: (id: ChainId) => BigNumber;
 export declare const COST_PER_HOP: (id: ChainId) => BigNumber;
 export declare const SINGLE_HOP_OVERHEAD: (_id: ChainId) => BigNumber;
 export declare const TOKEN_OVERHEAD: (id: ChainId, route: V3Route) => BigNumber;
+export declare const NATIVE_WRAP_OVERHEAD: (id: ChainId) => BigNumber;
+export declare const NATIVE_UNWRAP_OVERHEAD: (id: ChainId) => BigNumber;
+export declare const NATIVE_OVERHEAD: (chainId: ChainId, amount: Currency, quote: Currency) => BigNumber;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.js
index 542d9e5..5690384 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/gas-costs.js
@@ -29,6 +29,7 @@ export const BASE_SWAP_COST = (id) => {
         case ChainId.GNOSIS:
             return BigNumber.from(2000);
         case ChainId.MOONBEAM:
+        case ChainId.TENET:
             return BigNumber.from(2000);
     }
 };
@@ -57,6 +58,7 @@ export const COST_PER_INIT_TICK = (id) => {
         case ChainId.GNOSIS:
             return BigNumber.from(31000);
         case ChainId.MOONBEAM:
+        case ChainId.TENET:
             return BigNumber.from(31000);
     }
 };
@@ -84,6 +86,7 @@ export const COST_PER_HOP = (id) => {
         case ChainId.GNOSIS:
             return BigNumber.from(80000);
         case ChainId.MOONBEAM:
+        case ChainId.TENET:
             return BigNumber.from(80000);
     }
 };
@@ -107,4 +110,28 @@ export const TOKEN_OVERHEAD = (id, route) => {
     }
     return overhead;
 };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLWNvc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvdjMvZ2FzLWNvc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxZQUFZLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUluRSwyQ0FBMkM7QUFDM0MsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUV0RCw2REFBNkQ7QUFDN0QsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLENBQUMsRUFBVyxFQUFhLEVBQUU7SUFDdkQsUUFBUSxFQUFFLEVBQUU7UUFDVixLQUFLLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFDckIsS0FBSyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQ3BCLEtBQUssT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNyQixLQUFLLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDdEIsS0FBSyxPQUFPLENBQUMsZUFBZSxDQUFDO1FBQzdCLEtBQUssT0FBTyxDQUFDLEdBQUcsQ0FBQztRQUNqQixLQUFLLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFDdkIsS0FBSyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ2xCLEtBQUssT0FBTyxDQUFDLFdBQVc7WUFDdEIsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzlCLEtBQUssT0FBTyxDQUFDLFlBQVksQ0FBQztRQUMxQixLQUFLLE9BQU8sQ0FBQyxlQUFlO1lBQzFCLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QixLQUFLLE9BQU8s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
\ No newline at end of file
+// TODO: change per chain
+export const NATIVE_WRAP_OVERHEAD = (id) => {
+    switch (id) {
+        default:
+            return BigNumber.from(27938);
+    }
+};
+export const NATIVE_UNWRAP_OVERHEAD = (id) => {
+    switch (id) {
+        default:
+            return BigNumber.from(36000);
+    }
+};
+export const NATIVE_OVERHEAD = (chainId, amount, quote) => {
+    if (amount.isNative) {
+        // need to wrap eth in
+        return NATIVE_WRAP_OVERHEAD(chainId);
+    }
+    if (quote.isNative) {
+        // need to unwrap eth out
+        return NATIVE_UNWRAP_OVERHEAD(chainId);
+    }
+    return BigNumber.from(0);
+};
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FzLWNvc3RzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2dhcy1tb2RlbHMvdjMvZ2FzLWNvc3RzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsT0FBTyxFQUFtQixNQUFNLG1CQUFtQixDQUFDO0FBRTdELE9BQU8sRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFHbkUsMkNBQTJDO0FBQzNDLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFFdEQsNkRBQTZEO0FBQzdELE1BQU0sQ0FBQyxNQUFNLGNBQWMsR0FBRyxDQUFDLEVBQVcsRUFBYSxFQUFFO0lBQ3ZELFFBQVEsRUFBRSxFQUFFO1FBQ1YsS0FBSyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3JCLEtBQUssT0FBTyxDQUFDLE1BQU0sQ0FBQztRQUNwQixLQUFLLE9BQU8sQ0FBQyxPQUFPLENBQUM7UUFDckIsS0FBSyxPQUFPLENBQUMsUUFBUSxDQUFDO1FBQ3RCLEtBQUssT0FBTyxDQUFDLGVBQWUsQ0FBQztRQUM3QixLQUFLLE9BQU8sQ0FBQyxHQUFHLENBQUM7UUFDakIsS0FBSyxPQUFPLENBQUMsU0FBUyxDQUFDO1FBQ3ZCLEtBQUssT0FBTyxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLE9BQU8sQ0FBQyxXQUFXO1lBQ3RCLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUM5QixLQUFLLE9BQU8sQ0FBQyxZQUFZLENBQUM7UUFDMUIsS0FBSyxPQUFPLENBQUMsZUFBZTtZQUMxQixPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsS0FBSyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3JCLEtBQUssT0FBTyxDQUFDLGNBQWM7WUFDekIsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRTlCLEtBQUssT0FBTyxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLE9BQU8sQ0FBQyxjQUFjO1lBQ3pCLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUU5Qiw4QkFBOEI7UUFDOUIsS0FBSyxPQUFPLENBQUMsTUFBTTtZQUNqQixPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDOUIsS0FBSyxPQUFPLENBQUMsUUFBUSxDQUFDO1FBQ3RCLEtBQUssT0FBTyxDQUFDLEtBQUs7WUFDaEIsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQy9CO0FBQ0gsQ0FBQyxDQUFDO0FBQ0YsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsQ0FBQyxFQUFXLEVBQWEsRUFBRTtJQUMzRCxRQUFRLEVBQUUsRUFBRTtRQUNWLEtBQUssT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNyQixLQUFLLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDcEIsS0FBSyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3JCLEtBQUssT0FBTyxDQUFDLEdBQUcsQ0FBQztRQUNqQixLQUFLLE9BQU8sQ0FBQyxTQUFTO1lBQ3BCLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvQixLQUFLLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDdEIsS0FBSyxPQUFPLENBQUMsZUFBZSxDQUFDO1FBQzdCLEtBQUssT0FBTyxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLE9BQU8sQ0FBQyxXQUFXO1lBQ3RCLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvQixLQUFLLE9BQU8sQ0FBQyxZQUFZLENBQUM7UUFDMUIsS0FBSyxPQUFPLENBQUMsZUFBZTtZQUMxQixPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0IsS0FBSyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3JCLEtBQUssT0FBTyxDQUFDLGNBQWM7WUFDekIsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQy9CLEtBQUssT0FBTyxDQUFDLElBQUksQ0FBQztRQUNsQixLQUFLLE9BQU8sQ0FBQyxjQUFjO1lBQ3pCLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvQixLQUFLLE9BQU8sQ0FBQyxNQUFNO1lBQ2pCLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvQixLQUFLLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDdEIsS0FBSyxPQUFPLENBQUMsS0FBSztZQUNoQixPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7S0FDaEM7QUFDSCxDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxZQUFZLEdBQUcsQ0FBQyxFQUFXLEVBQWEsRUFBRTtJQUNyRCxRQUFRLEVBQUUsRUFBRTtRQUNWLEtBQUssT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNyQixLQUFLLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDcEIsS0FBSyxPQUFPLENBQUMsT0FBTyxDQUFDO1FBQ3JCLEtBQUssT0FBTyxDQUFDLEdBQUcsQ0FBQztRQUNqQixLQUFLLE9BQU8sQ0FBQyxRQUFRLENBQUM7UUFDdEIsS0FBSyxPQUFPLENBQUMsZUFBZSxDQUFDO1FBQzdCLEtBQUssT0FBTyxDQUFDLFNBQVMsQ0FBQztRQUN2QixLQUFLLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFDbEIsS0FBSyxPQUFPLENBQUMsV0FBVztZQUN0QixPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0IsS0FBSyxPQUFPLENBQUMsWUFBWSxDQUFDO1FBQzFCLEtBQUssT0FBTyxDQUFDLGVBQWU7WUFDMUIsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQy9CLEtBQUssT0FBTyxDQUFDLE9BQU8sQ0FBQztRQUNyQixLQUFLLE9BQU8sQ0FBQyxjQUFjO1lBQ3pCLE9BQU8sU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvQixLQUFLLE9BQU8sQ0FBQyxJQUFJLENBQUM7UUFDbEIsS0FBSyxPQUFPLENBQUMsY0FBYztZQUN6QixPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0IsS0FBSyxPQUFPLENBQUMsTUFBTTtZQUNqQixPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDL0IsS0FBSyxPQUFPLENBQUMsUUFBUSxDQUFDO1FBQ3RCLEtBQUssT0FBTyxDQUFDLEtBQUs7WUFDaEIsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ2hDO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxHQUFZLEVBQWEsRUFBRTtJQUM3RCxPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDL0IsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sY0FBYyxHQUFHLENBQUMsRUFBVyxFQUFFLEtBQWMsRUFBYSxFQUFFO0lBQ3ZFLE1BQU0sTUFBTSxHQUFZLEtBQUssQ0FBQyxTQUFTLENBQUM7SUFDeEMsSUFBSSxRQUFRLEdBQUcsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVqQyxJQUFJLEVBQUUsSUFBSSxPQUFPLENBQUMsT0FBTyxFQUFFO1FBQ3pCLGdGQUFnRjtRQUNoRixxQkFBcUI7UUFDckIsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBUSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLEVBQUU7WUFDckQsUUFBUSxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDakM7UUFFRCxnRkFBZ0Y7UUFDaEYsa0JBQWtCO1FBQ2xCLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQVEsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQyxFQUFFO1lBQ3JELFFBQVEsR0FBRyxRQUFRLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ2pDO0tBQ0Y7SUFFRCxPQUFPLFFBQVEsQ0FBQztBQUNsQixDQUFDLENBQUM7QUFFRix5QkFBeUI7QUFDekIsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxFQUFXLEVBQWEsRUFBRTtJQUM3RCxRQUFRLEVBQUUsRUFBRTtRQUNWO1lBQ0UsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ2hDO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsQ0FBQyxFQUFXLEVBQWEsRUFBRTtJQUMvRCxRQUFRLEVBQUUsRUFBRTtRQUNWO1lBQ0UsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0tBQ2hDO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLENBQzdCLE9BQWdCLEVBQ2hCLE1BQWdCLEVBQ2hCLEtBQWUsRUFDSixFQUFFO0lBQ2IsSUFBSSxNQUFNLENBQUMsUUFBUSxFQUFFO1FBQ25CLHNCQUFzQjtRQUN0QixPQUFPLG9CQUFvQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0tBQ3RDO0lBQ0QsSUFBSSxLQUFLLENBQUMsUUFBUSxFQUFFO1FBQ2xCLHlCQUF5QjtRQUN6QixPQUFPLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0tBQ3hDO0lBQ0QsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzNCLENBQUMsQ0FBQyJ9
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts
index 9b2271d..60f2a74 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.d.ts
@@ -20,7 +20,7 @@ import { BuildOnChainGasModelFactoryType, IGasModel, IOnChainGasModelFactory } f
  */
 export declare class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {
     constructor();
-    buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<V3RouteWithValidQuote>>;
+    buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, providerConfig, }: BuildOnChainGasModelFactoryType): Promise<IGasModel<V3RouteWithValidQuote>>;
     private estimateGas;
     /**
      * To avoid having a call to optimism's L1 security fee contract for every route and amount combination,
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
index 1deb23b..c8f2f5f 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.js
@@ -30,7 +30,7 @@ export class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {
     constructor() {
         super();
     }
-    async buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, }) {
+    async buildGasModel({ chainId, gasPriceWei, pools, amountToken, quoteToken, l2GasDataProvider, providerConfig, }) {
         const l2GasData = l2GasDataProvider
             ? await l2GasDataProvider.getGasData()
             : undefined;
@@ -94,7 +94,7 @@ export class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {
         const nativeCurrency = WRAPPED_NATIVE_CURRENCY[chainId];
         if (quoteToken.equals(nativeCurrency)) {
             const estimateGasCost = (routeWithValidQuote) => {
-                const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);
+                const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
                 const token0 = usdPool.token0.address == nativeCurrency.address;
                 const nativeTokenPrice = token0
                     ? usdPool.token0Price
@@ -122,7 +122,7 @@ export class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {
             ? usdPool.token1
             : usdPool.token0;
         const estimateGasCost = (routeWithValidQuote) => {
-            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId);
+            const { totalGasCostNativeCurrency, baseGasUse } = this.estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig);
             let gasCostInTermsOfQuoteToken = null;
             if (nativePool) {
                 const token0 = nativePool.token0.address == nativeCurrency.address;
@@ -215,7 +215,8 @@ export class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {
             calculateL1GasFees,
         };
     }
-    estimateGas(routeWithValidQuote, gasPriceWei, chainId) {
+    estimateGas(routeWithValidQuote, gasPriceWei, chainId, providerConfig) {
+        var _a;
         const totalInitializedTicksCrossed = BigNumber.from(Math.max(1, _.sum(routeWithValidQuote.initializedTicksCrossedList)));
         const totalHops = BigNumber.from(routeWithValidQuote.route.pools.length);
         let hopsGasUse = COST_PER_HOP(chainId).mul(totalHops);
@@ -235,7 +236,8 @@ export class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {
             .add(hopsGasUse)
             .add(tokenOverhead)
             .add(tickGasUse)
-            .add(uninitializedTickGasUse);
+            .add(uninitializedTickGasUse)
+            .add((_a = providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.additionalGasOverhead) !== null && _a !== void 0 ? _a : BigNumber.from(0));
         const baseGasCostWei = gasPriceWei.mul(baseGasUse);
         const wrappedCurrency = WRAPPED_NATIVE_CURRENCY[chainId];
         const totalGasCostNativeCurrency = CurrencyAmount.fromRawAmount(wrappedCurrency, baseGasCostWei.toString());
@@ -290,4 +292,4 @@ export class V3HeuristicGasModelFactory extends IOnChainGasModelFactory {
         return [l1GasUsed, l1Fee];
     }
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.d.ts
index 28a93c4..9a16400 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.d.ts
@@ -1,4 +1,5 @@
 import { BigNumber } from '@ethersproject/bignumber';
+import { Protocol } from '@uniswap/router-sdk';
 import { ChainId, Currency, Token, TradeType } from '@uniswap/sdk-core';
 import { Pair } from '@uniswap/v2-sdk';
 import { Pool } from '@uniswap/v3-sdk';
@@ -7,7 +8,7 @@ import { CurrencyAmount } from '../../../util';
 import { MixedRoute, V2Route, V3Route } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { RouteWithValidQuote } from '../entities/route-with-valid-quote';
-import { CandidatePoolsBySelectionCriteria } from '../functions/get-candidate-pools';
+import { CandidatePoolsBySelectionCriteria, V2CandidatePools, V3CandidatePools } from '../functions/get-candidate-pools';
 import { IGasModel } from '../gas-models';
 import { GetQuotesResult, GetRoutesResult } from './model/results';
 /**
@@ -15,14 +16,16 @@ import { GetQuotesResult, GetRoutesResult } from './model/results';
  * Defines the base dependencies, helper methods and interface for how to fetch quotes.
  *
  * @abstract
+ * @template CandidatePools
  * @template Route
  */
-export declare abstract class BaseQuoter<Route extends V2Route | V3Route | MixedRoute> {
+export declare abstract class BaseQuoter<CandidatePools extends V2CandidatePools | V3CandidatePools | [V3CandidatePools, V2CandidatePools], Route extends V2Route | V3Route | MixedRoute> {
     protected tokenProvider: ITokenProvider;
     protected chainId: ChainId;
+    protected protocol: Protocol;
     protected blockedTokenListProvider?: ITokenListProvider;
     protected tokenValidatorProvider?: ITokenValidatorProvider;
-    constructor(tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
+    constructor(tokenProvider: ITokenProvider, chainId: ChainId, protocol: Protocol, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
     /**
      * Protected method in charge of fetching the routes for the tokenIn/tokenOut pair.
      *
@@ -30,11 +33,12 @@ export declare abstract class BaseQuoter<Route extends V2Route | V3Route | Mixed
      * @abstract
      * @param tokenIn The token that the user wants to provide
      * @param tokenOut The token that the usaw wants to receive
+     * @param candidatePools the candidate pools that are used to generate the routes
      * @param tradeType The type of quote the user wants. He could want to provide exactly X tokenIn or receive exactly X tokenOut
      * @param routingConfig
      * @returns Promise<GetRoutesResult<Route>>
      */
-    protected abstract getRoutes(tokenIn: Token, tokenOut: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<Route>>;
+    protected abstract getRoutes(tokenIn: Token, tokenOut: Token, candidatePools: CandidatePools, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<Route>>;
     /**
      * Public method that will fetch quotes for the combination of every route and every amount.
      *
@@ -58,11 +62,12 @@ export declare abstract class BaseQuoter<Route extends V2Route | V3Route | Mixed
      * @param amounts the list of amounts to query for EACH route.
      * @param percents the percentage of each amount.
      * @param quoteToken
+     * @param candidatePools
      * @param tradeType
      * @param routingConfig
      * @param gasModel the gasModel to be used for estimating gas cost
      * @param gasPriceWei instead of passing gasModel, gasPriceWei is used to generate a gasModel
      */
-    getRoutesThenQuotes(tokenIn: Token, tokenOut: Token, amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig, gasModel?: IGasModel<RouteWithValidQuote>, gasPriceWei?: BigNumber): Promise<GetQuotesResult>;
+    getRoutesThenQuotes(tokenIn: Token, tokenOut: Token, amount: CurrencyAmount, amounts: CurrencyAmount[], percents: number[], quoteToken: Token, candidatePools: CandidatePools, tradeType: TradeType, routingConfig: AlphaRouterConfig, gasModel?: IGasModel<RouteWithValidQuote>, gasPriceWei?: BigNumber): Promise<GetQuotesResult>;
     protected applyTokenValidatorToPools<T extends Pool | Pair>(pools: T[], isInvalidFn: (token: Currency, tokenValidation: TokenValidationResult | undefined) => boolean): Promise<T[]>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.js
index 713030c..aaf8bbd 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/base-quoter.js
@@ -1,16 +1,18 @@
 import _ from 'lodash';
-import { log, poolToString } from '../../../util';
+import { log, metric, MetricLoggerUnit, poolToString } from '../../../util';
 /**
  * Interface for a Quoter.
  * Defines the base dependencies, helper methods and interface for how to fetch quotes.
  *
  * @abstract
+ * @template CandidatePools
  * @template Route
  */
 export class BaseQuoter {
-    constructor(tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
+    constructor(tokenProvider, chainId, protocol, blockedTokenListProvider, tokenValidatorProvider) {
         this.tokenProvider = tokenProvider;
         this.chainId = chainId;
+        this.protocol = protocol;
         this.blockedTokenListProvider = blockedTokenListProvider;
         this.tokenValidatorProvider = tokenValidatorProvider;
     }
@@ -22,14 +24,28 @@ export class BaseQuoter {
      * @param amounts the list of amounts to query for EACH route.
      * @param percents the percentage of each amount.
      * @param quoteToken
+     * @param candidatePools
      * @param tradeType
      * @param routingConfig
      * @param gasModel the gasModel to be used for estimating gas cost
      * @param gasPriceWei instead of passing gasModel, gasPriceWei is used to generate a gasModel
      */
-    getRoutesThenQuotes(tokenIn, tokenOut, amounts, percents, quoteToken, tradeType, routingConfig, gasModel, gasPriceWei) {
-        return this.getRoutes(tokenIn, tokenOut, tradeType, routingConfig)
-            .then((routesResult) => this.getQuotes(routesResult.routes, amounts, percents, quoteToken, tradeType, routingConfig, routesResult.candidatePools, gasModel, gasPriceWei));
+    getRoutesThenQuotes(tokenIn, tokenOut, amount, amounts, percents, quoteToken, candidatePools, tradeType, routingConfig, gasModel, gasPriceWei) {
+        return this.getRoutes(tokenIn, tokenOut, candidatePools, tradeType, routingConfig)
+            .then((routesResult) => {
+            if (routesResult.routes.length == 1) {
+                metric.putMetric(`${this.protocol}QuoterSingleRoute`, 1, MetricLoggerUnit.Count);
+                percents = [100];
+                amounts = [amount];
+            }
+            if (routesResult.routes.length > 0) {
+                metric.putMetric(`${this.protocol}QuoterRoutesFound`, routesResult.routes.length, MetricLoggerUnit.Count);
+            }
+            else {
+                metric.putMetric(`${this.protocol}QuoterNoRoutesFound`, routesResult.routes.length, MetricLoggerUnit.Count);
+            }
+            return this.getQuotes(routesResult.routes, amounts, percents, quoteToken, tradeType, routingConfig, routesResult.candidatePools, gasModel, gasPriceWei);
+        });
     }
     async applyTokenValidatorToPools(pools, isInvalidFn) {
         if (!this.tokenValidatorProvider) {
@@ -51,4 +67,4 @@ export class BaseQuoter {
         return poolsFiltered;
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1xdW90ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcm91dGVycy9hbHBoYS1yb3V0ZXIvcXVvdGVycy9iYXNlLXF1b3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFJQSxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFHdkIsT0FBTyxFQUFrQixHQUFHLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBU2xFOzs7Ozs7R0FNRztBQUNILE1BQU0sT0FBZ0IsVUFBVTtJQU05QixZQUNFLGFBQTZCLEVBQzdCLE9BQWdCLEVBQ2hCLHdCQUE2QyxFQUM3QyxzQkFBZ0Q7UUFFaEQsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDbkMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUM7UUFDdkIsSUFBSSxDQUFDLHdCQUF3QixHQUFHLHdCQUF3QixDQUFDO1FBQ3pELElBQUksQ0FBQyxzQkFBc0IsR0FBRyxzQkFBc0IsQ0FBQztJQUN2RCxDQUFDO0lBOENEOzs7Ozs7Ozs7Ozs7T0FZRztJQUNJLG1CQUFtQixDQUN4QixPQUFjLEVBQ2QsUUFBZSxFQUNmLE9BQXlCLEVBQ3pCLFFBQWtCLEVBQ2xCLFVBQWlCLEVBQ2pCLFNBQW9CLEVBQ3BCLGFBQWdDLEVBQ2hDLFFBQXlDLEVBQ3pDLFdBQXVCO1FBRXZCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFNBQVMsRUFBRSxhQUFhLENBQUM7YUFDL0QsSUFBSSxDQUFDLENBQUMsWUFBWSxFQUFFLEVBQUUsQ0FDckIsSUFBSSxDQUFDLFNBQVMsQ0FDWixZQUFZLENBQUMsTUFBTSxFQUNuQixPQUFPLEVBQ1AsUUFBUSxFQUNSLFVBQVUsRUFDVixTQUFTLEVBQ1QsYUFBYSxFQUNiLFlBQVksQ0FBQyxjQUFjLEVBQzNCLFFBQVEsRUFDUixXQUFXLENBQ1osQ0FDRixDQUFDO0lBQ04sQ0FBQztJQUVTLEtBQUssQ0FBQywwQkFBMEIsQ0FDeEMsS0FBVSxFQUNWLFdBR1k7UUFFWixJQUFJLENBQUMsSUFBSSxDQUFDLHNCQUFzQixFQUFFO1lBQ2hDLE9BQU8sS0FBSyxDQUFDO1NBQ2Q7UUFFRCxHQUFHLENBQUMsSUFBSSxDQUFDLDhCQUE4QixLQUFLLENBQUMsTUFBTSxRQUFRLENBQUMsQ0FBQztRQUU3RCxNQUFNLE1BQU0sR0FBRyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO1FBRXRFLE1BQU0sc0JBQXNCLEdBQUcsTUFBTSxJQUFJLENBQUMsc0JBQXNCLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRXhGLE1BQU0sYUFBYSxHQUFHLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsSUFBTyxFQUFFLEVBQUU7WUFDaEQsTUFBTSxnQkFBZ0IsR0FBRyxzQkFBc0IsQ0FBQyxvQkFBb0IsQ0FDbEUsSUFBSSxDQUFDLE1BQU0sQ0FDWixDQUFDO1lBQ0YsTUFBTSxnQkFBZ0IsR0FBRyxzQkFBc0IsQ0FBQyxvQkFBb0IsQ0FDbEUsSUFBSSxDQUFDLE1BQU0sQ0FDWixDQUFDO1lBRUYsTUFBTSxhQUFhLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztZQUNqRSxNQUFNLGFBQWEsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1lBRWpFLElBQUksYUFBYSxJQUFJLGFBQWEsRUFBRTtnQkFDbEMsR0FBRyxDQUFDLElBQUksQ0FDTixpQkFBaUIsWUFBWSxDQUFDLElBQUksQ0FBQyw4QkFBOEIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUM3RSxLQUFLLGdCQUFnQixLQUFLLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFLLGdCQUFnQixFQUFFLENBQ3BFLENBQUM7YUFDSDtZQUVELE9BQU8sQ0FBQyxhQUFhLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDMUMsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLGFBQWEsQ0FBQztJQUN2QixDQUFDO0NBQ0YifQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1xdW90ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvcm91dGVycy9hbHBoYS1yb3V0ZXIvcXVvdGVycy9iYXNlLXF1b3Rlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFLQSxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFHdkIsT0FBTyxFQUFrQixHQUFHLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQWE1Rjs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxPQUFnQixVQUFVO0lBVTlCLFlBQ0UsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsUUFBa0IsRUFDbEIsd0JBQTZDLEVBQzdDLHNCQUFnRDtRQUVoRCxJQUFJLENBQUMsYUFBYSxHQUFHLGFBQWEsQ0FBQztRQUNuQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixJQUFJLENBQUMsd0JBQXdCLEdBQUcsd0JBQXdCLENBQUM7UUFDekQsSUFBSSxDQUFDLHNCQUFzQixHQUFHLHNCQUFzQixDQUFDO0lBQ3ZELENBQUM7SUFnREQ7Ozs7Ozs7Ozs7Ozs7T0FhRztJQUNJLG1CQUFtQixDQUN4QixPQUFjLEVBQ2QsUUFBZSxFQUNmLE1BQXNCLEVBQ3RCLE9BQXlCLEVBQ3pCLFFBQWtCLEVBQ2xCLFVBQWlCLEVBQ2pCLGNBQThCLEVBQzlCLFNBQW9CLEVBQ3BCLGFBQWdDLEVBQ2hDLFFBQXlDLEVBQ3pDLFdBQXVCO1FBRXZCLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLGNBQWMsRUFBRSxTQUFTLEVBQUUsYUFBYSxDQUFDO2FBQy9FLElBQUksQ0FBQyxDQUFDLFlBQVksRUFBRSxFQUFFO1lBQ3JCLElBQUksWUFBWSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO2dCQUNuQyxN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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.d.ts
index 75a6b49..ac31ae9 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.d.ts
@@ -4,17 +4,17 @@ import { CurrencyAmount } from '../../../util';
 import { MixedRoute } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { MixedRouteWithValidQuote } from '../entities';
-import { CandidatePoolsBySelectionCriteria } from '../functions/get-candidate-pools';
+import { CandidatePoolsBySelectionCriteria, V2CandidatePools, V3CandidatePools } from '../functions/get-candidate-pools';
 import { IGasModel } from '../gas-models';
 import { BaseQuoter } from './base-quoter';
 import { GetQuotesResult, GetRoutesResult } from './model';
-export declare class MixedQuoter extends BaseQuoter<MixedRoute> {
+export declare class MixedQuoter extends BaseQuoter<[V3CandidatePools, V2CandidatePools], MixedRoute> {
     protected v3SubgraphProvider: IV3SubgraphProvider;
     protected v3PoolProvider: IV3PoolProvider;
     protected v2SubgraphProvider: IV2SubgraphProvider;
     protected v2PoolProvider: IV2PoolProvider;
     protected onChainQuoteProvider: IOnChainQuoteProvider;
     constructor(v3SubgraphProvider: IV3SubgraphProvider, v3PoolProvider: IV3PoolProvider, v2SubgraphProvider: IV2SubgraphProvider, v2PoolProvider: IV2PoolProvider, onChainQuoteProvider: IOnChainQuoteProvider, tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
-    protected getRoutes(tokenIn: Token, tokenOut: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<MixedRoute>>;
+    protected getRoutes(tokenIn: Token, tokenOut: Token, v3v2candidatePools: [V3CandidatePools, V2CandidatePools], tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<MixedRoute>>;
     getQuotes(routes: MixedRoute[], amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig, candidatePools?: CandidatePoolsBySelectionCriteria, gasModel?: IGasModel<MixedRouteWithValidQuote>): Promise<GetQuotesResult>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.js
index 1610d88..be13f7f 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/mixed-quoter.js
@@ -1,3 +1,4 @@
+import { Protocol } from '@uniswap/router-sdk';
 import { TradeType } from '@uniswap/sdk-core';
 import _ from 'lodash';
 import { TokenValidationResult } from '../../../providers';
@@ -8,29 +9,27 @@ import { getMixedRouteCandidatePools } from '../functions/get-candidate-pools';
 import { BaseQuoter } from './base-quoter';
 export class MixedQuoter extends BaseQuoter {
     constructor(v3SubgraphProvider, v3PoolProvider, v2SubgraphProvider, v2PoolProvider, onChainQuoteProvider, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
-        super(tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider);
+        super(tokenProvider, chainId, Protocol.MIXED, blockedTokenListProvider, tokenValidatorProvider);
         this.v3SubgraphProvider = v3SubgraphProvider;
         this.v3PoolProvider = v3PoolProvider;
         this.v2SubgraphProvider = v2SubgraphProvider;
         this.v2PoolProvider = v2PoolProvider;
         this.onChainQuoteProvider = onChainQuoteProvider;
     }
-    async getRoutes(tokenIn, tokenOut, tradeType, routingConfig) {
+    async getRoutes(tokenIn, tokenOut, v3v2candidatePools, tradeType, routingConfig) {
+        const beforeGetRoutes = Date.now();
         if (tradeType != TradeType.EXACT_INPUT) {
             throw new Error('Mixed route quotes are not supported for EXACT_OUTPUT');
         }
+        const [v3CandidatePools, v2CandidatePools] = v3v2candidatePools;
         const { V2poolAccessor, V3poolAccessor, candidatePools: mixedRouteCandidatePools, } = await getMixedRouteCandidatePools({
-            tokenIn,
-            tokenOut,
+            v3CandidatePools,
+            v2CandidatePools,
             tokenProvider: this.tokenProvider,
-            blockedTokenListProvider: this.blockedTokenListProvider,
             v3poolProvider: this.v3PoolProvider,
             v2poolProvider: this.v2PoolProvider,
-            routeType: tradeType,
-            v3subgraphProvider: this.v3SubgraphProvider,
-            v2subgraphProvider: this.v2SubgraphProvider,
             routingConfig,
-            chainId: this.chainId,
+            chainId: this.chainId
         });
         const V3poolsRaw = V3poolAccessor.getAllPools();
         const V2poolsRaw = V2poolAccessor.getAllPools();
@@ -56,12 +55,14 @@ export class MixedQuoter extends BaseQuoter {
         });
         const { maxSwapsPerPath } = routingConfig;
         const routes = computeAllMixedRoutes(tokenIn, tokenOut, pools, maxSwapsPerPath);
+        metric.putMetric('MixedGetRoutesLoad', Date.now() - beforeGetRoutes, MetricLoggerUnit.Milliseconds);
         return {
             routes,
             candidatePools
         };
     }
     async getQuotes(routes, amounts, percents, quoteToken, tradeType, routingConfig, candidatePools, gasModel) {
+        const beforeGetQuotes = Date.now();
         log.info('Starting to get mixed quotes');
         if (gasModel === undefined) {
             throw new Error('GasModel for MixedRouteWithValidQuote is required to getQuotes');
@@ -114,10 +115,11 @@ export class MixedQuoter extends BaseQuoter {
                 routesWithValidQuotes.push(routeWithValidQuote);
             }
         }
+        metric.putMetric('MixedGetQuotesLoad', Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
         return {
             routesWithValidQuotes,
             candidatePools
         };
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvbWl4ZWQtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBNEIsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDeEUsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFTTCxxQkFBcUIsRUFDdEIsTUFBTSxvQkFBb0IsQ0FBQztBQUM1QixPQUFPLEVBQWtCLEdBQUcsRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzdGLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUN2RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUN4RSxPQUFPLEVBQXFDLDJCQUEyQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFHbEgsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUczQyxNQUFNLE9BQU8sV0FBWSxTQUFRLFVBQXNCO0lBT3JELFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixvQkFBMkMsRUFDM0MsYUFBNkIsRUFDN0IsT0FBZ0IsRUFDaEIsd0JBQTZDLEVBQzdDLHNCQUFnRDtRQUVoRCxLQUFLLENBQUMsYUFBYSxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO1FBQ2hGLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7UUFDN0MsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWl4ZWQtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvbWl4ZWQtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQTRCLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBU0wscUJBQXFCLEVBQ3RCLE1BQU0sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxFQUFrQixHQUFHLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUc3RixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDdkQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDeEUsT0FBTyxFQUVMLDJCQUEyQixFQUc1QixNQUFNLGtDQUFrQyxDQUFDO0FBRzFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsTUFBTSxPQUFPLFdBQVksU0FBUSxVQUE0RDtJQU8zRixZQUNFLGtCQUF1QyxFQUN2QyxjQUErQixFQUMvQixrQkFBdUMsRUFDdkMsY0FBK0IsRUFDL0Isb0JBQTJDLEVBQzNDLGFBQTZCLEVBQzdCLE9BQWdCLEVBQ2hCLHdCQUE2QyxFQUM3QyxzQkFBZ0Q7UUFFaEQsS0FBSyxDQUFDLGFBQWEsRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLEtBQUssRUFBRSx3QkFBd0IsRUFBRSxzQkFBc0IsQ0FBQyxDQUFDO1FBQ2hHLElBQUksQ0FBQyxrQkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUM3QyxJQUFJLENBQUMsY0FBYyxHQUFHLGNBQWMsQ0FBQztRQUNyQyxJQUFJLENBQUMsa0JBQWtC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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.d.ts
index f413634..b1009ba 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.d.ts
@@ -5,17 +5,18 @@ import { CurrencyAmount } from '../../../util';
 import { V2Route } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { V2RouteWithValidQuote } from '../entities';
-import { CandidatePoolsBySelectionCriteria } from '../functions/get-candidate-pools';
+import { CandidatePoolsBySelectionCriteria, V2CandidatePools } from '../functions/get-candidate-pools';
 import { IGasModel, IV2GasModelFactory } from '../gas-models';
 import { BaseQuoter } from './base-quoter';
 import { GetQuotesResult } from './model/results/get-quotes-result';
 import { GetRoutesResult } from './model/results/get-routes-result';
-export declare class V2Quoter extends BaseQuoter<V2Route> {
+export declare class V2Quoter extends BaseQuoter<V2CandidatePools, V2Route> {
     protected v2SubgraphProvider: IV2SubgraphProvider;
     protected v2PoolProvider: IV2PoolProvider;
     protected v2QuoteProvider: IV2QuoteProvider;
     protected v2GasModelFactory: IV2GasModelFactory;
     constructor(v2SubgraphProvider: IV2SubgraphProvider, v2PoolProvider: IV2PoolProvider, v2QuoteProvider: IV2QuoteProvider, v2GasModelFactory: IV2GasModelFactory, tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
-    protected getRoutes(tokenIn: Token, tokenOut: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<V2Route>>;
+    protected getRoutes(tokenIn: Token, tokenOut: Token, v2CandidatePools: V2CandidatePools, _tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<V2Route>>;
     getQuotes(routes: V2Route[], amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, _routingConfig: AlphaRouterConfig, candidatePools?: CandidatePoolsBySelectionCriteria, _gasModel?: IGasModel<V2RouteWithValidQuote>, gasPriceWei?: BigNumber): Promise<GetQuotesResult>;
+    refreshRoutesThenGetQuotes(tokenIn: Token, tokenOut: Token, routes: V2Route[], amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig, gasPriceWei?: BigNumber): Promise<GetQuotesResult>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.js
index d6ece9d..aebec65 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v2-quoter.js
@@ -1,34 +1,25 @@
+import { Protocol } from '@uniswap/router-sdk';
 import { TradeType } from '@uniswap/sdk-core';
 import _ from 'lodash';
-import { TokenValidationResult } from '../../../providers';
-import { log, metric, MetricLoggerUnit, routeToString } from '../../../util';
+import { TokenValidationResult, } from '../../../providers';
+import { log, metric, MetricLoggerUnit, routeToString, } from '../../../util';
 import { V2RouteWithValidQuote } from '../entities';
 import { computeAllV2Routes } from '../functions/compute-all-routes';
-import { getV2CandidatePools } from '../functions/get-candidate-pools';
 import { BaseQuoter } from './base-quoter';
 export class V2Quoter extends BaseQuoter {
     constructor(v2SubgraphProvider, v2PoolProvider, v2QuoteProvider, v2GasModelFactory, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
-        super(tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider);
+        super(tokenProvider, chainId, Protocol.V2, blockedTokenListProvider, tokenValidatorProvider);
         this.v2SubgraphProvider = v2SubgraphProvider;
         this.v2PoolProvider = v2PoolProvider;
         this.v2QuoteProvider = v2QuoteProvider;
         this.v2GasModelFactory = v2GasModelFactory;
     }
-    async getRoutes(tokenIn, tokenOut, tradeType, routingConfig) {
+    async getRoutes(tokenIn, tokenOut, v2CandidatePools, _tradeType, routingConfig) {
+        const beforeGetRoutes = Date.now();
         // Fetch all the pools that we will consider routing via. There are thousands
         // of pools, so we filter them to a set of candidate pools that we expect will
         // result in good prices.
-        const { poolAccessor, candidatePools } = await getV2CandidatePools({
-            tokenIn,
-            tokenOut,
-            tokenProvider: this.tokenProvider,
-            blockedTokenListProvider: this.blockedTokenListProvider,
-            poolProvider: this.v2PoolProvider,
-            routeType: tradeType,
-            subgraphProvider: this.v2SubgraphProvider,
-            routingConfig,
-            chainId: this.chainId,
-        });
+        const { poolAccessor, candidatePools } = v2CandidatePools;
         const poolsRaw = poolAccessor.getAllPools();
         // Drop any pools that contain tokens that can not be transferred according to the token validator.
         const pools = await this.applyTokenValidatorToPools(poolsRaw, (token, tokenValidation) => {
@@ -49,12 +40,14 @@ export class V2Quoter extends BaseQuoter {
         // Given all our candidate pools, compute all the possible ways to route from tokenIn to tokenOut.
         const { maxSwapsPerPath } = routingConfig;
         const routes = computeAllV2Routes(tokenIn, tokenOut, pools, maxSwapsPerPath);
+        metric.putMetric('V2GetRoutesLoad', Date.now() - beforeGetRoutes, MetricLoggerUnit.Milliseconds);
         return {
             routes,
             candidatePools,
         };
     }
     async getQuotes(routes, amounts, percents, quoteToken, tradeType, _routingConfig, candidatePools, _gasModel, gasPriceWei) {
+        const beforeGetQuotes = Date.now();
         log.info('Starting to get V2 quotes');
         if (gasPriceWei === undefined) {
             throw new Error('GasPriceWei for V2Routes is required to getQuotes');
@@ -74,6 +67,7 @@ export class V2Quoter extends BaseQuoter {
             gasPriceWei,
             poolProvider: this.v2PoolProvider,
             token: quoteToken,
+            // TODO: implement wrap overhead for v2 routes
         });
         metric.putMetric('V2QuotesLoad', Date.now() - beforeQuotes, MetricLoggerUnit.Milliseconds);
         metric.putMetric('V2QuotesFetched', _(routesWithQuotes)
@@ -106,10 +100,21 @@ export class V2Quoter extends BaseQuoter {
                 routesWithValidQuotes.push(routeWithValidQuote);
             }
         }
+        metric.putMetric('V2GetQuotesLoad', Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
         return {
             routesWithValidQuotes,
-            candidatePools
+            candidatePools,
         };
     }
+    async refreshRoutesThenGetQuotes(tokenIn, tokenOut, routes, amounts, percents, quoteToken, tradeType, routingConfig, gasPriceWei) {
+        const tokenPairs = [];
+        routes.forEach((route) => route.pairs.forEach((pair) => tokenPairs.push([pair.token0, pair.token1])));
+        return this.v2PoolProvider
+            .getPools(tokenPairs, routingConfig)
+            .then((poolAccesor) => {
+            const routes = computeAllV2Routes(tokenIn, tokenOut, poolAccesor.getAllPools(), routingConfig.maxSwapsPerPath);
+            return this.getQuotes(routes, amounts, percents, quoteToken, tradeType, routingConfig, undefined, undefined, gasPriceWei);
+        });
+    }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjItcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBNEIsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDeEUsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFPTCxxQkFBcUIsRUFDdEIsTUFBTSxvQkFBb0IsQ0FBQztBQUM1QixPQUFPLEVBQWtCLEdBQUcsRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzdGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNwRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNyRSxPQUFPLEVBQXFDLG1CQUFtQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFHMUcsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQyxNQUFNLE9BQU8sUUFBUyxTQUFRLFVBQW1CO0lBTS9DLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLGVBQWlDLEVBQ2pDLGlCQUFxQyxFQUNyQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FBQyxhQUFhLEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLHNCQUFzQixDQUFDLENBQUM7UUFDaEYsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztJQUM3QyxDQUFDO0lBRVMsS0FBSyxDQUFDLFNB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjItcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjItcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQTRCLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBT0wscUJBQXFCLEdBQ3RCLE1BQU0sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxFQUFrQixHQUFHLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLGFBQWEsR0FBRyxNQUFNLGVBQWUsQ0FBQztBQUc5RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDcEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFJckUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQyxNQUFNLE9BQU8sUUFBUyxTQUFRLFVBQXFDO0lBTWpFLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLGVBQWlDLEVBQ2pDLGlCQUFxQyxFQUNyQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FDSCxhQUFhLEVBQ2IsT0FBTyxFQUNQLFFBQVEsQ0FBQyxFQUFFLEVBQ1gsd0JBQXdCLEVBQ3hCLHNCQUFzQixDQUN2QixDQUFDO1FBQ0YsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxlQUFlLEdBQUcsZUFBZSxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztJQUM3QyxDQUFD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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.d.ts
index 7def6da..39550d6 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.d.ts
@@ -4,16 +4,16 @@ import { CurrencyAmount } from '../../../util';
 import { V3Route } from '../../router';
 import { AlphaRouterConfig } from '../alpha-router';
 import { V3RouteWithValidQuote } from '../entities';
-import { CandidatePoolsBySelectionCriteria } from '../functions/get-candidate-pools';
+import { CandidatePoolsBySelectionCriteria, V3CandidatePools } from '../functions/get-candidate-pools';
 import { IGasModel } from '../gas-models';
 import { BaseQuoter } from './base-quoter';
 import { GetQuotesResult } from './model/results/get-quotes-result';
 import { GetRoutesResult } from './model/results/get-routes-result';
-export declare class V3Quoter extends BaseQuoter<V3Route> {
+export declare class V3Quoter extends BaseQuoter<V3CandidatePools, V3Route> {
     protected v3SubgraphProvider: IV3SubgraphProvider;
     protected v3PoolProvider: IV3PoolProvider;
     protected onChainQuoteProvider: IOnChainQuoteProvider;
     constructor(v3SubgraphProvider: IV3SubgraphProvider, v3PoolProvider: IV3PoolProvider, onChainQuoteProvider: IOnChainQuoteProvider, tokenProvider: ITokenProvider, chainId: ChainId, blockedTokenListProvider?: ITokenListProvider, tokenValidatorProvider?: ITokenValidatorProvider);
-    protected getRoutes(tokenIn: Token, tokenOut: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<V3Route>>;
+    protected getRoutes(tokenIn: Token, tokenOut: Token, v3CandidatePools: V3CandidatePools, _tradeType: TradeType, routingConfig: AlphaRouterConfig): Promise<GetRoutesResult<V3Route>>;
     getQuotes(routes: V3Route[], amounts: CurrencyAmount[], percents: number[], quoteToken: Token, tradeType: TradeType, routingConfig: AlphaRouterConfig, candidatePools?: CandidatePoolsBySelectionCriteria, gasModel?: IGasModel<V3RouteWithValidQuote>): Promise<GetQuotesResult>;
 }
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.js b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.js
index 66bba05..2af17be 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/alpha-router/quoters/v3-quoter.js
@@ -1,33 +1,24 @@
+import { Protocol } from '@uniswap/router-sdk';
 import { TradeType } from '@uniswap/sdk-core';
 import _ from 'lodash';
 import { TokenValidationResult } from '../../../providers';
 import { log, metric, MetricLoggerUnit, routeToString } from '../../../util';
 import { V3RouteWithValidQuote } from '../entities';
 import { computeAllV3Routes } from '../functions/compute-all-routes';
-import { getV3CandidatePools } from '../functions/get-candidate-pools';
 import { BaseQuoter } from './base-quoter';
 export class V3Quoter extends BaseQuoter {
     constructor(v3SubgraphProvider, v3PoolProvider, onChainQuoteProvider, tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider) {
-        super(tokenProvider, chainId, blockedTokenListProvider, tokenValidatorProvider);
+        super(tokenProvider, chainId, Protocol.V3, blockedTokenListProvider, tokenValidatorProvider);
         this.v3SubgraphProvider = v3SubgraphProvider;
         this.v3PoolProvider = v3PoolProvider;
         this.onChainQuoteProvider = onChainQuoteProvider;
     }
-    async getRoutes(tokenIn, tokenOut, tradeType, routingConfig) {
+    async getRoutes(tokenIn, tokenOut, v3CandidatePools, _tradeType, routingConfig) {
+        const beforeGetRoutes = Date.now();
         // Fetch all the pools that we will consider routing via. There are thousands
         // of pools, so we filter them to a set of candidate pools that we expect will
         // result in good prices.
-        const { poolAccessor, candidatePools } = await getV3CandidatePools({
-            tokenIn,
-            tokenOut,
-            tokenProvider: this.tokenProvider,
-            blockedTokenListProvider: this.blockedTokenListProvider,
-            poolProvider: this.v3PoolProvider,
-            routeType: tradeType,
-            subgraphProvider: this.v3SubgraphProvider,
-            routingConfig,
-            chainId: this.chainId,
-        });
+        const { poolAccessor, candidatePools } = v3CandidatePools;
         const poolsRaw = poolAccessor.getAllPools();
         // Drop any pools that contain fee on transfer tokens (not supported by v3) or have issues with being transferred.
         const pools = await this.applyTokenValidatorToPools(poolsRaw, (token, tokenValidation) => {
@@ -50,12 +41,14 @@ export class V3Quoter extends BaseQuoter {
         // Given all our candidate pools, compute all the possible ways to route from tokenIn to tokenOut.
         const { maxSwapsPerPath } = routingConfig;
         const routes = computeAllV3Routes(tokenIn, tokenOut, pools, maxSwapsPerPath);
+        metric.putMetric('V3GetRoutesLoad', Date.now() - beforeGetRoutes, MetricLoggerUnit.Milliseconds);
         return {
             routes,
             candidatePools,
         };
     }
     async getQuotes(routes, amounts, percents, quoteToken, tradeType, routingConfig, candidatePools, gasModel) {
+        const beforeGetQuotes = Date.now();
         log.info('Starting to get V3 quotes');
         if (gasModel === undefined) {
             throw new Error('GasModel for V3RouteWithValidQuote is required to getQuotes');
@@ -109,10 +102,11 @@ export class V3Quoter extends BaseQuoter {
                 routesWithValidQuotes.push(routeWithValidQuote);
             }
         }
+        metric.putMetric('V3GetQuotesLoad', Date.now() - beforeGetQuotes, MetricLoggerUnit.Milliseconds);
         return {
             routesWithValidQuotes,
             candidatePools
         };
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjMtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBNEIsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDeEUsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFPTCxxQkFBcUIsRUFDdEIsTUFBTSxvQkFBb0IsQ0FBQztBQUM1QixPQUFPLEVBQWtCLEdBQUcsRUFBRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRzdGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUNwRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNyRSxPQUFPLEVBQXFDLG1CQUFtQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFHMUcsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQyxNQUFNLE9BQU8sUUFBUyxTQUFRLFVBQW1CO0lBSy9DLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLG9CQUEyQyxFQUMzQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FBQyxhQUFhLEVBQUUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLHNCQUFzQixDQUFDLENBQUM7UUFDaEYsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGtCQUFrQixDQUFDO1FBQzdDLElBQUksQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxvQkFBb0IsQ0FBQztJQUNuRCxDQUFDO0lBRVMsS0FBSyxDQUFDLFNBQVMsQ0FDdkIsT0FBYyxFQUNkLFFBQWUsRUFDZixTQUFvQixFQUNwQixhQUFnQztR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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidjMtcXVvdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL3F1b3RlcnMvdjMtcXVvdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQTRCLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3hFLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBT0wscUJBQXFCLEVBQ3RCLE1BQU0sb0JBQW9CLENBQUM7QUFDNUIsT0FBTyxFQUFrQixHQUFHLEVBQUUsTUFBTSxFQUFFLGdCQUFnQixFQUFFLGFBQWEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUc3RixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDcEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFJckUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUkzQyxNQUFNLE9BQU8sUUFBUyxTQUFRLFVBQXFDO0lBS2pFLFlBQ0Usa0JBQXVDLEVBQ3ZDLGNBQStCLEVBQy9CLG9CQUEyQyxFQUMzQyxhQUE2QixFQUM3QixPQUFnQixFQUNoQix3QkFBNkMsRUFDN0Msc0JBQWdEO1FBRWhELEtBQUssQ0FBQyxhQUFhLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxFQUFFLEVBQUUsd0JBQXdCLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztRQUM3RixJQUFJLENBQUMsa0JBQWtCLEdBQUcsa0JBQWtCLENBQUM7UUFDN0MsSUFBSSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7UUFDckMsSUFBSSxDQUFDLG9CQUFvQixHQUFHLG9CQUFvQixDQUFDO0lBQ25ELENBQUM7SUFFUyxLQUFLLENBQUMsU0FBUyxDQUN2QixPQUFjLEVBQ2QsUUFBZSxFQUNmLGdC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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.d.ts
index 88d38ff..3467b5f 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.d.ts
@@ -56,6 +56,9 @@ export declare const ADDITIONAL_BASES: (tokenProvider: ITokenProvider) => Promis
     8453?: {
         [tokenAddress: string]: Token[];
     } | undefined;
+    1024?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
 }>;
 /**
  * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these
@@ -113,5 +116,8 @@ export declare const CUSTOM_BASES: (tokenProvider: ITokenProvider) => Promise<{
     8453?: {
         [tokenAddress: string]: Token[];
     } | undefined;
+    1024?: {
+        [tokenAddress: string]: Token[];
+    } | undefined;
 }>;
 export {};
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.js b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.js
index b0702eb..42832c1 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/legacy-router/bases.js
@@ -38,6 +38,7 @@ export const BASES_TO_CHECK_TRADES_AGAINST = (_tokenProvider) => {
         [ChainId.AVALANCHE]: [WRAPPED_NATIVE_CURRENCY[ChainId.AVALANCHE], USDC_AVAX, DAI_AVAX],
         [ChainId.BASE]: [WRAPPED_NATIVE_CURRENCY[ChainId.BASE], USDC_BASE],
         [ChainId.BASE_GOERLI]: [WRAPPED_NATIVE_CURRENCY[ChainId.BASE_GOERLI]],
+        [ChainId.TENET]: [WRAPPED_NATIVE_CURRENCY[ChainId.TENET]],
     };
 };
 const getBasePairByAddress = async (tokenProvider, _chainId, fromAddress, toAddress) => {
@@ -75,4 +76,4 @@ export const CUSTOM_BASES = async (tokenProvider) => {
         },
     };
 };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcm91dGVycy9sZWdhY3ktcm91dGVyL2Jhc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZEQUE2RDtBQUM3RCxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQsT0FBTyxFQUNMLE9BQU8sRUFDUCxRQUFRLEVBQ1IsUUFBUSxFQUNSLE9BQU8sRUFDUCxXQUFXLEVBRVgsU0FBUyxFQUNULFNBQVMsRUFDVCxRQUFRLEVBQ1IsWUFBWSxFQUNaLFFBQVEsRUFDUixZQUFZLEVBQ1osWUFBWSxFQUNaLGNBQWMsRUFDZCxxQkFBcUIsR0FFdEIsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN4QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQU01RCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBRyxDQUMzQyxjQUE4QixFQUNkLEVBQUU7SUFDbEIsT0FBTztRQUNMLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ2pCLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUU7WUFDekMsV0FBVztZQUNYLFlBQVk7WUFDWixZQUFZO1lBQ1osWUFBWTtTQUNiO1FBQ0QsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFFLENBQUM7UUFDNUQsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFFLENBQUM7UUFDOUQsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFFLENBQUM7UUFDaEUsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUU7WUFDekIsdUJBQXVCLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBRTtT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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcm91dGVycy9sZWdhY3ktcm91dGVyL2Jhc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDZEQUE2RDtBQUM3RCxPQUFPLEVBQUUsT0FBTyxFQUFTLE1BQU0sbUJBQW1CLENBQUM7QUFFbkQsT0FBTyxFQUNMLE9BQU8sRUFDUCxRQUFRLEVBQ1IsUUFBUSxFQUNSLE9BQU8sRUFDUCxXQUFXLEVBRVgsU0FBUyxFQUNULFNBQVMsRUFDVCxRQUFRLEVBQ1IsWUFBWSxFQUNaLFFBQVEsRUFDUixZQUFZLEVBQ1osWUFBWSxFQUNaLGNBQWMsRUFDZCxxQkFBcUIsR0FFdEIsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN4QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQU01RCxNQUFNLENBQUMsTUFBTSw2QkFBNkIsR0FBRyxDQUMzQyxjQUE4QixFQUNkLEVBQUU7SUFDbEIsT0FBTztRQUNMLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ2pCLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUU7WUFDekMsV0FBVztZQUNYLFlBQVk7WUFDWixZQUFZO1lBQ1osWUFBWTtTQUNiO1FBQ0QsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFFLENBQUM7UUFDNUQsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFFLENBQUM7UUFDOUQsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFFLENBQUM7UUFDaEUsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUU7WUFDekIsdUJBQXVCLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBRTtT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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/router.d.ts b/node_modules/@uniswap/smart-order-router/build/module/routers/router.d.ts
index c36c874..fe67d61 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/router.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/router.d.ts
@@ -69,6 +69,11 @@ export declare type SwapRoute = {
      * 2 if simulation was successful (simulated gas estimates are returned)
      */
     simulationStatus?: SimulationStatus;
+    /**
+     * Used internally within routing-api to see how many route requests
+     * hit the cached routes. This is used further down the line for future perf optimizations.
+     */
+    hitsCachedRoute?: boolean;
 };
 export declare type MethodParameters = SDKMethodParameters & {
     to: string;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/routers/router.js b/node_modules/@uniswap/smart-order-router/build/module/routers/router.js
index a10c228..d83b6ed 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/routers/router.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/routers/router.js
@@ -41,4 +41,4 @@ export class IRouter {
 }
 export class ISwapToRatio {
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcnMvcm91dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFFTCxhQUFhLEVBQ2IsUUFBUSxHQUVULE1BQU0scUJBQXFCLENBQUM7QUFTN0IsT0FBTyxFQUFFLEtBQUssSUFBSSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBSUwsS0FBSyxJQUFJLFVBQVUsR0FDcEIsTUFBTSxpQkFBaUIsQ0FBQztBQU96QixNQUFNLE9BQU8sT0FBUSxTQUFRLFVBQXdCO0lBQXJEOztRQUNFLGFBQVEsR0FBZ0IsUUFBUSxDQUFDLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0NBQUE7QUFDRCxNQUFNLE9BQU8sT0FBUSxTQUFRLFVBQXdCO0lBQXJEOztRQUNFLGFBQVEsR0FBZ0IsUUFBUSxDQUFDLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0NBQUE7QUFDRCxNQUFNLE9BQU8sVUFBVyxTQUFRLGFBQTJCO0lBQTNEOztRQUNFLGFBQVEsR0FBbUIsUUFBUSxDQUFDLEtBQUssQ0FBQztJQUM1QyxDQUFDO0NBQUE7QUFnRUQsTUFBTSxDQUFOLElBQVksaUJBSVg7QUFKRCxXQUFZLGlCQUFpQjtJQUMzQiwrREFBVyxDQUFBO0lBQ1gsNkVBQWtCLENBQUE7SUFDbEIsNkVBQWtCLENBQUE7QUFDcEIsQ0FBQyxFQUpXLGlCQUFpQixLQUFqQixpQkFBaUIsUUFJNUI7QUFxQkQsTUFBTSxDQUFOLElBQVksUUFHWDtBQUhELFdBQVksUUFBUTtJQUNsQiwrREFBZ0IsQ0FBQTtJQUNoQiwyREFBYyxDQUFBO0FBQ2hCLENBQUMsRUFIVyxRQUFRLEtBQVIsUUFBUSxRQUduQjtBQTBERDs7Ozs7O0dBTUc7QUFDSCxNQUFNLE9BQWdCLE9BQU87Q0FvQjVCO0FBRUQsTUFBTSxPQUFnQixZQUFZO0NBU2pDIn0=
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcnMvcm91dGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFFTCxhQUFhLEVBQ2IsUUFBUSxHQUVULE1BQU0scUJBQXFCLENBQUM7QUFTN0IsT0FBTyxFQUFFLEtBQUssSUFBSSxVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN0RCxPQUFPLEVBSUwsS0FBSyxJQUFJLFVBQVUsR0FDcEIsTUFBTSxpQkFBaUIsQ0FBQztBQU96QixNQUFNLE9BQU8sT0FBUSxTQUFRLFVBQXdCO0lBQXJEOztRQUNFLGFBQVEsR0FBZ0IsUUFBUSxDQUFDLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0NBQUE7QUFDRCxNQUFNLE9BQU8sT0FBUSxTQUFRLFVBQXdCO0lBQXJEOztRQUNFLGFBQVEsR0FBZ0IsUUFBUSxDQUFDLEVBQUUsQ0FBQztJQUN0QyxDQUFDO0NBQUE7QUFDRCxNQUFNLE9BQU8sVUFBVyxTQUFRLGFBQTJCO0lBQTNEOztRQUNFLGFBQVEsR0FBbUIsUUFBUSxDQUFDLEtBQUssQ0FBQztJQUM1QyxDQUFDO0NBQUE7QUFxRUQsTUFBTSxDQUFOLElBQVksaUJBSVg7QUFKRCxXQUFZLGlCQUFpQjtJQUMzQiwrREFBVyxDQUFBO0lBQ1gsNkVBQWtCLENBQUE7SUFDbEIsNkVBQWtCLENBQUE7QUFDcEIsQ0FBQyxFQUpXLGlCQUFpQixLQUFqQixpQkFBaUIsUUFJNUI7QUFxQkQsTUFBTSxDQUFOLElBQVksUUFHWDtBQUhELFdBQVksUUFBUTtJQUNsQiwrREFBZ0IsQ0FBQTtJQUNoQiwyREFBYyxDQUFBO0FBQ2hCLENBQUMsRUFIVyxRQUFRLEtBQVIsUUFBUSxRQUduQjtBQTBERDs7Ozs7O0dBTUc7QUFDSCxNQUFNLE9BQWdCLE9BQU87Q0FvQjVCO0FBRUQsTUFBTSxPQUFnQixZQUFZO0NBU2pDIn0=
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/tsconfig.module.tsbuildinfo b/node_modules/@uniswap/smart-order-router/build/module/tsconfig.module.tsbuildinfo
index fdbf7eb..bbd41cf 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/tsconfig.module.tsbuildinfo
+++ b/node_modules/@uniswap/smart-order-router/build/module/tsconfig.module.tsbuildinfo
@@ -1 +1 @@
-{"program":{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../src/providers/cache.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostic_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/util/types.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/globals.global.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/ts3.6/base.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/base.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/node-cache/index.d.ts","../../src/providers/cache-node.ts","../../node_modules/@uniswap/sdk-core/dist/chains.d.ts","../../node_modules/@uniswap/sdk-core/dist/addresses.d.ts","../../node_modules/jsbi/jsbi.d.ts","../../node_modules/@uniswap/sdk-core/dist/constants.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/token.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/basecurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/nativecurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/currency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyamount.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/price.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/ether.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/weth9.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/computepriceimpact.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sortedinsert.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sqrt.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/validateandparseaddress.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/index.d.ts","../../node_modules/@types/bunyan/index.d.ts","../../src/util/log.ts","../../node_modules/@ethersproject/bytes/lib/index.d.ts","../../node_modules/@ethersproject/bignumber/lib/bignumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/fixednumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/index.d.ts","../../src/providers/gas-price-provider.ts","../../src/providers/caching-gas-provider.ts","../../node_modules/@uniswap/token-lists/dist/tokenlist.schema.json","../../node_modules/@uniswap/token-lists/dist/types.d.ts","../../node_modules/@uniswap/token-lists/dist/isversionupdate.d.ts","../../node_modules/@uniswap/token-lists/dist/getversionupgrade.d.ts","../../node_modules/@uniswap/token-lists/dist/difftokenlists.d.ts","../../node_modules/@uniswap/token-lists/dist/minversionbump.d.ts","../../node_modules/@uniswap/token-lists/dist/nextversion.d.ts","../../node_modules/@uniswap/token-lists/dist/versioncomparator.d.ts","../../node_modules/@uniswap/token-lists/dist/index.d.ts","../../node_modules/axios/index.d.ts","../../node_modules/@types/lodash/common/common.d.ts","../../node_modules/@types/lodash/common/array.d.ts","../../node_modules/@types/lodash/common/collection.d.ts","../../node_modules/@types/lodash/common/date.d.ts","../../node_modules/@types/lodash/common/function.d.ts","../../node_modules/@types/lodash/common/lang.d.ts","../../node_modules/@types/lodash/common/math.d.ts","../../node_modules/@types/lodash/common/number.d.ts","../../node_modules/@types/lodash/common/object.d.ts","../../node_modules/@types/lodash/common/seq.d.ts","../../node_modules/@types/lodash/common/string.d.ts","../../node_modules/@types/lodash/common/util.d.ts","../../node_modules/@types/lodash/index.d.ts","../../src/util/metric.ts","../../node_modules/@ethersproject/abi/lib/fragments.d.ts","../../node_modules/@ethersproject/abi/lib/coders/abstract-coder.d.ts","../../node_modules/@ethersproject/abi/lib/abi-coder.d.ts","../../node_modules/@ethersproject/properties/lib/index.d.ts","../../node_modules/@ethersproject/abi/lib/interface.d.ts","../../node_modules/@ethersproject/abi/lib/index.d.ts","../../node_modules/@ethersproject/strings/lib/bytes32.d.ts","../../node_modules/@ethersproject/strings/lib/idna.d.ts","../../node_modules/@ethersproject/strings/lib/utf8.d.ts","../../node_modules/@ethersproject/strings/lib/index.d.ts","../../node_modules/@ethersproject/networks/lib/types.d.ts","../../node_modules/@ethersproject/networks/lib/index.d.ts","../../node_modules/@ethersproject/transactions/lib/index.d.ts","../../node_modules/@ethersproject/web/lib/index.d.ts","../../node_modules/@ethersproject/abstract-provider/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/formatter.d.ts","../../node_modules/@ethersproject/providers/lib/base-provider.d.ts","../../node_modules/@ethersproject/abstract-signer/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/websocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/url-json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/alchemy-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ankr-provider.d.ts","../../node_modules/@ethersproject/providers/lib/cloudflare-provider.d.ts","../../node_modules/@ethersproject/providers/lib/etherscan-provider.d.ts","../../node_modules/@ethersproject/providers/lib/fallback-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ipc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/infura-provider.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-batch-provider.d.ts","../../node_modules/@ethersproject/providers/lib/nodesmith-provider.d.ts","../../node_modules/@ethersproject/providers/lib/pocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/web3-provider.d.ts","../../node_modules/@ethersproject/providers/lib/index.d.ts","../../node_modules/@ethersproject/contracts/lib/index.d.ts","../../node_modules/@ethersproject/logger/lib/index.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlist.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlists.d.ts","../../node_modules/@ethersproject/wordlists/lib/index.d.ts","../../node_modules/@ethersproject/hdnode/lib/index.d.ts","../../node_modules/@ethersproject/signing-key/lib/index.d.ts","../../node_modules/@ethersproject/json-wallets/lib/crowdsale.d.ts","../../node_modules/@ethersproject/json-wallets/lib/inspect.d.ts","../../node_modules/@ethersproject/json-wallets/lib/keystore.d.ts","../../node_modules/@ethersproject/json-wallets/lib/index.d.ts","../../node_modules/@ethersproject/wallet/lib/index.d.ts","../../node_modules/@ethersproject/constants/lib/addresses.d.ts","../../node_modules/@ethersproject/constants/lib/bignumbers.d.ts","../../node_modules/@ethersproject/constants/lib/hashes.d.ts","../../node_modules/@ethersproject/constants/lib/strings.d.ts","../../node_modules/@ethersproject/constants/lib/index.d.ts","../../node_modules/@ethersproject/address/lib/index.d.ts","../../node_modules/@ethersproject/base64/lib/base64.d.ts","../../node_modules/@ethersproject/base64/lib/index.d.ts","../../node_modules/@ethersproject/basex/lib/index.d.ts","../../node_modules/@ethersproject/hash/lib/id.d.ts","../../node_modules/@ethersproject/hash/lib/namehash.d.ts","../../node_modules/@ethersproject/hash/lib/message.d.ts","../../node_modules/@ethersproject/hash/lib/typed-data.d.ts","../../node_modules/@ethersproject/hash/lib/index.d.ts","../../node_modules/@ethersproject/keccak256/lib/index.d.ts","../../node_modules/@ethersproject/sha2/lib/types.d.ts","../../node_modules/@ethersproject/sha2/lib/sha2.d.ts","../../node_modules/@ethersproject/sha2/lib/index.d.ts","../../node_modules/@ethersproject/solidity/lib/index.d.ts","../../node_modules/@ethersproject/random/lib/random.d.ts","../../node_modules/@ethersproject/random/lib/shuffle.d.ts","../../node_modules/@ethersproject/random/lib/index.d.ts","../../node_modules/@ethersproject/rlp/lib/index.d.ts","../../node_modules/@ethersproject/units/lib/index.d.ts","../../node_modules/ethers/lib/utils.d.ts","../../node_modules/ethers/lib/_version.d.ts","../../node_modules/ethers/lib/ethers.d.ts","../../node_modules/ethers/lib/index.d.ts","../../src/types/v3/commons.ts","../../src/types/v3/ierc20metadata.d.ts","../../src/types/v3/factories/ierc20metadata__factory.ts","../../node_modules/@uniswap/v3-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tickdataprovider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/ticklistdataprovider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/calldata.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/computepooladdress.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encoderoutetopath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encodesqrtratiox96.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/fullmath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/issorted.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/liquiditymath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/maxliquidityforamounts.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/mostsignificantbit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/nearestusabletick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/pricetickconversions.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/sqrtpricemath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/swapmath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/ticklibrary.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/ticklist.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickmath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/multicall.d.ts","../../node_modules/@uniswap/v3-sdk/dist/selfpermit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/nonfungiblepositionmanager.d.ts","../../node_modules/@uniswap/v3-sdk/dist/payments.d.ts","../../node_modules/@uniswap/v3-sdk/dist/quoter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/staker.d.ts","../../node_modules/@uniswap/v3-sdk/dist/swaprouter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/index.d.ts","../../src/util/chains.ts","../../src/util/addresses.ts","../../src/util/amounts.ts","../../node_modules/@uniswap/router-sdk/dist/constants.d.ts","../../node_modules/@uniswap/router-sdk/dist/approveandcall.d.ts","../../node_modules/@uniswap/router-sdk/dist/multicallextended.d.ts","../../node_modules/@uniswap/router-sdk/dist/paymentsextended.d.ts","../../node_modules/@uniswap/v2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v2-sdk/dist/errors.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/pair.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v2-sdk/dist/router.d.ts","../../node_modules/@uniswap/v2-sdk/dist/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedroute/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/protocol.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedroute/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/swaprouter.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/encodemixedroutetopath.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/index.d.ts","../../src/util/protocols.ts","../../node_modules/@uniswap/default-token-list/build/uniswap-default.tokenlist.json","../../node_modules/@types/retry/index.d.ts","../../node_modules/@types/async-retry/index.d.ts","../../src/providers/provider.ts","../../src/types/other/commons.ts","../../src/types/other/itokenvalidator.d.ts","../../src/types/other/factories/itokenvalidator__factory.ts","../../src/providers/multicall-provider.ts","../../src/providers/token-validator-provider.ts","../../src/types/v2/commons.ts","../../src/types/v2/iuniswapv2pair.d.ts","../../src/types/v2/factories/iuniswapv2pair__factory.ts","../../src/providers/v2/pool-provider.ts","../../src/types/other/gasdataarbitrum.d.ts","../../src/types/other/factories/gasdataarbitrum__factory.ts","../../src/types/other/gaspriceoracle.d.ts","../../src/types/other/factories/gaspriceoracle__factory.ts","../../src/providers/v3/gas-data-provider.ts","../../src/types/v3/iuniswapv3poolstate.d.ts","../../src/types/v3/factories/iuniswapv3poolstate__factory.ts","../../src/providers/v3/pool-provider.ts","../../node_modules/@types/await-timeout/index.d.ts","../../node_modules/graphql/language/source.d.ts","../../node_modules/graphql/language/tokenkind.d.ts","../../node_modules/graphql/language/ast.d.ts","../../node_modules/graphql-request/dist/types.d.ts","../../node_modules/graphql-request/dist/types.dom.d.ts","../../node_modules/graphql-request/dist/index.d.ts","../../src/providers/v2/subgraph-provider.ts","../../src/providers/v3/subgraph-provider.ts","../../src/types/other/erc20.d.ts","../../src/types/other/factories/erc20__factory.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/routercommands.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/command.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/allowancetransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/signaturetransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/allowanceprovider.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/index.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/inputtokens.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/seaport.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/foundation.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nftx.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nft20.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/sudoswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/cryptopunk.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/x2y2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/element-market.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/looksrarev2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/nfttrade.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/uniswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/swaprouter.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/unwrapweth.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/constants.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/index.d.ts","../../src/routers/router.ts","../../src/routers/legacy-router/bases.ts","../../src/routers/legacy-router/legacy-router.ts","../../src/routers/legacy-router/index.ts","../../src/routers/index.ts","../../src/util/methodparameters.ts","../../src/util/gas-factory-helpers.ts","../../src/util/unsupported-tokens.ts","../../src/routers/alpha-router/config.ts","../../src/routers/alpha-router/gas-models/gas-model.ts","../../src/routers/alpha-router/entities/route-with-valid-quote.ts","../../node_modules/mnemonist/utils/types.d.ts","../../node_modules/mnemonist/fixed-reverse-heap.d.ts","../../node_modules/mnemonist/queue.d.ts","../../src/routers/alpha-router/gas-models/v3/gas-costs.ts","../../src/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/index.ts","../../src/routers/alpha-router/functions/best-swap-route.ts","../../src/routers/alpha-router/functions/calculate-ratio-amount-in.ts","../../src/routers/alpha-router/functions/get-candidate-pools.ts","../../src/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/mixedroute/mixed-route-heuristic-gas-model.ts","../../src/routers/alpha-router/quoters/model/results/get-routes-result.ts","../../src/routers/alpha-router/entities/index.ts","../../src/routers/alpha-router/quoters/model/results/get-quotes-result.ts","../../src/routers/alpha-router/quoters/model/results/index.ts","../../src/routers/alpha-router/quoters/model/index.ts","../../src/routers/alpha-router/quoters/base-quoter.ts","../../src/routers/alpha-router/functions/compute-all-routes.ts","../../src/routers/alpha-router/quoters/v2-quoter.ts","../../src/routers/alpha-router/quoters/v3-quoter.ts","../../src/routers/alpha-router/quoters/mixed-quoter.ts","../../src/routers/alpha-router/quoters/index.ts","../../src/routers/alpha-router/alpha-router.ts","../../src/routers/alpha-router/index.ts","../../src/util/routes.ts","../../src/util/index.ts","../../src/providers/token-provider.ts","../../src/providers/caching-token-list-provider.ts","../../src/providers/caching-token-provider.ts","../../src/providers/eip-1559-gas-price-provider.ts","../../src/types/other/permit2.d.ts","../../src/types/other/factories/permit2__factory.ts","../../src/providers/simulation-provider.ts","../../src/providers/eth-estimate-gas-provider.ts","../../src/providers/eth-gas-station-info-gas-price-provider.ts","../../src/providers/legacy-gas-price-provider.ts","../../node_modules/@types/stats-lite/index.d.ts","../../src/types/v3/uniswapinterfacemulticall.d.ts","../../src/types/v3/factories/uniswapinterfacemulticall__factory.ts","../../src/providers/multicall-uniswap-provider.ts","../../src/providers/on-chain-gas-price-provider.ts","../../src/types/other/imixedroutequoterv1.d.ts","../../src/types/other/factories/imixedroutequoterv1__factory.ts","../../src/types/v3/iquoterv2.d.ts","../../src/types/v3/factories/iquoterv2__factory.ts","../../src/providers/on-chain-quote-provider.ts","../../src/providers/static-gas-price-provider.ts","../../src/types/other/swaprouter02.d.ts","../../src/types/other/factories/swaprouter02__factory.ts","../../src/providers/swap-router-provider.ts","../../src/util/calldata.ts","../../src/providers/tenderly-simulation-provider.ts","../../src/providers/uri-subgraph-provider.ts","../../src/providers/caching/route/model/cached-route.ts","../../src/providers/caching/route/model/cached-routes.ts","../../src/providers/caching/route/model/cache-mode.ts","../../src/providers/caching/route/model/index.ts","../../src/providers/caching/route/route-caching-provider.ts","../../src/providers/caching/route/index.ts","../../src/providers/v2/caching-pool-provider.ts","../../src/providers/v2/caching-subgraph-provider.ts","../../src/providers/v2/quote-provider.ts","../../src/providers/v2/static-subgraph-provider.ts","../../src/providers/v2/subgraph-provider-with-fallback.ts","../../src/providers/v2/uri-subgraph-provider.ts","../../src/providers/v3/caching-pool-provider.ts","../../src/providers/v3/caching-subgraph-provider.ts","../../src/providers/v3/static-subgraph-provider.ts","../../src/providers/v3/subgraph-provider-with-fallback.ts","../../src/providers/v3/uri-subgraph-provider.ts","../../src/providers/index.ts","../../src/index.ts","../../node_modules/chalk/index.d.ts","../../node_modules/jest-diff/build/cleanupsemantic.d.ts","../../node_modules/pretty-format/build/types.d.ts","../../node_modules/pretty-format/build/index.d.ts","../../node_modules/jest-diff/build/types.d.ts","../../node_modules/jest-diff/build/difflines.d.ts","../../node_modules/jest-diff/build/printdiffs.d.ts","../../node_modules/jest-diff/build/index.d.ts","../../node_modules/jest-matcher-utils/build/index.d.ts","../../node_modules/@types/jest/index.d.ts"],"fileInfos":[{"version":"f5c28122bee592cfaf5c72ed7bcc47f453b79778ffa6e301f45d21a0970719d4","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06",{"version":"3f149f903dd20dfeb7c80e228b659f0e436532de772469980dbd00702cc05cc1","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"43fb1d932e4966a39a41b464a12a81899d9ae5f2c829063f5571b6b87e6d2f9c","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"0d5f52b3174bee6edb81260ebcd792692c32c81fd55499d69531496f3f2b25e7","affectsGlobalScope":true},{"version":"810627a82ac06fb5166da5ada4159c4ec11978dfbb0805fe804c86406dab8357","affectsGlobalScope":true},{"version":"181f1784c6c10b751631b24ce60c7f78b20665db4550b335be179217bacc0d5f","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"75ec0bdd727d887f1b79ed6619412ea72ba3c81d92d0787ccb64bab18d261f14","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"12a310447c5d23c7d0d5ca2af606e3bd08afda69100166730ab92c62999ebb9d","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"cd483c056da900716879771893a3c9772b66c3c88f8943b4205aec738a94b1d0","affectsGlobalScope":true},{"version":"c37f8a49593a0030eecb51bbfa270e709bec9d79a6cc3bb851ef348d4e6b26f8","affectsGlobalScope":true},{"version":"3d413706ea4efe4afc0c3411415490925d1df3e7ab5e4ca372c2ff36e07fd2ac","signature":"6856f77eaf973a9c9e258291655a8d89756449d2ba6e48c84b1672803d307e18"},"c7bdc99177a2a94d25fb13722adaaf5b3291bf70b4d1b27584ba189dd3889ba3",{"version":"d1c92b66c4105659fcad4eb76a1481f7311033e117d0678a1ec545e8ddb8d4c6","affectsGlobalScope":true},"e23424b97418eca3226fd24de079f1203eb70360622e4e093af2aff14d4be6ec","dee93c07b4df5e26010dc9ec4cdf4d6e4076bb4474d2a8371529217c8b2740a4","ed40f2f184db052dc8df62d1f199823c8bbccc487c0a2a7c54eeea0badcf4378","04eaa93bd75f937f9184dcb95a7983800c5770cf8ddd8ac0f3734dc02f5b20ef",{"version":"c8155caf28fc7b0a564156a5df28ad8a844a3bd32d331d148d8f3ce88025c870","affectsGlobalScope":true},"45ac321f2e15d268fd74a90ddaa6467dcaaff2c5b13f95b4b85831520fb7a491","dfc747ab8dd5f623055a4c26fd35e8cceca869fd3f1cf09701c941ca3679665a","c9f5f2920ff61d7158417b8440d5181ddc34a3dfef811a5677dd8a9fb91471e9","5cc0a492da3602510b8f5ed1852b1e0390002780d8758fbc8c0cd023ca7085f8","ec7dafafe751a5121f8f1c80201ebe7e7238c47e6329280a73c4d1ca4bb7fa28","64debeb10e4b7ae4ec9e89bfb4e04c6101ab98c3cc806d14e5488607cfec2753",{"version":"2866a528b2708aa272ec3eaafd3c980abb23aec1ef831cfc5eb2186b98c37ce5","affectsGlobalScope":true},{"version":"a5782d6cea81fe43d2db7ed41e789458c933ab3ab60602f7b5b14c4da3370496","affectsGlobalScope":true},"f258ba66915f0196ec344bc53afe1888240bbcc855ebd151b6cc072275533319","6194335ee3353f7226ba31f31d6301d0c6be87228419c0a08976ccd9d4f1213e","3ac12a54cfaa84683506db8d4cf779135a271d9f0ec18930cf53e61fbeea0c5d","cf3d3b087d1a8a3355eec47d206162c75e912315b9b5c1cd49fda93e948fb80a","36f316c066c4a72dd6f19fec49a074f935744fc9ccbe75c87ebc07fb2feb9062","42176966283d3835c34278b9b5c0f470d484c0c0c6a55c20a2c916a1ce69b6e8","0cff7901aedfe78e314f7d44088f07e2afa1b6e4f0473a4169b8456ca2fb245d","ec70fd6f8a9a83f850dab2960a6789e93d5b034b354a16814cad5daabf62a360","e2236264a811ed1d09a2487a433e8f5216ae62378cf233954ae220cf886f6717","3ec1e108d587a5661ec790db607f482605ba9f3830e118ce578e3ffa3c42e22b","100b3bb9d39d2b1b5340f1bf45a52e94ef1692b45232b4ba00fac5c3cc56d331",{"version":"04fe7e7d8008887943260af1fde2bfd4877e0dc57bf634e0f0b2f3d1794dfd11","affectsGlobalScope":true},"7f77304372efe3c9967e5f9ea2061f1b4bf41dc3cda3c83cdd676f2e5af6b7e6","992c6f6be16c0a1d2eec13ece33adeea2c747ba27fcd078353a8f4bb5b4fea58","2597718d91e306949d89e285bf34c44192014ef541c3bd7cbb825c022749e974","a6b0abdb67d63ebe964ba5fee31bc3daf10c12eecd46b24d778426010c04c67e","ac4801ebc2355ba32329070123b1cd15891bf71b41dcaf9e75b4744832126a59","fd2298fba0640e7295e7bd545e2dfbfcccbb00c27019e501c87965a02bbdebf6","4fd3c4debadce3e9ab9dec3eb45f7f5e2e3d4ad65cf975a6d938d883cfb25a50","71ddd49185b68f27bfac127ef5d22cb2672c278e53e5370d9020ef50ca9c377d","b1ea7a6eaa7608e0e0529aebd323b526a79c6c05a4e519ae5c779675004dcdf1","9fcb033a6208485d8f3fadde31eb5cbcaf99149cff3e40c0dc53ebc6d0dff4e9","7df562288f949945cf69c21cd912100c2afedeeb7cdb219085f7f4b46cb7dde4","9d16690485ff1eb4f6fc57aebe237728fd8e03130c460919da3a35f4d9bd97f5","dcc6910d95a3625fd2b0487fda055988e46ab46c357a1b3618c27b4a8dd739c9","f4149f1aa299474c7040a35fe8f8ac2ad078cc1b190415adc1fff3ed52d490ea","3730099ed008776216268a97771de31753ef71e0a7d0ec650f588cba2a06ce44","8d649dbc429d7139a1d9a14ea2bf8af1dc089e0a879447539587463d4b6c248c","60c9e27816ec8ac8df7240598bb086e95b47edfb454c5cbf4003c812e0ed6e39","e361aecf17fc4034b4c122a1564471cdcd22ef3a51407803cb5a5fc020c04d02","4926467de88a92a4fc9971d8c6f21b91eca1c0e7fc2a46cc4638ab9440c73875",{"version":"2708349d5a11a5c2e5f3a0765259ebe7ee00cdcc8161cb9990cb4910328442a1","affectsGlobalScope":true},"fc0ae4a8ad3c762b96f9d2c3700cb879a373458cb0bf3175478e3b4f85f7ef2f","fabbec378e1ddd86fcf2662e716c2b8318acedb664ee3a4cba6f9e8ee8269cf1","b3593bd345ebea5e4d0a894c03251a3774b34df3d6db57075c18e089a599ba76","e61a21e9418f279bc480394a94d1581b2dee73747adcbdef999b6737e34d721b","efd55e8ca79171bf26c0d0e30221cb8ee1f5a31dd0c791ec4b2e886f42bab124","6f4e4e5a046171e70dfb4b1f3e6212de786bf2c1e2c4383ae0e61c4726fdd168",{"version":"4b1f45b2a27a92262d933407f61e51554dad9e8cd9ccf3c050a007cc48134cf2","signature":"18bfff0f447cb47ab93de965b4799251c57e776a354c120e69ad302e3ef38aa3"},"27048c86fca9e18791dfb2898077cafb8bbd13a0a31caea04169d4225312efd9","b03d4fd4a9472c5d3d0fd9cf502b1720b851cd849d810be9068fd0e4c944e5be","e788661cb1508db23611453d1ee67413429d3f412a1ef589ebe95aed52047588","d0efd4f632c93e90d91ee5e4611f3d7e4bb946c07eb6824bcaf08cf589f18c5d","38f2c79f1f95ec908326f41d43916eb590ce8c65b636349964abcecdfba11ecb","2c414f90866049acbd59a9dad2e155282a02080be773cbfb45ef5aaeae4c43c7","01a4823f194960e7d6cf43ddf58cc477ce43870b76c03764f3893c8ef9a505df","1c6615826296916563f6f88e21e8c1d1be76cc8c2a242fc2d51ffcaf856ed7d8","5ca71a9d355e4cd4446239366a3c281964a9623c01dac99021ad5f1a58f1c11f","c7764a8493c199941aa2f7689ac8d443162c18b19f02e4a3838b20135c485772","a77676cd14de48df1be967e9fad0825f259d5c6d8ab753251ea31886ae2467ec","b69ba53fe9ac4d116dfbae858949f81aff71b948205e4e0aa0237a67fb3e47a9","9b0b92c72051abf6a3fab9c943e9e5e076686119ae53ffd1c6f3caf4a5151cef","a6aa4f1777cf98dc18c63ee05de4c2d7eb0c9f7749354f4680bc86b60d618e83","ad30b20c6aec0fa39f7ca7c6922225450e67aea3b84a691baa74996da6c585ce","8b94d1eabccaec5b77706c4a88225d28a4ab8bc46da7af29dc303c9ec2950fea","5947cd6e46d10873b88edfea7f25a400a838e0fbf7def96bf45ad72b1913e683","d7ef97d18136014b6e15927a84bec746ca84b25c7ff254ab639285c3e6901f44","e3da81b21477fb45fe1d9981d56f0c5390f526724990f0156fc2fed235fdbf3c","b84e91d84f161245dbda145f2a7e8d0891583763d9a8e24e331ab00979ded8da","b63c4a317b6835b3b9bbae96420615b8e69b2264e37258e98c7d36423c6aa099","823739a2e34a0cde0a796c14bfc88978a1e70470023b9d885bacaa5d1b0a59ae","d9cb063f3a5d16883872bdb04863a3da6b63828661a0dcdcb013de8eb4fac336",{"version":"f1be5cefbf112e62d0cd0cacdb0371674fe45a831acca6b968ebc447663bbaa5","signature":"1c27aa74938a2ea9248932b87078a04ffd9e1e1a0b2c2df6c06a56b344cb255e"},"1fcb8b15db812281d69a3090d488903f9e93033004aef9d8889ca3ad0753a96f","bdf5a95eb0a2dd1d39805bdf51b46ba012bb9b92b2ddaae16219595bba7678a5","9f794a0e8550a03baff865a3961cc22afbd85bc4ba9672bdda036971928f85f4","66a697d1e4cdbf25cdce4644a8085a8563041fa8c7731d4d9f5e8f22e66ba72c",{"version":"e84d573f29521225f6873c6f3a795d52374ffbac0f2a4780c9dda2c40a6bb989","signature":"24a4d712063c22742479d03ed750d44f98465e64af9d08789965a97f8d35d7e8"},{"version":"9912e45816078d618083bd0471f72cfd4cb9b0c7de0cd7faeba22a6c8e394622","signature":"de39ab819d91908b2593a73491d639f5f077817be95390a0f23eb876af447046"},"09eed28e33827041ce6f9c46b5b445b3378265da692f261cee49f86003e578f4","1bd83856d2cf899b99c0320eee895dbdca68c7b7750f72274d4f628e8075d192","4c86198a1bd84c98a176684ecb3ae8533d1260763805eb5517f9293e583e99db","67296823a337ee1ef2bcbd2823d624c66ff1160cc15e7f11961f54c1e2eed266","451e59101fecc92272d6c59254874d09d51c0bc5e801d2593790c6789c12b6c3","6520b6e1b4707b8fe46a8cdd47c92929f9ad1587278e186becdf2cc1f063b2c1","e92a1d122620067972ca8f664278dfc89072f281074c3293aa57048ce51f1bfc","1175e20a9266637ef3d03a37c6d34f3b583ead76eaf41ba71d9569388a319eb8","ad9206b9b709f19567035b930a651ef25ee4a30cb0938b4325868f685400e170","3154a026075044aa102298fe9e6a7a14aaa26a06270680c7478a1765af8ffb09","3594c022901a1c8993b0f78a3f534cfb81e7b619ed215348f7f6882f3db02abc","438284c7c455a29b9c0e2d1e72abc62ee93d9a163029ffe918a34c5db3b92da2","0c75b204aed9cf6ff1c7b4bed87a3ece0d9d6fc857a6350c0c95ed0c38c814e8","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","c9f396e71966bd3a890d8a36a6a497dbf260e9b868158ea7824d4b5421210afe","509235563ea2b939e1bbe92aae17e71e6a82ceab8f568b45fb4fce7d72523a32","9364c7566b0be2f7b70ff5285eb34686f83ccb01bda529b82d23b2a844653bfb","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","c311349ec71bb69399ffc4092853e7d8a86c1ca39ddb4cd129e775c19d985793","3c92b6dfd43cc1c2485d9eba5ff0b74a19bb8725b692773ef1d66dac48cda4bd","4908e4c00832b26ce77a629de8501b0e23a903c094f9e79a7fec313a15da796a","2630a7cbb597e85d713b7ef47f2946d4280d3d4c02733282770741d40672b1a5",{"version":"0714e2046df66c0e93c3330d30dbc0565b3e8cd3ee302cf99e4ede6220e5fec8","affectsGlobalScope":true},{"version":"621ead1e1fde8e667a228a19dd90cb463e24496214ca1a1e3d2611d4634a9fce","signature":"a53707eeea688a06431b0f7dfa36482ff37115cb2c4e1cfb47567f1b1a547b4f"},"a0c8e17f4d1ea2704c62d7349bc3b8d9a12e3761b5960cb44144d3f0333b3fcb","3471c0df3d0391e1dffe6e8bf150294531b2b71a2afa5f2b86e52bf84a5db60a","5d4df4de055eddf3187094f938a640f8d96e4c551a47d6686596fdb6ba4c3014","8bc2cad630da1033c1fd8d7df2bffb18af0da6113bd086a8bbec04a2471a1e00","a1059d1bbc8ad46bfe668b8450e7e8002887c4ab987bdb96d6108d8023f8bb8f","5134885e9648e2c6745f8aa1c3e7f5ab3b3617258b3d81ca02de6655ede3d74e","5b919d9204446816876000e03f033458527bde5e3637783b2bc2e7e9ef7ce897","213984ba990f03127a98c3f022d5ca0f0d42df64d4dca199f7319448ce6f3021","020ab2020569964d12e40c68ceae39f40f6c0bee9d502a180f039fcb59c2e34d","aa50dc8a102c76282915e78944293a777866efe6d220a28884ac4a42d7f4c4e2","4f1ae3f24125216cf07c5211a3f00d2bb4782d7cc76c0681603f8249f9232ff0","d3fb92a5640f83f7844d60b35317a0f95c27e3658a749d76d218c461ad091668","d1f8bfcd91b284657ef8187c55ace7db91a3c43e642c3f14e54364154932f7e4","f54c92bfcae54f360fe79514746efce4870e4ddabc064e95d406bba291e9f672","175fd7186fa6a70f9db9b270a04a503cae23cf01cb77e3905bac115c38424cf7","277afd6ab6ec72889e2988e0ddd7d138c1f512e68a1fa4e90eedfd71e2097a51","c0908f85f2b645d375127a3b53a17a65f782e17962d5c1eb68f08b1188acbf15","c993f7ed1b8e1023c1f2ee5b262dbc3b70b27475674e40a53a58591f9972dacc","3fadac5d409cc2f27b1d2f4e7568600f02840205f301c9ae7a3068b46476438b","da6aae64ad559286830fd44c81e3d33303348f184af7db4fde8dd99ae9749407","3633f87c97d359cb55fa7bf0668fb2be8a23342951af6ec2d06e6d0cf7409371","cc3a5427d44fc77ff25e80b3edee4650a51f83de761faf5e633994ecf1ab1b44","b350eda75c6e47299b36002b31d5b220c405c21c365e708989829db013fadbb4","f421882756b6714834ae4687ab1aeadf344a1cc45437d2edffbac020ff3801c1","1d61d6ad832dabafbf63b86c5a79d704f2c8763ada9318e135b17a3cb2d09b32","e5cef5de3e5ad3436d414d20743231e284733b9cf4375dc79eff4fcca4282f99","e624419ba84e33e661e89a28083119ca41f6953dba09a4f82b660684087afe6d","942be430bd0feaced2e3e598273b17e50ea565ec9dac840b580b0b99e1a3cd5c","73350006cec5a0c6b71d53b0b0ddbfb82be96752a9c4e3c904c59e633bc9485e","a7df5c2e9594966c7e0d4a763b13ed5727506d892669df5f7bc9826f539c1d35","258cc5cd6891f6bcbaccefd953997038844e7f65d582cac987ffabf7181bcd4c","00a6db28fc4df6ddf10adbe630d9df620ec13af19039c1869653e60dafa739d2","649324d5abb5464aabe35d86cd0eef16562df811f0971481cee664afa5acbc88","c914014ab7c7001178663f29d31a495398234a41219af61f26d7e8e91b46af96","b135893253d5e507232d1d0b8639dbc00c2bac453fc0420a9af738f1792f8b29","267eb41d7d34151d8b5fdf8b73ddefe0684d7921f4b7db14101f600ea3e8ed02","eb848e4da1fa7568c893e0a0e1f221572c56768dedfe21d2f7741d383c381552","bd6b7d9ff1992fbde49e974f6bf4e8c35922042fc0b6f5326e61fa17a912ffe6","ac443b1f93babbfadff3aef4490044012ff461ba1cf1c7d90ac45f5a26863358","42e4cdd55aa23586b9aff929e2c216150276a37d30c2cf7c0f32ba917722b5e0","4a1ed19ead46b1dd5a319d533fb92162b4ef052ab1c690889cb2eaee293441a1","d0d5b967e5c36354b2f13b4bfb78aae4c1685efa9df3fd946d2e576d370e9302","8076164b388640f7856b25e945a2ded7738e0f8674ac50c256734067b0f0b1b9","36819a1e04a8dbed754a5b3ba2fd5aca2eafb95977eaad6356d77df596c732f4","5fe9c19f085365b73956e27becc5167ad25c5fb024bed4728884966a0faab3f3","d67961ebada9a5e5c393d9c46a4155877a9f7a48b02a0afc6bbe4e87061e46f5","d5e88cd4816669da170c646844042bc83f4523275f85060cf3e2b5b3bf902ee0","137ee20e77a23986e9a1fdf6397b555e6d3073bdcca15927c40671d1ac564aac","a28b00d18def7993bc502f19be6abdb89db2548fe946a51f0771b8ed26a6786c","0fc6ddce4aabc8d84a6aa6644e1012a1474ba844ed6bddc7bea7115583e8a72e","f02da9dd36d7a9aa33c9b2e37ef1f54b0d9ad6a713bae372ae4b72890e40c168","3a5652c44d7b3ee47b1d294b1893b30253d8fb6a1ecaafaf5fdef5fdc118f54c","4fba134e9015779329678ff1fd1afc32bbbf391b1f419f7622a3ecde7bbfc355","af75984f58aa9205be02b0a2248d05f6105a8d4bf8be0baca294b5ceaa10e33e","45a910666b455daf042c0a0cfa610c20ea59a0aaf702f93d3b467a05f9a27e20","5580ff53b5f6f1ecdb68ecb61327e63112f97660912c15444c1f8a08f69c19dc","84fb7c52fc116ddcbd1b34535e387053f2a0134d11c5e39b193f4c1328fb1fb5","fd3cd8bf3c90ef4694195a617a5daaac561d8be52ba33c607f170c11f3c50154","6852fc2f309e330e38694bad95bde670c384d1498bf4fbe3a751761b43279934","9f963b28320dd50221cd23f23059bc23cc7799c7025b44942da68974f90c2e6c","c17329bcf495af58e3010f8e61af51709aaa24a6664d8557a7d01a82b5397c59","4eebb617b12f21864e6641d0a9eefaca77a9ccf93f00bb7d50b26d8073866e53","ca0b43e2565d78809383e9a025b0638a5e65bcde4a2b68ff2c6fa5013642db46","1d0a0e5c6471d81467c3fecfa4db4e93ee87d364b776feb83b18d773ad9496d5","ef6eddcbf08e7ae71cd9ba8da47e9a3cfc7db36650af48f1b440a5ed50eeee7a","e14ee3cb4b764895f2ff2fed229df10b59df8a761c79d8e91d868793322b8896","7e36003872035a49bc3a5f21351c37d0e418f60d994ecc470a9463b33b4a7c12","b862345e219e6a4d829f7b7cf6d2d6e91e6fa00c29a7c6c86a3f68c77c25de39","2b88f02598c9de626b35fbe3ffb1ef33ad9fd175e36e06ba27dc79e444796f6c","b728dc56eb9b0d27b4044e076c155f3cd3a121a4a9939afe829cfc0d680d423b","324b7298f76ce938cd28d2698a0767ca3c740bc843fd9104e171be8eca839555","76aa33edb0042dd572d64e4bda231374390d250d29eeab7e7f27010e8f826006","03b6d387edf18a9ee8126e705edff759f65d9c602e11b649e13a5261fe6951a4",{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"11a9e4a50d84759e8353ed73da32a6462c7ca5c12a31a6cbd39414b456419a7f",{"version":"921e3b40f5efcb74707bc7e14b9b3c8ed2bf9f2ad1e1c7e2ec5fd4252b24223b","signature":"b302ad9fcd5894938a13ff57f54246e32dfe079b6205741a77cc83b657b483fd"},"d383fec7cf5d98b5f42c3b20303193adb63d57fb6b3047803e3c0ed2f93cb6da","25bb1235ddb57c1f90ae8a0775e88ec9a557f135fe3e1e8fbd97436021eec3cb","0cb506f83bac065b0519dda23e704376b9d36b523c7026dbf8c8593831a69596","57873da4a929b7f631ab0e3709c1f5e3e91f72d002e3b131e3488179e7165ca3","aaf730d205461e271486b1dc3e6a50ffdf345949c179869e18c778a47eb4ec53","9440121d485b9176ecbf7af75173798bb9669f5e913a0d85b348e7e59c677f04","6265be88c1e74be57e1db86f14e1924f69438acbb996885a10b90ee08b724d2d","fc02e85ead310c586baa21de2f19293a5a475e99e7bec85d36348fa4792175d9","a16dc585916a89ebbe1ea6e115d4ca85f331d5fb63d4f8f078e44bf8b5e0fd79","2cca080e27d9f7835f57cc364478f2bd44036172c22be9d0fa7dccb84d07b23b","7a75cc1aad1172a287800ce135e9ddd317a77197a95df064518d0ed358950737","781916917f8032ff7fe4330f09162c72cb14d838d88e17fe24b4f5e36d529077","11d8e627dd9dffc01b6c210b6e5f178232fe2fe8a49337242455fbc068267f4d","0eed71753fbc0d6f966f05e9edf9dae6d80540bc6b0443c792a2b2775488937c","14b103a16d584ac44b2aa911ed169f22bca55c944bd58789113fbde329c13ce1","a46e6b67ca3d97e673bd30c82093475429b4ef86aa8a7af039f2d7231e14a489","2b6fea7cf699493170b2b5d33c660231c55d2cdc323283b3f915fe2c5c3329bd","c3649d3c4bd72ddcbccd64bb13033d60dd228231536c5c7d2c88ab5fca0f16b7","60ce0c7fbde8d88b23f47af9e16c5eb8e18b1a4b28094898c7a2f4ba83817e2f","d0fd5b70c0878a32e45b9fce926577fbc302f1ac9154d417790b6fb77ecc421f","2e636dd8fcfb1b9817f0fcf6fec5619ca4cdc480cb0a958e16cd721e9cd40de7","4a0755150e118b65557a608c589060a367a540cda9edd615149c8c0018398b9c","6b00fd5ac469045246f2ea62a6c2e46c76609f99d5d3237069d9311135afc68a","26247a03890113609927c6f79bf66fda3745c9f898c5903a3399d8b341122090","61f9395be1c73587d5f965ef2779c3afc97a51391498a325948871f489eed8e0","33709773c8a3086ec6c4536d90eaed4419021caccecc352f1e63c7f9a90474fe","c6b57b1c400658bef1f18e0db9ddd8d8d0baaf8f6c3749b9be89345d3442ae05","435266748bcde290f2e7e696bc9bbf0759d47ac5d9d45b7cb10da0d6e2b23d48","3c035e96aa86a9ae278d0bef950ddcbd94e565c77e40d98ab55dd64e4b9a5fb8","6b18b2ecb7022d4061d1b8bf82798e1a72c6f170928a0be8c8478b3f0a5c77ae","d39ba459dff1d215966eabdcb92c1029821f9d6953cd9a55f8644803fa6f4a96","4d264e93c40c2467896ebdde6bd614a281c551206fec0bff382fdecf28a08cae","55f0d458b3e04a6ed2ccce4182fd728be3e8c1999e4ba3bce6e741138acd0d00","fea1f1d9e51bf0c842d5bda244f7949d5d47aac4c918936a091ba1b8e93b20b8","6d1c198b7d5950657eb9af8e73c9bd0c9a241f1512f74bd6ee16b7c459af288c",{"version":"42aec1dec720a91cfccea3846ae255a2cea0428560972ff205da2df3346c3f24","signature":"d52381f7a19364b5f2fe2869ae440f23830cf915daddd87dc7decd281ec5ef25"},{"version":"5989655309e3d9eeb58aeec50c469367c26f83a97964f006ed6fd84eeca37d9c","signature":"6589f58d176db29e897cd726963fbf7c38aa0715390ebb9aa91c7932f7c8330e"},{"version":"b5b7fb523891a2aaeb4d28180a4db94db8f2da749d1a4de6bce361c7fcaa240d","signature":"d4105c06f44995f906fbb5dd3ed8f754689c22b9aad99a94d14aeb88ad662dd0"},"792fcbcd71026f984566b5dcd0d73a1d5fdfcb6c8569ef8d84c7b1ff9d229fcc","0cfc689eed1fc4dd7fcd4ddbd80dfe8790cb0585e1249fc019019e19cd71e5a0","094ac2c069d9894b62edd1f2a9dc63e5351e8adb931648f27e47aa7c5d6e983c","ceb9b43165dbab7513e34f787d3f94ffe9f13e440b070417ea50c63eb2c68041","0b9d54448ef230d8cc7763ea0f9ac4fb077fba96391da3332baa882c838cc152","ed9e4c71174d78d20c41d057db0a32d8dc7a6979c04db7852c94967fcee55ec3","a3e06106ef76a6e015536f1ffbc595aa8a871ebf552a500cac1b558e48872ff6","5de6c9c98ef5f5f47005412a13f1ea24fc778e2239ccca69c772485d5ce396c2","822eb5622c3b940f8650c9179da6c426ae2cf309d846f623b0f2d094b228f03e","2a792f34f40e0b8e007a142825e8a486263f8853420572fa4dc6800f4f1eb781","afa2920fdcdfe1691a353ca6ca81b0cd2ca4539eae8cc7c0b9651b1abcdbc74b","1c067bb41f2c82b0ce255c8a4eaf4bafcbffe5d702ae52dec50eeaef930ad16e","dc05b7cfbd7166a76bb33c9a494752fc2876684100208694ee334e92d124ff13","f4cae09b720d87d4e359a6ae91511d231176636572642fd058c4f973478df5ef","492d09043bf7d0ffd0a77db8af9c0a6838affaf7306dbb00680716f1ff51184c","5d4c9d0014f2b221fe243627044e2c2290e33fb97befc0ad72ca2c07e9cf3bcc","bd63922a65e000d121bcd5c0ab479dd6b5c9c2f708bf192c256b58f1a3d8f664","2cab018bf28f0c70c1f7e423ccbe2bece766b0f823fc8be1ef2c6f68fa45932d","1989f78d7bb2f6247fb669aa280f2c3c6bfc97cc8be30a2ca9640f89b3f57a32","f669773f31bfa4e50c75daea1bad438206801e212e1374b5719137bc59c0ba9b","a4b778b3cbd76281a30cf622f5617e25c186f7f9684f2567a3a8f6be78b8c925",{"version":"4337b3d1670e9d1ee8adbf8c62ff178b37be3b35ae0a21d92ec743100354ac97","signature":"a6982d286062434f9336ed5702f2cdeea9321fafdfffe7dc439ff48b9439586b"},"5eb425ff207a91ef139e23ebfa8002a7ef569bded2749a39c79494eac229da6b","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","7e88d433f6eb15b0edb164a4ec1dc963a7b2e2f2f018768e47cb2633ea6de399",{"version":"7ae82e3b52cdd6933f0017f5e0ba8f2da7fa8df7d5287d51b290ed76b1d6bab1","signature":"02c237b57ae43718dfb2219e4221a3dc624be9b9bf6dfbe0f7e6052239bcde6d"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"ff82e9589fe896c71e97d148aeea20743d5c7f7d989b82e9ad1db71d333402ac",{"version":"17a89ca1c518b198c649c2be10d1f30918151f965b9380fd272eef126b82b066","signature":"7eba9b2a03018a752107e3a17c37bbc6011fb749c9e7b1203b5a541f637a1223"},{"version":"a3b3990eb76d0b51970d352770a3fd8e3576afbf51f1b39a0ee982633154b6d9","signature":"562f180232a15d9a16607b34e0df0005a736466f79f47df0a39aafab48f5facf"},{"version":"91eae654295550f639adb13c3749772bc6faa0d51035ab4bfb5a113032b8e543","signature":"789ecc5eea3606ea5d8646b14b14269a2cc15558c89b371aecc42ed8cba8035e"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"a6b74f096f8fe3da9bc070a04b8aefb22fb00a062e4de0ce9e7c9d6a3d423847",{"version":"0daca2a8aeca320a808295dea4511d96d7897867aa5ed5102c159f1ddb6b2346","signature":"ede3426aea05dddd4ae999664aaee0adad171fa0aeefa7199c3c38e5c8d9b47e"},{"version":"4f09b4f0c22ac86274342dc1ce4be6403bede7beaca5f4c50c120a823ce92fea","signature":"809181d2448bc63b4f87481f9e2ee209d0cfcbfaafd83a3a231ee0c55158f573"},"2b33cba77ae776e27801fa1eda2df73442345863db8e709125a5f9f30ed2096d",{"version":"b473bc52523efc8bb217488bc3b10ed34c951832c1fbeb11150ec2f08d706d8f","signature":"2bc824d6fb7f286d4acfea44fb5f5331bdb07eb38b73e70dfbb9f3f9c4c0477b"},"c01f0929ecb56b3c0971a727955e0ed83bf828744fb0f04917052ceaf576ca56",{"version":"17271ee5eada8a5036b280acc3c36ded0b6a487dcdbe3f775cfe9b2e7543186a","signature":"6f3c43324c241b6b1e29b9193784e835b76e3a12b38a77fe62ac9df662c7c06d"},{"version":"e2ddc31130f02b0488ab09d551a14c267f20183930d73eee2f0e6729e86588ce","signature":"07733fc9787712e7f3a2f9f7c8e6773036f8023de944b96e141971d6a7556344"},"1df722eed9b4cc011f26556f3574fe6aa5369a263ebd91f81424523277ad136a",{"version":"b4141d311e83f3af9320f8e307b3fb287b299d647e09a9b3262fbc7d34a95aa9","signature":"01e074392769bab3ea7ef965866c15fc9f74e123fea4e6ca0821701f53aa1665"},{"version":"2cddd2bbe3a08e65eb2216e6d39448e9b2fdc6d2983b412671b8faebc7f9d9a2","signature":"1bb1ee99c2c2fbe2012f522dbfac98ec7d316f977200c7b179deb665bf8b6f97"},"64deed797f3fc918d99f992e70c2815b7dee4d40774aa3331be9f2ab94ee408e","115d60d2b07ac7d513543b5e86e13bbf9a9524faf8bdf4985bd7a08815b46406","4a1545bdbccec0209a67da02f760fad629deedbe7d8ac9f55c93c82f95ff5449","7b52c21bd6397ca26df3b7863fa2d5014aa4bbf5621377769726bbd59956e6bc","8fb686bcb1593c907a4a6284625137308915871b7a3f672c6096769704fd6593","80283bd376b4d5b8970d1f0b8c549e3b9e24aa26d8f785bec3e29e22c525f1a4","6efd085323d69407ea14900a7afcb0876669a668c8e5c357782eb09d30f5e90a",{"version":"fa805a65de69ff27fa624ecd4fbe7837596daf445ca1d38e0b558287ce70b77d","signature":"e846678f5b81a7cc528b39182a724475a2a7221ca47e2603a864b4ffd216bc95"},{"version":"95911cd1442f1e9b836fb6a16b6a81aabbb3c6b178604b9ee7f3aeb73bc88eb2","signature":"b3a071cd1770061dc3ca72d67795f193795e7115faa400c041e51bc3afe831da"},"79501e0b0bad092052f42908a84bfa160bf7ca70ab703dc640ca726ff009eeef",{"version":"7f5f9b71b6407c095157c28f5331edb7689da2ae34d39b3d92cb2ee0fcc7cdc7","signature":"020abe8c521dcfaa819e58247ad2209de1aa823ae95bfdbb48a0a0f3e689bb22"},"e68ad0de94899b5e74e88a30299edfa9234582a8fe933a79fc68b66b9ff7f623","1515f45c7ac8876453f491c81b2899110c564714b595d87d2e270feaf5cd0171","8e1316e23a19ba001770976c029b910bd5ce755f8954b0afd5d3516932e68d7f","ddf843152599670242bb8d17acf9cdf716413326d5465a38c416a8534442e099","5bff2f68cc885cea49c6b0db0d4af5daea83520703b0fbd745c301267cd9f417","11cebccdb3bdf7cbb49c85dfd2251391bfcad51e164a10b4b3edba32e54baeca","dad09a8e5c6e7e9e82eeb47b69de3263f5f4bf60c5998a1f8fa4be5ba4124d31","9a06800a6d0a0e4add44687a793e059ca1e4162a490b68d27dcfabea14573205","1f276a748c534af1620acc29e2ce5028060d4323bbf1ed1f08a80977aff3abac","c627d39a45467ef12ce95d2bdbdf8cc89f6de1e9f112c32b7b3ee00f963e1c19","44732cf340786b9df93feae047ced84700ed8b7117bbbc9f0c22c0dd8f14b8c7","2bb640dfad345694432d89e0f0d5b8ce3a653a97e0acfc935503d234a8a9cc65","c5adbe37402e1a7ec838a9be8e64276b7e250c3e9f4aa0ec48ddaadc92bf0596","cf7edd726db5788180327b7729c882dcc68d4b4d290710d1e51c31c3cfe44054","31ba8333d2e02f398e80681621d7607a1a1e8be02b5ffddd4ae0383a840d364d","fd97d8bc27c67c6291ab8b31d3b2c1c1efee5344b714d559bc08ed2e0dafba8c","cea244f9d063ac1552796ab9aa0729feb3df72caac0c4161e54e3e4aba7cd787","51de0c244c81479b622382289a79dfaabd2e59568699e3c5cd39e3704d4c7f36","028ce62ae50640239934f3e8a6b908bdf752c98e2dfd45c9715ecc04e9624017","79bb921ab32518a8b33dedf9a32b44459c5fe6c73655aa5fee0f1a64b21c37a6","1cae7dbb4d8e6f79a176221e61a4b3c0da201bef3e4d4a946a2e314ba5d55f3e","ab647cbe5e37cd718c0dad137cd9a5309f6c93775fdb474bca89c4ec242d622f","379b17cdbb2592b58c22b2da981c74b0e685c558b8b84b8f0e9bbb2e4cd79bb6","be579bb21cc93a8e5e57223841b4f407e5ffbc24ad816810be8f32fc2d430b4b","ab0e2104da6c1842c26dd8d8cebceee3f730323d561bb2ae6a8acee5f9338a25","90d29f522af192add2a90cef15c1b7e3e3a4827df4b8628bd394da19dbcfc094",{"version":"bca9c018588750005093ac90d8a9e17b2df4800aa7778c9428edf726bf51f485","signature":"f7758a5daa42b70a13f6e7188287621b0ae2cb91f6417da37fc0840fbbde91b6"},{"version":"546120227761e5b7c658c8ec45268b047fdd774a37d3f2af46fa3c7ad4aad4b4","signature":"45ec752da3c5ae282184ba6aa5d828ce845953f5f8356917dd1fd32f7eb58d49"},{"version":"981e436a6825ba44084ae4fd76af10825884ab6709cd0da040e8aa4d4c519359","signature":"070cb0507bbaba6abaca450e865fa20255bbd6ec5dc4d748a9c5112346dd700b"},"df7e3f1646e8a98bde88aa3e137d094054bec69256479d9745c02e6fc1084836","a7d39371cabe952bc7ad53bacd2297506adddba10c7cbce6e554dfd20020c51d",{"version":"417d0d87aa75f084a78d1bb861f5e23afacd0d5f72228e3a72b5436006de0905","signature":"d7132a1de415d7f34de3fee0eef4a8a38af8c25978a4a91d3b993eb1e11fece3"},{"version":"11cdf775378adf8f32dee5d3db8c05521b4216ad728fac73f2341c64b66cfa7a","signature":"e3f69e11205a96769457c5055cfb51e729909a3cac1674fb07a9f87a75e2accc"},{"version":"5303a607bed2f1d58f158a29caeb11d5c6fa3a0c0052d1c219f11ff505a551f7","signature":"ed12cc19cfdc157d9823b30917e8ab40c2d3845feaae75dcb58db5abb6360b30"},{"version":"7eb1c154770627c946bbaf3e5bc3c7e78660b4ea6b272de31b205af8b3d0e286","signature":"f8eb1943c94b97fad14ace58c066852f1c568d75891c06e0cc160ccfd4310743"},{"version":"7c7516da4eca37b9035e99915655f6522b2d7bb55bd8f647fb99efc21933e9af","signature":"9154598755aa42e74cae7ea768dd647f125fe04fa7006fe27f52f8ea766cf25a"},{"version":"f1bfe59b41bcb38dcad14ec251f8e83e2f2e8acea249ed0f50cda27011ad3bf0","signature":"31cd6de98f9744eecf24fe3450ac5efd6abfbae3a4a4458229a3fee5ab4bfc99"},"4380c06c8d36e963c74636ccc3f5f18dca333f52224e8bd8d57175670b021211","f2e3e7319a2cca8c002ca131a213c0b69a3f776cb666fb44174baf60806e93c0","2013c436fe32c9ceb496b28cc05ffed6bc3ad9ad0467ee180f11af3236d069f2",{"version":"5ee3223c4cc4102a01b46137ea4ab334674dbf6e21cd1d0361a10f8ac96728f2","signature":"a02bd12ba92408900092c4791684170288d51fd6ce809e123be60e6f50768297"},{"version":"30333eff31732689fd60afd74298ffab0c2b6bb0331975993a43b1e102386511","signature":"21f96686f5bdf1bcfbf72c047285448548f24f165936e5a4e2baf000c42f7191"},"a43dbe2b477825edb425f74b9bda3e84467bc2ec9b9d8e67be7e3a528282d801",{"version":"95052d1812d457a9eb243316f3bbd038dcb09766e7db29c647b8c21f9ed91fe3","signature":"7fe90ee6ce17430ebbe5e29f3c0a295c5e6e4b07c75effa75b1a37c6781b8503"},{"version":"8fc7afb94ab8ece139f0aae4c744e57c97ae35341400a0436fad87dbc84bb158","signature":"7197d9ea3eca8f7998feb28eb31db6ecbb9c131113ca678ec2ab7d58a1aa41a1"},{"version":"289155ce1b831367a6cad10f8d6fdb467a1b762150a1950e698508255a4e41ce","signature":"89f050906a82d70192556edfca61b647e25ecf5ff4014974bd356fe97a71dc85"},{"version":"98eeda54dffb20e326cffd366b5113d95b5a9f1e569025b9bddfe69991cbe179","signature":"371c18ff8619adadfd5d51b4f8875c102fe16633f72b16ab4d6470fb3c469ce6"},{"version":"4ae67b09b85938447d5e9a031ae447f989c3ffc2645255cb72f4cfea24921376","signature":"4ccb94c6a625da7641978782cd6fa228b6685df4a6398e05f17c7c020a1ef969"},{"version":"51bf928ce6ac57522f646223d50b4a252e4ab7204da4a3b88218ab2ad9aded9c","signature":"bd016744ae6ca47c077f30661af368da319085c4537214fd1063c45c22b75d77"},"c58bbafb5a6a57a721652f911e722fdc0ffe85e82172cb78f7377e5a6885b2ae",{"version":"d4cf903881b26b35de1ff59c8066fc88a925dfb6bc8186a1000694717df3c63c","signature":"f80284421d8f20ef54f71eb946cc836f5fb7fe03c31bdfc53bbdedc886514784"},{"version":"3337e7ce77ad8a700dd924686e950115f985b561ddd799bab6f6e4b88b2c134d","signature":"ad46c0bbefc50c2bc4e637be25f9d0d832bc0c446fc526aeabdd7f316f4fb3a5"},{"version":"5ce6de8b3b5c316b70b9ee85043af57c1d5f8ec8955661547f25886a0804e09d","signature":"1aaf7884ca26988b1b76a00989e16b8ec931392e77305197cb6e8d7432ed364d"},{"version":"d95f8dca02ee8a217845fa964cdadb1e867e557bbbe57db4fbc442f5b8416dcd","signature":"9c7d67c5624dd4d44f1dc7121ab5c181dc92eafbbd771d3a227e970ec02eb6c7"},{"version":"1dafbeb4e661d6281e205f88eedc04450b8ddb8b88b3cf18cf876291ac73aff2","signature":"403af83b2e3bcb313a11dca8c5b8d1aee04c4aa2dffcc9e62cd3831c2fc93e1c"},{"version":"48b528c4d182966627187570ed85f7c298f5a9a253375ecfbac5d9af1922763f","signature":"4315fb61318eedde21710e434e0853414f1ef2f582cde493cd3d5c78049c0c97"},{"version":"bd0559dd463ce7497a0c8c7958165fd933ee3bbe5ce6401186718e94aa9d7b43","signature":"a75952dbf49f1c68f9f030a2cfbca9cce227af01749280f1fcba343f5224c351"},{"version":"35a1c65bcecfaeb8f9d2680b5f0506b26c3f73d5458f735b26170b6fa4bb2068","signature":"5ac048745c1a809127db976285843d623b90eeb5f45c6cc6929fabe119b0ea04"},{"version":"8b3d0e9c313a098b31b5a7f0e6d788719d874148f24b9755f579a555b747e858","signature":"fd5e0d28ead649e38c8bacd1ec851388847cf54ad37d9f36d81115a020591647"},{"version":"bec0a18e369db4e08e8121184c469a3ea9af051af923d2706c10c3244b2da69f","signature":"4569364ca501b366f5e2bd391f603c2d9e26b551452bdad1560c5a257b03ce18"},"3a61ac3a6089237bb566f2f70ab0dfbd5ec203a21e09de8382a717f5ba8ddabb",{"version":"c8831f11f1d30f3be83428b5373b1a71e53fd7414ef14a476e5b38fbed8a0752","signature":"bb9f357f778f67ad2d7988be76628deca1fce7581a057b599593912ed2a054cf"},"5ef81a02248813523201ee4ba5c711e72fb39e1c13d4122db86caa49928ceccd",{"version":"c88ae6bbf7e968b79fb61f9e93bac7e8fd5572d5adbaf70265fcad16bb18e81e","signature":"48140a1aef257f14fb5d802e9c047916f798215839f9aa38ec736a7147c84c81"},{"version":"8d674c553737eacf115bbcc59d4c3b0a8a36b8e6f2b97a3c7a9bc2946d09737f","signature":"62bc8f38c672cc245c03df820e5efb3d8fd1101bbd2522b929fb01e875fc3980"},{"version":"adce73e9d7f301b90eab1042ae94396d8bfff13583e362be5f47fbb25c23da74","signature":"f11a45368202ae00bf5adb4ab825e8cd81939d4eff8f61b66977745fee72f4ba"},{"version":"68cfc2c2a97463ca1db3db7866750b394748cb3fcb1fe444520ca6bfa2499935","signature":"5fd8010422dbf50a31c03a94964b9e2372a5840f722eee8c2bca9c5d02e831d7"},"098f8977e76712a3409ddd033faae089e8b95d083d8caf72493d23e2624b5fc2",{"version":"0cc58e70d7d4e6fafd8dc7cda1eb19829373bf75a9726b29502928b4749ae912","signature":"bb3b12aded5ce077e289e622cdd81b52131c0b426723e591222c962c2dfb0db2"},{"version":"883ae28ec16e215c919276bdc32cf8c4dec1808d10c98a5f7cbee38636702037","signature":"7b060084197328fe461a1ffebcb2c1bfa1fd4ba096fb34facfaffd4534c9c5c2"},{"version":"c470a163e48a455684ea6131d82186c5a744fae7158ff6779fbeda5993a46299","signature":"1bd40e847573c320e4c35dfb448d79068d3a1372207a0ef3838bbef7f016042e"},{"version":"8dc25d14f06405151c33a5515cfce45f711e5c61b29f4338444175ec86e47004","signature":"dbfde02c25be5df7647725402d7d0e6a6d46e68f35612878924a99bc9449191c"},{"version":"0ed2fdb0a450642fcbb8dd94196bd350793d5b90d391dbece286b646c73e6fee","signature":"b70a7f005802475bf13418d2de036b245c5f78a77fc0c060e921be38151c9549"},"6a3816094633a8e76b1f3d7d3834b6ed2dc9dd08c8e996a74c118284468c6e7b","b6111a0f4732899834438a678d2b6b553c81bc5a5049ae367a5175fde7cd4968",{"version":"97fc004a31c0a213de61c05b350f347e25efca1eabc8ba1eebdb2d9b85689dd1","signature":"5a49466668114ceca972d8d030478a0f37fdd04a55eb62db8c0b4655eba49484"},{"version":"8ce79132232bed71adbf60e1c16aabcb9a63153744eeefedf98b22898863d7fc","signature":"f1cf633241130ff468dcf6a7864577e7be8696b5b5e33083cc7507c03b6f6a19"},{"version":"f28384ee019f2116926f5740e92bd227443dc14d3da7daf89e0059ac5913866f","signature":"38ed86c8361af004a7b4a1bd5a2b3d237dcf5356b0b6425950f9c2b18d509d47"},"cc4d7e933dce2ad66baaf535e204405bb18404c7167e99b7ba9d584eb89e1565",{"version":"ab515d691ab8d0ef3d07f4f24b5058c0d244676a867e91d0cafdaed5a35d48f3","signature":"1e4b2cee1af0e665ee5a6f05528eae7b0ea72a120f10db43f5b4af09dd0d4a86"},"8a8bd8acb1a915a93db3be0b186fede51eaa2f2db40dac79a47313b4df55cddd",{"version":"b9a8f549ad99338a16b74b60ea58c9ed705980900b10dee916ecc730822af3ac","signature":"9914c79c33b663a7aea996703b671582274e86c2409b67753fb4040091bf70e6"},{"version":"f87e83dd7e60fe3e8686b3bd3aa5eb17d2415f01af8ba1b0edf422f805698d04","signature":"02d34933aef882ab1da4f55af5333826ed28a8e6abcd4182d81dc50e9173a14d"},{"version":"b1e5f6b6e236cd191974d878da9630dcc71edf1833f0eb62e0209b13b8ab2652","signature":"b36bf9277cc3b763b3bdf0f953efa7afe06ace18b1da9210806201ad7a6f6acc"},"b1a9839925ae9b488f587a8ec6f23e034b6ac4bed5da3da005f3414fa4a18cce",{"version":"43534ac51f6ed166a457b3247fe64c65c094f95fa7e748210f2255fb2fbaacab","signature":"0935c408dcfc90a8f9dc1d11d8270fc6cf80c8586d96860da12155da405ec9af"},{"version":"44f8b6f028241b18ff67fd37daa909ff481f38ba69739cb10b104c1c2852412c","signature":"08217183097d95ae53cd5f084594bb398d742a6244ccbd4934b99a8270974958"},{"version":"ed62d52b57a171101cac06d5ed32b8a55da2ed151a4f4d98da476610c34ed4f0","signature":"ee02d6673dd0fc003aec2d0a13c88bb053f1fa40e7a136b905ad546942f98d5b"},{"version":"5ead41e310e86e4959e71b330561e9690879beaa0ad6d14883c8e919c7d0a8f3","signature":"a5816719f0c3135d6af24e93e146084e1f4d18d2913ebb95a3ee944046d1d530"},{"version":"dacf59b95ad547fc4ec1ea4d524ed7ed22aaead71ddfa951177061171110b0c3","signature":"b9753f64aecf3de34d3e6d0d4c59ebecd6cea0838ab30fbafc968d2d139626b4"},{"version":"66aa8be674e9c3d5438976acf80cec8bdf0640e5ddd0a25f2af677027d777bfa","signature":"75b963bde9950ecbe782bef2ecd8f0b1aa8489f7093e76900dcba27de0042f90"},{"version":"2b28f1d26d2f88aad74fe5f2761b2a281181064cc5dc0219a8b0e6badfc8641d","signature":"2dbf1317374ba7cd5cd5b2443db7bb5caca817f38f0524886b108acb35415b37"},{"version":"5e390dba840055d1026484d576e1dd861dc8dbf84e58e76bd450c9f9f32a0386","signature":"f6f545bc47f233b38dd8a9add4ade169de5747493dd414f9e90119ceead61c3f"},"69b39591493ddec7c2ecf73eb53a0cda0c2c0aeb876700e0cfc82152e8f5f452",{"version":"2d4f7a548ab7a9cd9ae256b82ec991268c8967df1c7c2907d0276faf2e8f3340","signature":"7b851e6396a5dc0df2be119b4d1c053150cb39e1e93a45378242cc1ddceb27ca"},"267484504819c7c8d262deb5e6147fdd31d0c96525614e6db018637dc1e94c81",{"version":"e2fc71123d13b7e35a58741c9a0c6ce508e2f7ebd78674d8f9b8718fb1006db9","signature":"36c556a3c9eb165b9bc100cfa5fcd99e0544a264624563015ef6e88586b397ed"},{"version":"c8cb2807700da64268a4b96d519001c4e322026c5a55a4591dafbae9c98d5135","signature":"501a29a21faf61b3355e5cd70300b5a28b5b12de60f1caa05e56cb2d42607dff"},{"version":"2cda690d3958072de8ded71cd744352b064e7a4a44cb88b300eaa64125aa00db","signature":"6d4ebb64d5f29c6322d1da333bb31951b6851a760861635acba5b3c696656f57"},{"version":"dc5432827aeb5411ec11ac1f8b271d39bb1836b99e0421b19587ae2dc091486a","signature":"9d425b3e757d008df530d5b91d77232f6d37e513a31f9ab2f9ba71b3b27c2a37"},{"version":"d829c12ae4cd7023fa5c5e4ee784c35527f6519ea39cdf8c2af8d9a41ddcf1e9","signature":"d333469f1cde151f6f317b191e3fc0e2305c72a95dfb5527ab1d9ec53959b76d"},{"version":"32b6b48b99f21a07986a13a6fc5216fcdc8920663b27e03581f7b60ab36ffff7","signature":"770c2d42ac7f8e2941433ccb98c63e02eb6543cf3755942fed1ea3f7aea856e4"},{"version":"ee002dbe9b96904eef6bdc94cc405b57021528b4dcb4e2382421fbe83d7e2aa7","signature":"73ed373f7c01dc5ce2098eaa9b59030caccf23f15538ba5dc1e70b0c9f43f977"},{"version":"04606ad72a5599c9f9d7fba009c296d7a56b60fb7c627a05a95a2c9d47c39ead","signature":"96b65daf6681578aa161cd622806f16430dab19c5681c12db2690836b6e99163"},{"version":"afc520b2867cb2b57e9d7cf9dea5433064f444fde5d1a06ce9817b06eabffbc8","signature":"a562ae7b032f6b01526b5539666852b330c86e20918c57e426d7a95031ca7a30"},{"version":"69b5e2602c836bcd73f59b3529abc4931f1fa9cd1806f59e0bcb9903c8972dd1","signature":"0e07f96fade13c5f4f5f73423d0b0d36d2072570d8a33ea450006897d3671df2"},{"version":"b35e638b02dd107949595a6656e3f5c0b871edeb3d6f061332c610c602176105","signature":"736f562b178793c3aaf93cf534e989d14a548e0190060f4e12d86b8d0c4e0d4c"},"a70237156e4106580f7ade91e58fa4caf501ed69002861d8ad43898d48ad7d96","6b51a866d15c1e384f7dd519a7d28154e54db953027db71df7e9f4f98ea0a649","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73",{"version":"4564f780fd20582c57ae218a4cd017717181ab0e228639d905ef054288655b5e","affectsGlobalScope":true}],"options":{"declaration":true,"esModuleInterop":true,"inlineSourceMap":true,"module":99,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"noUncheckedIndexedAccess":true,"noUnusedLocals":true,"noUnusedParameters":true,"outDir":"./","strict":true,"target":5},"fileIdsList":[[109,139,140],[109,112],[112],[139,141,143],[109,112,139,140,141,142],[109,112,142,150,151,152],[109,112,142,153],[109],[190],[109,110],[110,111],[184,185,186,187],[109,112,144,151,153,156],[193,194,195,196],[156],[109,156,176],[109,142,156],[109,156,179,180,181],[109,142,156,177],[149],[150,152,154,158,159],[150,152,159],[82,112,142,150,151,153,154],[150,159],[150,153,155],[112,151,153],[150,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170],[150,157],[82,157],[109,142,150,151,152,153,155,156],[150,152,154,157],[150,155,157],[203,204],[199,200],[109,199],[145,146,147],[109,153,156,176,177,178,182],[174,175],[173],[174],[276],[45,82],[419,424],[125,127,128,129,130,131,132,133,134,135,136,137],[125,126,128,129,130,131,132,133,134,135,136,137],[126,127,128,129,130,131,132,133,134,135,136,137],[125,126,127,129,130,131,132,133,134,135,136,137],[125,126,127,128,130,131,132,133,134,135,136,137],[125,126,127,128,129,131,132,133,134,135,136,137],[125,126,127,128,129,130,132,133,134,135,136,137],[125,126,127,128,129,130,131,133,134,135,136,137],[125,126,127,128,129,130,131,132,134,135,136,137],[125,126,127,128,129,130,131,132,133,135,136,137],[125,126,127,128,129,130,131,132,133,134,136,137],[125,126,127,128,129,130,131,132,133,134,135,137],[125,126,127,128,129,130,131,132,133,134,135,136],[80],[79,80],[34,39],[45,46,53,62],[35,45,53],[71],[39,46,54],[62,67],[42,45,53],[43],[42],[45],[45,47,62,70],[45,46,62],[53,62,70],[45,46,48,53,62,67,70],[48,62,67,70],[81],[70],[42,45,62],[55],[33],[69],[60,71,74],[45,63],[62],[65],[39,53],[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],[53],[59],[72],[34,39,45,47,56,62,70,74],[112,156],[309,310,312,313],[112,171],[311],[106,144,249],[87],[106,249,264],[106,249,264,265],[106,249,264,265,266],[106,249,264,265,267],[253,254,255,256,265,266,267,268,269,270,271,272],[106,144],[87,106,144,249],[106,144,249,254,255,264,268,269],[106,265],[85],[89,92],[89,91],[89,91,92],[87,88,89,92,93],[87,88],[93,94,95,96],[88,93],[88,92,93,94],[89,91,92,97,98,99],[90],[90,92],[89],[85,86,88,100,105],[100],[101,102,103,104],[116],[115,116,117,118,119,120,121,122],[116,118],[307],[308,325,329],[211,307,308,316,317,318,319,320,321,322,323,324],[211,307,308,325],[144,211,307,308,325],[316,317,318,319,320,321,322,324,326,328],[144,211,307,308,315,325],[106,273,307,308,315],[211,307,308,315],[327,330,331],[106,144,211,249,273,308,325,326],[211],[307,314],[259,260,261],[106],[106,259],[106,259,260],[257,258,262,263],[106,262],[216,217,218,219,220,221,222],[87,106,215,216,217],[87,106,218],[106,218],[87,106],[106,216,217],[106,218,220],[215,223,241,242,243,244,245,246,247,248],[144],[106,144,219,223,224,243],[87,106,144],[106,144,223,241],[106,144,223,224],[106,144,221,224,243,245],[106,215],[106,220],[224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240],[87,215],[216],[109,112,151,156,171,172,173,176,183,188,208,209],[210],[109,142,144,148,151,152,173,177,178,182,183,189,191,192,197,198,201,202,205,206,207],[300,301],[299],[297,298],[417,420],[417,420,421,422],[419],[416,423],[344],[418],[337,369,414],[30,83],[30,106,108,113],[30,106,108,123,124,137,138,370],[30,106,137,369,370],[400,401],[106,273,337],[106,137,273,337,397],[397,398,399],[106,273,398,400],[108,112,113,137,171],[106,112,171,278,287,292,295,337,339,369,376],[108,112,113,124,277],[30,84,113,114,282,283,287,295,303,304,370,371,372,373,376,377,378,379,383,384,389,390,393,395,396,402,403,404,405,406,407,408,409,410,411,412,413],[113,171,369],[112,144,278],[106,108,112,137,171,251,282,380,381,382],[106,113,373,379],[106,108,112,137,171,249,251,252,273,277,278,282,333,368,369,380,383,386,388],[106,171,210,278,292,306,332,337,369,375],[113,211],[106,273,282,369,392],[106,124,171,188,210,278,287,292,295,306,332,337,339,369,375,376,377,394],[106,112,137,144,148,214,278,282,369],[30,106,137,278,281,282,369],[106,108,124,277,296,303,304],[30,106,108,137,264,278,287],[30,106,303],[106,108,112,137,264,277,278,282,286,368,369],[106,108,112,252,264,333,368],[106,108,137,250,264,303,370],[106,278,303,369],[106,108,137,277,278,296,302],[303,396],[30,106,108,137,249,278,295,369],[30,106,304],[106,112,171,282,289,291,369],[106,108,112,137,249,251,277,278,282,294,368],[87,106,108,137,249,250,252,278,295,304,370],[106,278,304,369],[106,137,277,278,296,302,303,369],[304,396],[83,87,106,108,112,113,123,137,138,171,249,250,252,273,275,277,278,283,287,292,295,304,306,333,338,339,340,341,342,343,348,350,351,352,353,354,365,369,370,371,414],[106,366],[343],[106,112,137,249,252,273,287,295,333,342,368],[87,106,108,112,137,138,252,273,343,345,346,349,366,368,369],[106,252],[106,108,249,264,333,368],[106,108,137,138,249,252,273,287,295,304,366,369,370,414],[106,112,249,252,278,287,292,343,370],[342,348],[87,106,112,137,249,252,264,273,339,342,343,347,353,369,415],[106,112,137,252,264,287,342,343,369],[106,112,333,414],[106,108,112,137,249,252,292,338,339,342,343,347,415],[349,356,365,366],[106,112,137,249,264,333,343,349,352,358,366,369,414],[359,360,362,363,364],[106,137,333,349,352,356,359,360,361,366,369,414],[358],[352,356],[333,352],[355,357],[106,112,137,333,349,352,355,356,357,360,361,366,369,414],[106,137,333,349,352,355,356,357,360,361,366,369,414],[138,333,336,367],[106,250,370],[335],[106,108,112,137,173,249,252,273,282,295,333,334,367,368,369,370,414],[106,112,249,252,264,273,332,367,414],[144,211],[109,144,171,211,279],[171,211,305],[171,211,288],[171,211,290],[171,211,385],[171,211,280],[171,211,374],[171,211,391],[171,211,285],[109,144,171,211,284],[171,211,213],[171,211,387],[171,211,293],[171,211,381],[109,144,171,211,212],[106,249,250],[87,106,207,249],[106,112,137,249,262,273,278,292,295,337,338,369,414],[108,138,250,251,252,274,368],[107],[106,137,249,264,273,332,415],[107,108],[273],[106,137,249,251,264,273,333,367,369],[30,106,113],[30,106,123,370],[30,106,370],[106,273,337,397],[112,113,171],[106,171,278,287,292,295,337,376],[113],[113,171],[106,112,171,282],[106,112,171,252,277,278,282,333,383],[106,171,278,292,337,369],[106,273,282],[106,171,278,287,292,295,337,376,377],[106,278,282],[30,106,278,282],[106,303,304],[30,106,264,278,287],[106,264,277,278,282],[112,252,333],[106,303],[106,278,303],[106,278],[30,106,249,278,295],[106,249,277,278,282],[106,278,295,304],[106,278,304],[106,113,171,249,252,273,283,287,292,295,304,333,342,365,370,371,414],[106,112,252,273,287,295,333,342],[106,112,252,343,349,366],[106,249,264,333],[106,273,287,295,304,366,370,414],[106,112,249,252,278,287,292,343],[342,343],[112,342,343],[106,112,333],[106,112,249,264,333,343,349,352,358,366,369,414],[106,333,349,352,356,359,360,366,369,414],[106,112,333,349,352,355,356,357,360,366,369,414],[106,333,349,352,355,356,357,360,366,369,414],[106,370],[106,252,282,295,333,370,414],[106,249],[106,112,249,262,278,292,295,337,414],[106,273,415],[249,264,333,367]],"referencedMap":[[141,1],[140,2],[139,3],[144,4],[143,5],[153,6],[156,7],[189,2],[190,8],[191,9],[192,8],[110,8],[111,10],[112,11],[185,3],[188,12],[172,13],[197,14],[195,8],[196,15],[177,16],[179,17],[182,18],[181,19],[198,8],[150,20],[160,21],[161,22],[155,23],[162,24],[163,25],[164,25],[154,26],[171,27],[166,21],[165,28],[167,29],[157,30],[168,24],[169,22],[159,31],[170,28],[158,32],[205,33],[206,8],[201,34],[200,35],[178,8],[145,8],[148,36],[147,8],[151,2],[207,3],[183,37],[176,38],[174,39],[175,40],[277,41],[107,42],[425,43],[126,44],[127,45],[125,46],[128,47],[129,48],[130,49],[131,50],[132,51],[133,52],[134,53],[135,54],[136,55],[137,56],[31,57],[81,58],[34,59],[35,60],[36,61],[37,62],[38,63],[39,64],[40,65],[42,66],[43,67],[44,68],[45,68],[46,69],[47,70],[48,71],[49,72],[50,73],[82,74],[51,68],[52,75],[53,76],[55,77],[56,78],[57,79],[60,68],[61,80],[62,81],[63,82],[65,68],[66,83],[67,84],[79,85],[69,86],[70,87],[71,88],[73,82],[75,89],[76,82],[309,90],[313,3],[314,91],[311,92],[312,93],[310,90],[254,94],[253,95],[265,96],[269,97],[267,98],[268,99],[273,100],[255,101],[256,102],[270,103],[271,104],[272,97],[86,105],[88,95],[90,106],[92,107],[98,108],[94,109],[93,110],[97,111],[95,112],[96,113],[100,114],[91,115],[89,116],[99,117],[106,118],[101,119],[105,120],[103,95],[119,121],[118,121],[123,122],[117,121],[120,123],[121,123],[122,121],[308,124],[330,125],[325,126],[321,127],[323,128],[317,128],[329,129],[324,128],[319,128],[318,128],[316,130],[320,128],[326,131],[328,132],[322,128],[332,133],[327,134],[331,135],[315,136],[257,95],[262,137],[259,138],[260,139],[261,140],[264,141],[263,142],[223,143],[218,144],[219,145],[220,146],[216,147],[217,138],[222,148],[221,149],[249,150],[242,151],[244,152],[245,153],[246,154],[243,101],[247,155],[248,156],[224,138],[225,157],[226,158],[227,147],[228,95],[241,159],[230,95],[231,147],[232,95],[234,95],[235,138],[236,95],[237,160],[238,95],[239,161],[240,95],[210,162],[211,163],[208,164],[302,165],[300,166],[299,167],[421,168],[423,169],[422,168],[420,170],[424,171],[345,172],[83,42],[419,173],[415,174],[84,175],[114,176],[371,177],[372,178],[402,179],[397,180],[398,181],[400,182],[401,183],[373,184],[377,185],[378,186],[113,3],[414,187],[379,188],[282,189],[383,190],[384,191],[389,192],[376,193],[390,194],[393,195],[395,196],[370,197],[283,198],[396,199],[403,200],[404,201],[287,202],[405,203],[406,204],[407,205],[303,206],[408,207],[409,208],[410,209],[292,210],[295,211],[411,212],[412,213],[304,214],[413,215],[366,216],[341,217],[356,218],[343,219],[350,220],[351,221],[361,222],[352,223],[342,224],[349,225],[354,226],[353,227],[347,228],[348,229],[367,230],[360,231],[365,232],[364,233],[359,234],[357,235],[355,236],[358,237],[362,238],[363,239],[337,240],[334,241],[336,242],[335,243],[333,244],[279,245],[305,246],[306,247],[289,248],[291,249],[386,250],[281,251],[375,252],[392,253],[288,246],[290,246],[385,246],[280,246],[374,246],[391,246],[284,245],[286,254],[285,255],[212,245],[214,256],[388,257],[294,258],[382,259],[213,260],[387,260],[293,260],[381,260],[251,261],[252,262],[250,138],[339,263],[369,264],[108,265],[338,266],[138,267],[274,268],[368,269]],"exportedModulesMap":[[141,1],[140,2],[139,3],[144,4],[143,5],[153,6],[156,7],[189,2],[190,8],[191,9],[192,8],[110,8],[111,10],[112,11],[185,3],[188,12],[172,13],[197,14],[195,8],[196,15],[177,16],[179,17],[182,18],[181,19],[198,8],[150,20],[160,21],[161,22],[155,23],[162,24],[163,25],[164,25],[154,26],[171,27],[166,21],[165,28],[167,29],[157,30],[168,24],[169,22],[159,31],[170,28],[158,32],[205,33],[206,8],[201,34],[200,35],[178,8],[145,8],[148,36],[147,8],[151,2],[207,3],[183,37],[176,38],[174,39],[175,40],[277,41],[107,42],[425,43],[126,44],[127,45],[125,46],[128,47],[129,48],[130,49],[131,50],[132,51],[133,52],[134,53],[135,54],[136,55],[137,56],[31,57],[81,58],[34,59],[35,60],[36,61],[37,62],[38,63],[39,64],[40,65],[42,66],[43,67],[44,68],[45,68],[46,69],[47,70],[48,71],[49,72],[50,73],[82,74],[51,68],[52,75],[53,76],[55,77],[56,78],[57,79],[60,68],[61,80],[62,81],[63,82],[65,68],[66,83],[67,84],[79,85],[69,86],[70,87],[71,88],[73,82],[75,89],[76,82],[309,90],[313,3],[314,91],[311,92],[312,93],[310,90],[254,94],[253,95],[265,96],[269,97],[267,98],[268,99],[273,100],[255,101],[256,102],[270,103],[271,104],[272,97],[86,105],[88,95],[90,106],[92,107],[98,108],[94,109],[93,110],[97,111],[95,112],[96,113],[100,114],[91,115],[89,116],[99,117],[106,118],[101,119],[105,120],[103,95],[119,121],[118,121],[123,122],[117,121],[120,123],[121,123],[122,121],[308,124],[330,125],[325,126],[321,127],[323,128],[317,128],[329,129],[324,128],[319,128],[318,128],[316,130],[320,128],[326,131],[328,132],[322,128],[332,133],[327,134],[331,135],[315,136],[257,95],[262,137],[259,138],[260,139],[261,140],[264,141],[263,142],[223,143],[218,144],[219,145],[220,146],[216,147],[217,138],[222,148],[221,149],[249,150],[242,151],[244,152],[245,153],[246,154],[243,101],[247,155],[248,156],[224,138],[225,157],[226,158],[227,147],[228,95],[241,159],[230,95],[231,147],[232,95],[234,95],[235,138],[236,95],[237,160],[238,95],[239,161],[240,95],[210,162],[211,163],[208,164],[302,165],[300,166],[299,167],[421,168],[423,169],[422,168],[420,170],[424,171],[345,172],[83,42],[419,173],[415,174],[84,175],[114,270],[371,271],[372,272],[402,179],[397,180],[398,273],[400,182],[401,183],[373,274],[377,275],[378,276],[113,3],[414,187],[379,277],[282,189],[383,278],[384,191],[389,279],[376,280],[390,194],[393,281],[395,282],[370,283],[283,284],[396,285],[403,286],[404,201],[287,287],[405,288],[406,289],[407,290],[303,291],[408,207],[409,292],[410,209],[292,278],[295,293],[411,294],[412,295],[304,290],[413,215],[366,296],[341,217],[356,218],[343,297],[350,298],[351,221],[361,299],[352,300],[342,301],[349,225],[354,302],[353,303],[347,304],[348,302],[367,230],[360,305],[365,232],[364,306],[359,234],[357,235],[355,236],[358,237],[362,307],[363,308],[337,240],[334,309],[336,242],[335,310],[333,244],[279,245],[305,246],[306,247],[289,248],[291,249],[386,250],[281,251],[375,252],[392,253],[288,246],[290,246],[385,246],[280,246],[374,246],[391,246],[284,245],[286,254],[285,255],[212,245],[214,256],[388,257],[294,258],[382,259],[213,260],[387,260],[293,260],[381,260],[251,138],[252,311],[250,138],[339,312],[369,264],[108,265],[338,313],[274,268],[368,314]],"semanticDiagnosticsPerFile":[141,140,139,144,143,153,156,189,190,191,192,110,111,112,109,184,185,186,188,187,172,193,197,195,194,196,177,179,182,180,181,198,173,150,149,142,160,161,155,162,163,164,154,171,166,165,167,157,168,169,159,170,158,205,203,204,206,201,200,199,178,202,145,146,148,147,151,207,183,152,176,174,175,277,296,107,425,126,127,125,128,129,130,131,132,133,134,135,136,137,80,31,33,81,34,35,36,37,38,39,40,41,42,43,44,45,46,47,32,77,48,49,50,82,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,79,69,70,71,72,73,74,78,75,76,276,380,275,309,313,314,311,312,310,254,253,265,269,266,267,268,273,255,256,270,271,272,86,85,88,90,92,98,94,93,97,95,96,100,91,89,99,106,101,105,102,103,104,119,118,123,117,120,121,115,116,122,308,330,325,321,323,317,329,324,319,318,316,320,326,328,322,332,327,331,315,307,257,262,259,260,261,258,264,263,215,223,218,219,220,216,217,222,221,249,242,244,245,246,243,247,248,224,225,226,227,228,241,229,230,231,232,233,234,235,236,237,238,239,240,124,416,209,210,211,208,302,300,301,299,297,298,417,421,423,422,420,424,87,345,346,344,83,419,418,6,8,7,2,9,10,11,12,13,14,15,16,3,4,20,17,18,19,21,22,23,5,24,25,26,27,28,1,29,415,84,30,114,371,372,402,399,397,398,400,401,373,377,378,113,414,379,282,383,384,389,278,376,390,393,395,370,283,396,403,404,287,405,406,407,303,408,409,410,292,295,411,412,304,413,366,341,356,343,350,351,361,352,342,349,354,353,347,348,367,360,365,364,359,357,355,358,362,363,337,334,336,335,333,279,305,306,289,291,386,281,375,392,288,290,385,280,374,391,284,286,285,212,214,388,294,382,213,387,293,381,251,252,394,250,339,369,108,338,138,274,368,340]},"version":"4.7.2"}
\ No newline at end of file
+{"program":{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../src/providers/cache.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostic_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/util/types.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/globals.global.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/ts3.6/base.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/base.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/node-cache/index.d.ts","../../src/providers/cache-node.ts","../../node_modules/@uniswap/sdk-core/dist/chains.d.ts","../../node_modules/@uniswap/sdk-core/dist/addresses.d.ts","../../node_modules/jsbi/jsbi.d.ts","../../node_modules/@uniswap/sdk-core/dist/constants.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/token.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/baseCurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/nativeCurrency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/currency.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/fraction.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/currencyAmount.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/percent.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/price.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/fractions/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/ether.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/weth9.d.ts","../../node_modules/@uniswap/sdk-core/dist/entities/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/computePriceImpact.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sortedInsert.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/sqrt.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/validateAndParseAddress.d.ts","../../node_modules/@uniswap/sdk-core/dist/utils/index.d.ts","../../node_modules/@uniswap/sdk-core/dist/index.d.ts","../../node_modules/@types/bunyan/index.d.ts","../../src/util/log.ts","../../node_modules/@ethersproject/bytes/lib/index.d.ts","../../node_modules/@ethersproject/bignumber/lib/bignumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/fixednumber.d.ts","../../node_modules/@ethersproject/bignumber/lib/index.d.ts","../../src/providers/gas-price-provider.ts","../../src/providers/caching-gas-provider.ts","../../node_modules/@uniswap/token-lists/dist/tokenlist.schema.json","../../node_modules/@uniswap/token-lists/dist/types.d.ts","../../node_modules/@uniswap/token-lists/dist/isVersionUpdate.d.ts","../../node_modules/@uniswap/token-lists/dist/getVersionUpgrade.d.ts","../../node_modules/@uniswap/token-lists/dist/diffTokenLists.d.ts","../../node_modules/@uniswap/token-lists/dist/minVersionBump.d.ts","../../node_modules/@uniswap/token-lists/dist/nextVersion.d.ts","../../node_modules/@uniswap/token-lists/dist/versionComparator.d.ts","../../node_modules/@uniswap/token-lists/dist/index.d.ts","../../node_modules/axios/index.d.ts","../../src/util/metric.ts","../../node_modules/@ethersproject/abi/lib/fragments.d.ts","../../node_modules/@ethersproject/abi/lib/coders/abstract-coder.d.ts","../../node_modules/@ethersproject/abi/lib/abi-coder.d.ts","../../node_modules/@ethersproject/properties/lib/index.d.ts","../../node_modules/@ethersproject/abi/lib/interface.d.ts","../../node_modules/@ethersproject/abi/lib/index.d.ts","../../node_modules/@ethersproject/strings/lib/bytes32.d.ts","../../node_modules/@ethersproject/strings/lib/idna.d.ts","../../node_modules/@ethersproject/strings/lib/utf8.d.ts","../../node_modules/@ethersproject/strings/lib/index.d.ts","../../node_modules/@types/lodash/common/common.d.ts","../../node_modules/@types/lodash/common/array.d.ts","../../node_modules/@types/lodash/common/collection.d.ts","../../node_modules/@types/lodash/common/date.d.ts","../../node_modules/@types/lodash/common/function.d.ts","../../node_modules/@types/lodash/common/lang.d.ts","../../node_modules/@types/lodash/common/math.d.ts","../../node_modules/@types/lodash/common/number.d.ts","../../node_modules/@types/lodash/common/object.d.ts","../../node_modules/@types/lodash/common/seq.d.ts","../../node_modules/@types/lodash/common/string.d.ts","../../node_modules/@types/lodash/common/util.d.ts","../../node_modules/@types/lodash/index.d.ts","../../node_modules/@ethersproject/networks/lib/types.d.ts","../../node_modules/@ethersproject/networks/lib/index.d.ts","../../node_modules/@ethersproject/transactions/lib/index.d.ts","../../node_modules/@ethersproject/web/lib/index.d.ts","../../node_modules/@ethersproject/abstract-provider/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/formatter.d.ts","../../node_modules/@ethersproject/providers/lib/base-provider.d.ts","../../node_modules/@ethersproject/abstract-signer/lib/index.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/websocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/url-json-rpc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/alchemy-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ankr-provider.d.ts","../../node_modules/@ethersproject/providers/lib/cloudflare-provider.d.ts","../../node_modules/@ethersproject/providers/lib/etherscan-provider.d.ts","../../node_modules/@ethersproject/providers/lib/fallback-provider.d.ts","../../node_modules/@ethersproject/providers/lib/ipc-provider.d.ts","../../node_modules/@ethersproject/providers/lib/infura-provider.d.ts","../../node_modules/@ethersproject/providers/lib/json-rpc-batch-provider.d.ts","../../node_modules/@ethersproject/providers/lib/nodesmith-provider.d.ts","../../node_modules/@ethersproject/providers/lib/pocket-provider.d.ts","../../node_modules/@ethersproject/providers/lib/web3-provider.d.ts","../../node_modules/@ethersproject/providers/lib/index.d.ts","../../node_modules/@ethersproject/contracts/lib/index.d.ts","../../node_modules/@ethersproject/logger/lib/index.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlist.d.ts","../../node_modules/@ethersproject/wordlists/lib/wordlists.d.ts","../../node_modules/@ethersproject/wordlists/lib/index.d.ts","../../node_modules/@ethersproject/hdnode/lib/index.d.ts","../../node_modules/@ethersproject/signing-key/lib/index.d.ts","../../node_modules/@ethersproject/json-wallets/lib/crowdsale.d.ts","../../node_modules/@ethersproject/json-wallets/lib/inspect.d.ts","../../node_modules/@ethersproject/json-wallets/lib/keystore.d.ts","../../node_modules/@ethersproject/json-wallets/lib/index.d.ts","../../node_modules/@ethersproject/wallet/lib/index.d.ts","../../node_modules/@ethersproject/constants/lib/addresses.d.ts","../../node_modules/@ethersproject/constants/lib/bignumbers.d.ts","../../node_modules/@ethersproject/constants/lib/hashes.d.ts","../../node_modules/@ethersproject/constants/lib/strings.d.ts","../../node_modules/@ethersproject/constants/lib/index.d.ts","../../node_modules/@ethersproject/address/lib/index.d.ts","../../node_modules/@ethersproject/base64/lib/base64.d.ts","../../node_modules/@ethersproject/base64/lib/index.d.ts","../../node_modules/@ethersproject/basex/lib/index.d.ts","../../node_modules/@ethersproject/hash/lib/id.d.ts","../../node_modules/@ethersproject/hash/lib/namehash.d.ts","../../node_modules/@ethersproject/hash/lib/message.d.ts","../../node_modules/@ethersproject/hash/lib/typed-data.d.ts","../../node_modules/@ethersproject/hash/lib/index.d.ts","../../node_modules/@ethersproject/keccak256/lib/index.d.ts","../../node_modules/@ethersproject/sha2/lib/types.d.ts","../../node_modules/@ethersproject/sha2/lib/sha2.d.ts","../../node_modules/@ethersproject/sha2/lib/index.d.ts","../../node_modules/@ethersproject/solidity/lib/index.d.ts","../../node_modules/@ethersproject/random/lib/random.d.ts","../../node_modules/@ethersproject/random/lib/shuffle.d.ts","../../node_modules/@ethersproject/random/lib/index.d.ts","../../node_modules/@ethersproject/rlp/lib/index.d.ts","../../node_modules/@ethersproject/units/lib/index.d.ts","../../node_modules/ethers/lib/utils.d.ts","../../node_modules/ethers/lib/_version.d.ts","../../node_modules/ethers/lib/ethers.d.ts","../../node_modules/ethers/lib/index.d.ts","../../src/types/v3/commons.ts","../../src/types/v3/IERC20Metadata.d.ts","../../src/types/v3/factories/IERC20Metadata__factory.ts","../../node_modules/@uniswap/v3-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tickDataProvider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/pool.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/tickListDataProvider.d.ts","../../node_modules/@uniswap/v3-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/calldata.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/computePoolAddress.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encodeRouteToPath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/encodeSqrtRatioX96.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/fullMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/isSorted.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/liquidityMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/maxLiquidityForAmounts.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/mostSignificantBit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/nearestUsableTick.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/position.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/priceTickConversions.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/sqrtPriceMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/swapMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickLibrary.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickList.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/tickMath.d.ts","../../node_modules/@uniswap/v3-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/v3-sdk/dist/multicall.d.ts","../../node_modules/@uniswap/v3-sdk/dist/selfPermit.d.ts","../../node_modules/@uniswap/v3-sdk/dist/nonfungiblePositionManager.d.ts","../../node_modules/@uniswap/v3-sdk/dist/payments.d.ts","../../node_modules/@uniswap/v3-sdk/dist/quoter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/staker.d.ts","../../node_modules/@uniswap/v3-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/v3-sdk/dist/index.d.ts","../../src/util/chains.ts","../../src/util/addresses.ts","../../src/util/amounts.ts","../../node_modules/@uniswap/router-sdk/dist/constants.d.ts","../../node_modules/@uniswap/router-sdk/dist/approveAndCall.d.ts","../../node_modules/@uniswap/router-sdk/dist/multicallExtended.d.ts","../../node_modules/@uniswap/router-sdk/dist/paymentsExtended.d.ts","../../node_modules/@uniswap/v2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/v2-sdk/dist/errors.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/pair.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/v2-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/v2-sdk/dist/router.d.ts","../../node_modules/@uniswap/v2-sdk/dist/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedRoute/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/protocol.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/route.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/entities/mixedRoute/trade.d.ts","../../node_modules/@uniswap/router-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/encodeMixedRouteToPath.d.ts","../../node_modules/@uniswap/router-sdk/dist/utils/index.d.ts","../../node_modules/@uniswap/router-sdk/dist/index.d.ts","../../src/util/protocols.ts","../../node_modules/@uniswap/default-token-list/build/uniswap-default.tokenlist.json","../../node_modules/@types/retry/index.d.ts","../../node_modules/@types/async-retry/index.d.ts","../../src/providers/provider.ts","../../src/types/other/commons.ts","../../src/types/other/TokenFeeDetector.d.ts","../../src/types/other/factories/TokenFeeDetector__factory.ts","../../src/providers/token-fee-fetcher.ts","../../src/types/other/ITokenValidator.d.ts","../../src/types/other/factories/ITokenValidator__factory.ts","../../src/providers/multicall-provider.ts","../../src/providers/token-validator-provider.ts","../../src/types/v2/commons.ts","../../src/types/v2/IUniswapV2Pair.d.ts","../../src/types/v2/factories/IUniswapV2Pair__factory.ts","../../src/providers/v2/pool-provider.ts","../../src/types/other/GasDataArbitrum.d.ts","../../src/types/other/factories/GasDataArbitrum__factory.ts","../../src/types/other/GasPriceOracle.d.ts","../../src/types/other/factories/GasPriceOracle__factory.ts","../../src/providers/v3/gas-data-provider.ts","../../src/types/v3/IUniswapV3PoolState.d.ts","../../src/types/v3/factories/IUniswapV3PoolState__factory.ts","../../src/providers/v3/pool-provider.ts","../../node_modules/@types/await-timeout/index.d.ts","../../node_modules/graphql/language/source.d.ts","../../node_modules/graphql/language/tokenKind.d.ts","../../node_modules/graphql/language/ast.d.ts","../../node_modules/graphql-request/dist/types.d.ts","../../node_modules/graphql-request/dist/types.dom.d.ts","../../node_modules/graphql-request/dist/index.d.ts","../../src/providers/v2/subgraph-provider.ts","../../src/providers/v3/subgraph-provider.ts","../../src/types/other/Erc20.d.ts","../../src/types/other/factories/Erc20__factory.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/routerCommands.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/Command.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/allowanceTransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/signatureTransfer.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/AllowanceProvider.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/providers/index.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/constants.d.ts","../../node_modules/@uniswap/permit2-sdk/dist/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/inputTokens.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/seaport.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/foundation.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nftx.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/nft20.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/sudoswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/cryptopunk.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/x2y2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/element-market.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/looksRareV2.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/NFTTrade.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/uniswap.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/swapRouter.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/unwrapWETH.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/protocols/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/entities/index.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/utils/constants.d.ts","../../node_modules/@uniswap/universal-router-sdk/dist/index.d.ts","../../src/routers/router.ts","../../src/routers/legacy-router/bases.ts","../../src/routers/legacy-router/legacy-router.ts","../../src/routers/legacy-router/index.ts","../../src/routers/index.ts","../../src/util/methodParameters.ts","../../src/util/gas-factory-helpers.ts","../../src/util/unsupported-tokens.ts","../../src/routers/alpha-router/config.ts","../../src/routers/alpha-router/gas-models/gas-model.ts","../../src/routers/alpha-router/entities/route-with-valid-quote.ts","../../node_modules/mnemonist/utils/types.d.ts","../../node_modules/mnemonist/fixed-reverse-heap.d.ts","../../node_modules/mnemonist/queue.d.ts","../../src/routers/alpha-router/gas-models/v3/gas-costs.ts","../../src/routers/alpha-router/gas-models/v3/v3-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/index.ts","../../src/routers/alpha-router/functions/best-swap-route.ts","../../src/routers/alpha-router/functions/calculate-ratio-amount-in.ts","../../src/routers/alpha-router/functions/get-candidate-pools.ts","../../src/routers/alpha-router/gas-models/v2/v2-heuristic-gas-model.ts","../../src/routers/alpha-router/gas-models/mixedRoute/mixed-route-heuristic-gas-model.ts","../../src/routers/alpha-router/quoters/model/results/get-routes-result.ts","../../src/routers/alpha-router/entities/index.ts","../../src/routers/alpha-router/quoters/model/results/get-quotes-result.ts","../../src/routers/alpha-router/quoters/model/results/index.ts","../../src/routers/alpha-router/quoters/model/index.ts","../../src/routers/alpha-router/quoters/base-quoter.ts","../../src/routers/alpha-router/functions/compute-all-routes.ts","../../src/routers/alpha-router/quoters/v2-quoter.ts","../../src/routers/alpha-router/quoters/v3-quoter.ts","../../src/routers/alpha-router/quoters/mixed-quoter.ts","../../src/routers/alpha-router/quoters/index.ts","../../src/routers/alpha-router/alpha-router.ts","../../src/routers/alpha-router/index.ts","../../src/util/routes.ts","../../src/util/index.ts","../../src/providers/token-provider.ts","../../src/providers/caching-token-list-provider.ts","../../src/providers/caching-token-provider.ts","../../src/providers/caching/route/model/cached-route.ts","../../src/providers/caching/route/model/cached-routes.ts","../../src/providers/caching/route/model/cache-mode.ts","../../src/providers/caching/route/model/index.ts","../../src/providers/caching/route/route-caching-provider.ts","../../src/providers/caching/route/index.ts","../../src/providers/eip-1559-gas-price-provider.ts","../../src/types/other/Permit2.d.ts","../../src/types/other/factories/Permit2__factory.ts","../../src/providers/simulation-provider.ts","../../src/providers/eth-estimate-gas-provider.ts","../../src/providers/eth-gas-station-info-gas-price-provider.ts","../../src/providers/legacy-gas-price-provider.ts","../../node_modules/@types/stats-lite/index.d.ts","../../src/types/v3/UniswapInterfaceMulticall.d.ts","../../src/types/v3/factories/UniswapInterfaceMulticall__factory.ts","../../src/providers/multicall-uniswap-provider.ts","../../src/providers/on-chain-gas-price-provider.ts","../../src/types/other/IMixedRouteQuoterV1.d.ts","../../src/types/other/factories/IMixedRouteQuoterV1__factory.ts","../../src/types/v3/IQuoterV2.d.ts","../../src/types/v3/factories/IQuoterV2__factory.ts","../../src/providers/on-chain-quote-provider.ts","../../src/providers/static-gas-price-provider.ts","../../src/types/other/SwapRouter02.d.ts","../../src/types/other/factories/SwapRouter02__factory.ts","../../src/providers/swap-router-provider.ts","../../src/util/callData.ts","../../src/providers/tenderly-simulation-provider.ts","../../src/providers/token-properties-provider.ts","../../src/providers/uri-subgraph-provider.ts","../../src/providers/v2/caching-pool-provider.ts","../../src/providers/v2/caching-subgraph-provider.ts","../../src/providers/v2/quote-provider.ts","../../src/providers/v2/static-subgraph-provider.ts","../../src/providers/v2/subgraph-provider-with-fallback.ts","../../src/providers/v2/uri-subgraph-provider.ts","../../src/providers/v3/caching-pool-provider.ts","../../src/providers/v3/caching-subgraph-provider.ts","../../src/providers/v3/static-subgraph-provider.ts","../../src/providers/v3/subgraph-provider-with-fallback.ts","../../src/providers/v3/uri-subgraph-provider.ts","../../src/providers/index.ts","../../src/index.ts","../../node_modules/chalk/index.d.ts","../../node_modules/jest-diff/build/cleanupSemantic.d.ts","../../node_modules/pretty-format/build/types.d.ts","../../node_modules/pretty-format/build/index.d.ts","../../node_modules/jest-diff/build/types.d.ts","../../node_modules/jest-diff/build/diffLines.d.ts","../../node_modules/jest-diff/build/printDiffs.d.ts","../../node_modules/jest-diff/build/index.d.ts","../../node_modules/jest-matcher-utils/build/index.d.ts","../../node_modules/@types/jest/index.d.ts"],"fileInfos":[{"version":"f5c28122bee592cfaf5c72ed7bcc47f453b79778ffa6e301f45d21a0970719d4","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06",{"version":"3f149f903dd20dfeb7c80e228b659f0e436532de772469980dbd00702cc05cc1","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"43fb1d932e4966a39a41b464a12a81899d9ae5f2c829063f5571b6b87e6d2f9c","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"0d5f52b3174bee6edb81260ebcd792692c32c81fd55499d69531496f3f2b25e7","affectsGlobalScope":true},{"version":"810627a82ac06fb5166da5ada4159c4ec11978dfbb0805fe804c86406dab8357","affectsGlobalScope":true},{"version":"181f1784c6c10b751631b24ce60c7f78b20665db4550b335be179217bacc0d5f","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"75ec0bdd727d887f1b79ed6619412ea72ba3c81d92d0787ccb64bab18d261f14","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"12a310447c5d23c7d0d5ca2af606e3bd08afda69100166730ab92c62999ebb9d","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"cd483c056da900716879771893a3c9772b66c3c88f8943b4205aec738a94b1d0","affectsGlobalScope":true},{"version":"c37f8a49593a0030eecb51bbfa270e709bec9d79a6cc3bb851ef348d4e6b26f8","affectsGlobalScope":true},{"version":"3d8a304beaf1adf596a5af671bc7ff50b2cf20ffaba073a645769be092476752","signature":"353cfef0e68e4ddf92d4679fa03e7982336909df285fe6d95978f06b3ffad4b0"},"c7bdc99177a2a94d25fb13722adaaf5b3291bf70b4d1b27584ba189dd3889ba3",{"version":"d1c92b66c4105659fcad4eb76a1481f7311033e117d0678a1ec545e8ddb8d4c6","affectsGlobalScope":true},"e23424b97418eca3226fd24de079f1203eb70360622e4e093af2aff14d4be6ec","dee93c07b4df5e26010dc9ec4cdf4d6e4076bb4474d2a8371529217c8b2740a4","ed40f2f184db052dc8df62d1f199823c8bbccc487c0a2a7c54eeea0badcf4378","04eaa93bd75f937f9184dcb95a7983800c5770cf8ddd8ac0f3734dc02f5b20ef",{"version":"c8155caf28fc7b0a564156a5df28ad8a844a3bd32d331d148d8f3ce88025c870","affectsGlobalScope":true},"45ac321f2e15d268fd74a90ddaa6467dcaaff2c5b13f95b4b85831520fb7a491","dfc747ab8dd5f623055a4c26fd35e8cceca869fd3f1cf09701c941ca3679665a","c9f5f2920ff61d7158417b8440d5181ddc34a3dfef811a5677dd8a9fb91471e9","5cc0a492da3602510b8f5ed1852b1e0390002780d8758fbc8c0cd023ca7085f8","ec7dafafe751a5121f8f1c80201ebe7e7238c47e6329280a73c4d1ca4bb7fa28","64debeb10e4b7ae4ec9e89bfb4e04c6101ab98c3cc806d14e5488607cfec2753",{"version":"2866a528b2708aa272ec3eaafd3c980abb23aec1ef831cfc5eb2186b98c37ce5","affectsGlobalScope":true},{"version":"a5782d6cea81fe43d2db7ed41e789458c933ab3ab60602f7b5b14c4da3370496","affectsGlobalScope":true},"f258ba66915f0196ec344bc53afe1888240bbcc855ebd151b6cc072275533319","6194335ee3353f7226ba31f31d6301d0c6be87228419c0a08976ccd9d4f1213e","3ac12a54cfaa84683506db8d4cf779135a271d9f0ec18930cf53e61fbeea0c5d","cf3d3b087d1a8a3355eec47d206162c75e912315b9b5c1cd49fda93e948fb80a","36f316c066c4a72dd6f19fec49a074f935744fc9ccbe75c87ebc07fb2feb9062","42176966283d3835c34278b9b5c0f470d484c0c0c6a55c20a2c916a1ce69b6e8","0cff7901aedfe78e314f7d44088f07e2afa1b6e4f0473a4169b8456ca2fb245d","ec70fd6f8a9a83f850dab2960a6789e93d5b034b354a16814cad5daabf62a360","e2236264a811ed1d09a2487a433e8f5216ae62378cf233954ae220cf886f6717","3ec1e108d587a5661ec790db607f482605ba9f3830e118ce578e3ffa3c42e22b","100b3bb9d39d2b1b5340f1bf45a52e94ef1692b45232b4ba00fac5c3cc56d331",{"version":"04fe7e7d8008887943260af1fde2bfd4877e0dc57bf634e0f0b2f3d1794dfd11","affectsGlobalScope":true},"7f77304372efe3c9967e5f9ea2061f1b4bf41dc3cda3c83cdd676f2e5af6b7e6","992c6f6be16c0a1d2eec13ece33adeea2c747ba27fcd078353a8f4bb5b4fea58","2597718d91e306949d89e285bf34c44192014ef541c3bd7cbb825c022749e974","a6b0abdb67d63ebe964ba5fee31bc3daf10c12eecd46b24d778426010c04c67e","ac4801ebc2355ba32329070123b1cd15891bf71b41dcaf9e75b4744832126a59","fd2298fba0640e7295e7bd545e2dfbfcccbb00c27019e501c87965a02bbdebf6","4fd3c4debadce3e9ab9dec3eb45f7f5e2e3d4ad65cf975a6d938d883cfb25a50","71ddd49185b68f27bfac127ef5d22cb2672c278e53e5370d9020ef50ca9c377d","b1ea7a6eaa7608e0e0529aebd323b526a79c6c05a4e519ae5c779675004dcdf1","9fcb033a6208485d8f3fadde31eb5cbcaf99149cff3e40c0dc53ebc6d0dff4e9","7df562288f949945cf69c21cd912100c2afedeeb7cdb219085f7f4b46cb7dde4","9d16690485ff1eb4f6fc57aebe237728fd8e03130c460919da3a35f4d9bd97f5","dcc6910d95a3625fd2b0487fda055988e46ab46c357a1b3618c27b4a8dd739c9","f4149f1aa299474c7040a35fe8f8ac2ad078cc1b190415adc1fff3ed52d490ea","3730099ed008776216268a97771de31753ef71e0a7d0ec650f588cba2a06ce44","8d649dbc429d7139a1d9a14ea2bf8af1dc089e0a879447539587463d4b6c248c","60c9e27816ec8ac8df7240598bb086e95b47edfb454c5cbf4003c812e0ed6e39","e361aecf17fc4034b4c122a1564471cdcd22ef3a51407803cb5a5fc020c04d02","4926467de88a92a4fc9971d8c6f21b91eca1c0e7fc2a46cc4638ab9440c73875",{"version":"2708349d5a11a5c2e5f3a0765259ebe7ee00cdcc8161cb9990cb4910328442a1","affectsGlobalScope":true},"fc0ae4a8ad3c762b96f9d2c3700cb879a373458cb0bf3175478e3b4f85f7ef2f","fabbec378e1ddd86fcf2662e716c2b8318acedb664ee3a4cba6f9e8ee8269cf1","b3593bd345ebea5e4d0a894c03251a3774b34df3d6db57075c18e089a599ba76","e61a21e9418f279bc480394a94d1581b2dee73747adcbdef999b6737e34d721b","efd55e8ca79171bf26c0d0e30221cb8ee1f5a31dd0c791ec4b2e886f42bab124","6f4e4e5a046171e70dfb4b1f3e6212de786bf2c1e2c4383ae0e61c4726fdd168",{"version":"466e1d21fc2bd1ed3f457853f3bd148eecef96db32d3f6128e76243786e5b544","signature":"e8bf553e815726a9063a12dad1d379ff844e4b691bbd1cfc81ab4e4e262f507d"},"90e9f93e1aa3fc6e594c492b40cdf93b87c77d84eabc6e41edf63da7fff6a36c","b03d4fd4a9472c5d3d0fd9cf502b1720b851cd849d810be9068fd0e4c944e5be","e788661cb1508db23611453d1ee67413429d3f412a1ef589ebe95aed52047588","d0efd4f632c93e90d91ee5e4611f3d7e4bb946c07eb6824bcaf08cf589f18c5d","38f2c79f1f95ec908326f41d43916eb590ce8c65b636349964abcecdfba11ecb","2c414f90866049acbd59a9dad2e155282a02080be773cbfb45ef5aaeae4c43c7","01a4823f194960e7d6cf43ddf58cc477ce43870b76c03764f3893c8ef9a505df","1c6615826296916563f6f88e21e8c1d1be76cc8c2a242fc2d51ffcaf856ed7d8","5ca71a9d355e4cd4446239366a3c281964a9623c01dac99021ad5f1a58f1c11f","c7764a8493c199941aa2f7689ac8d443162c18b19f02e4a3838b20135c485772","a77676cd14de48df1be967e9fad0825f259d5c6d8ab753251ea31886ae2467ec","b69ba53fe9ac4d116dfbae858949f81aff71b948205e4e0aa0237a67fb3e47a9","9b0b92c72051abf6a3fab9c943e9e5e076686119ae53ffd1c6f3caf4a5151cef","a6aa4f1777cf98dc18c63ee05de4c2d7eb0c9f7749354f4680bc86b60d618e83","ad30b20c6aec0fa39f7ca7c6922225450e67aea3b84a691baa74996da6c585ce","8b94d1eabccaec5b77706c4a88225d28a4ab8bc46da7af29dc303c9ec2950fea","5947cd6e46d10873b88edfea7f25a400a838e0fbf7def96bf45ad72b1913e683","d7ef97d18136014b6e15927a84bec746ca84b25c7ff254ab639285c3e6901f44","e3da81b21477fb45fe1d9981d56f0c5390f526724990f0156fc2fed235fdbf3c","b84e91d84f161245dbda145f2a7e8d0891583763d9a8e24e331ab00979ded8da","b63c4a317b6835b3b9bbae96420615b8e69b2264e37258e98c7d36423c6aa099","823739a2e34a0cde0a796c14bfc88978a1e70470023b9d885bacaa5d1b0a59ae","d9cb063f3a5d16883872bdb04863a3da6b63828661a0dcdcb013de8eb4fac336",{"version":"f1be5cefbf112e62d0cd0cacdb0371674fe45a831acca6b968ebc447663bbaa5","signature":"1c27aa74938a2ea9248932b87078a04ffd9e1e1a0b2c2df6c06a56b344cb255e"},"1fcb8b15db812281d69a3090d488903f9e93033004aef9d8889ca3ad0753a96f","bdf5a95eb0a2dd1d39805bdf51b46ba012bb9b92b2ddaae16219595bba7678a5","9f794a0e8550a03baff865a3961cc22afbd85bc4ba9672bdda036971928f85f4","66a697d1e4cdbf25cdce4644a8085a8563041fa8c7731d4d9f5e8f22e66ba72c",{"version":"e84d573f29521225f6873c6f3a795d52374ffbac0f2a4780c9dda2c40a6bb989","signature":"24a4d712063c22742479d03ed750d44f98465e64af9d08789965a97f8d35d7e8"},{"version":"9912e45816078d618083bd0471f72cfd4cb9b0c7de0cd7faeba22a6c8e394622","signature":"de39ab819d91908b2593a73491d639f5f077817be95390a0f23eb876af447046"},"09eed28e33827041ce6f9c46b5b445b3378265da692f261cee49f86003e578f4","1bd83856d2cf899b99c0320eee895dbdca68c7b7750f72274d4f628e8075d192","4c86198a1bd84c98a176684ecb3ae8533d1260763805eb5517f9293e583e99db","67296823a337ee1ef2bcbd2823d624c66ff1160cc15e7f11961f54c1e2eed266","451e59101fecc92272d6c59254874d09d51c0bc5e801d2593790c6789c12b6c3","6520b6e1b4707b8fe46a8cdd47c92929f9ad1587278e186becdf2cc1f063b2c1","e92a1d122620067972ca8f664278dfc89072f281074c3293aa57048ce51f1bfc","1175e20a9266637ef3d03a37c6d34f3b583ead76eaf41ba71d9569388a319eb8","ad9206b9b709f19567035b930a651ef25ee4a30cb0938b4325868f685400e170","3154a026075044aa102298fe9e6a7a14aaa26a06270680c7478a1765af8ffb09",{"version":"621ead1e1fde8e667a228a19dd90cb463e24496214ca1a1e3d2611d4634a9fce","signature":"a53707eeea688a06431b0f7dfa36482ff37115cb2c4e1cfb47567f1b1a547b4f"},"a0c8e17f4d1ea2704c62d7349bc3b8d9a12e3761b5960cb44144d3f0333b3fcb","3471c0df3d0391e1dffe6e8bf150294531b2b71a2afa5f2b86e52bf84a5db60a","5d4df4de055eddf3187094f938a640f8d96e4c551a47d6686596fdb6ba4c3014","8bc2cad630da1033c1fd8d7df2bffb18af0da6113bd086a8bbec04a2471a1e00","a1059d1bbc8ad46bfe668b8450e7e8002887c4ab987bdb96d6108d8023f8bb8f","5134885e9648e2c6745f8aa1c3e7f5ab3b3617258b3d81ca02de6655ede3d74e","5b919d9204446816876000e03f033458527bde5e3637783b2bc2e7e9ef7ce897","213984ba990f03127a98c3f022d5ca0f0d42df64d4dca199f7319448ce6f3021","020ab2020569964d12e40c68ceae39f40f6c0bee9d502a180f039fcb59c2e34d","aa50dc8a102c76282915e78944293a777866efe6d220a28884ac4a42d7f4c4e2","3594c022901a1c8993b0f78a3f534cfb81e7b619ed215348f7f6882f3db02abc","438284c7c455a29b9c0e2d1e72abc62ee93d9a163029ffe918a34c5db3b92da2","0c75b204aed9cf6ff1c7b4bed87a3ece0d9d6fc857a6350c0c95ed0c38c814e8","187119ff4f9553676a884e296089e131e8cc01691c546273b1d0089c3533ce42","c9f396e71966bd3a890d8a36a6a497dbf260e9b868158ea7824d4b5421210afe","509235563ea2b939e1bbe92aae17e71e6a82ceab8f568b45fb4fce7d72523a32","9364c7566b0be2f7b70ff5285eb34686f83ccb01bda529b82d23b2a844653bfb","00baffbe8a2f2e4875367479489b5d43b5fc1429ecb4a4cc98cfc3009095f52a","c311349ec71bb69399ffc4092853e7d8a86c1ca39ddb4cd129e775c19d985793","3c92b6dfd43cc1c2485d9eba5ff0b74a19bb8725b692773ef1d66dac48cda4bd","4908e4c00832b26ce77a629de8501b0e23a903c094f9e79a7fec313a15da796a","2630a7cbb597e85d713b7ef47f2946d4280d3d4c02733282770741d40672b1a5",{"version":"0714e2046df66c0e93c3330d30dbc0565b3e8cd3ee302cf99e4ede6220e5fec8","affectsGlobalScope":true},"4f1ae3f24125216cf07c5211a3f00d2bb4782d7cc76c0681603f8249f9232ff0","d3fb92a5640f83f7844d60b35317a0f95c27e3658a749d76d218c461ad091668","d1f8bfcd91b284657ef8187c55ace7db91a3c43e642c3f14e54364154932f7e4","f54c92bfcae54f360fe79514746efce4870e4ddabc064e95d406bba291e9f672","175fd7186fa6a70f9db9b270a04a503cae23cf01cb77e3905bac115c38424cf7","277afd6ab6ec72889e2988e0ddd7d138c1f512e68a1fa4e90eedfd71e2097a51","c0908f85f2b645d375127a3b53a17a65f782e17962d5c1eb68f08b1188acbf15","c993f7ed1b8e1023c1f2ee5b262dbc3b70b27475674e40a53a58591f9972dacc","3fadac5d409cc2f27b1d2f4e7568600f02840205f301c9ae7a3068b46476438b","da6aae64ad559286830fd44c81e3d33303348f184af7db4fde8dd99ae9749407","3633f87c97d359cb55fa7bf0668fb2be8a23342951af6ec2d06e6d0cf7409371","cc3a5427d44fc77ff25e80b3edee4650a51f83de761faf5e633994ecf1ab1b44","b350eda75c6e47299b36002b31d5b220c405c21c365e708989829db013fadbb4","f421882756b6714834ae4687ab1aeadf344a1cc45437d2edffbac020ff3801c1","1d61d6ad832dabafbf63b86c5a79d704f2c8763ada9318e135b17a3cb2d09b32","e5cef5de3e5ad3436d414d20743231e284733b9cf4375dc79eff4fcca4282f99","e624419ba84e33e661e89a28083119ca41f6953dba09a4f82b660684087afe6d","942be430bd0feaced2e3e598273b17e50ea565ec9dac840b580b0b99e1a3cd5c","73350006cec5a0c6b71d53b0b0ddbfb82be96752a9c4e3c904c59e633bc9485e","a7df5c2e9594966c7e0d4a763b13ed5727506d892669df5f7bc9826f539c1d35","258cc5cd6891f6bcbaccefd953997038844e7f65d582cac987ffabf7181bcd4c","00a6db28fc4df6ddf10adbe630d9df620ec13af19039c1869653e60dafa739d2","649324d5abb5464aabe35d86cd0eef16562df811f0971481cee664afa5acbc88","c914014ab7c7001178663f29d31a495398234a41219af61f26d7e8e91b46af96","b135893253d5e507232d1d0b8639dbc00c2bac453fc0420a9af738f1792f8b29","267eb41d7d34151d8b5fdf8b73ddefe0684d7921f4b7db14101f600ea3e8ed02","eb848e4da1fa7568c893e0a0e1f221572c56768dedfe21d2f7741d383c381552","bd6b7d9ff1992fbde49e974f6bf4e8c35922042fc0b6f5326e61fa17a912ffe6","ac443b1f93babbfadff3aef4490044012ff461ba1cf1c7d90ac45f5a26863358","42e4cdd55aa23586b9aff929e2c216150276a37d30c2cf7c0f32ba917722b5e0","4a1ed19ead46b1dd5a319d533fb92162b4ef052ab1c690889cb2eaee293441a1","d0d5b967e5c36354b2f13b4bfb78aae4c1685efa9df3fd946d2e576d370e9302","8076164b388640f7856b25e945a2ded7738e0f8674ac50c256734067b0f0b1b9","36819a1e04a8dbed754a5b3ba2fd5aca2eafb95977eaad6356d77df596c732f4","5fe9c19f085365b73956e27becc5167ad25c5fb024bed4728884966a0faab3f3","d67961ebada9a5e5c393d9c46a4155877a9f7a48b02a0afc6bbe4e87061e46f5","d5e88cd4816669da170c646844042bc83f4523275f85060cf3e2b5b3bf902ee0","137ee20e77a23986e9a1fdf6397b555e6d3073bdcca15927c40671d1ac564aac","a28b00d18def7993bc502f19be6abdb89db2548fe946a51f0771b8ed26a6786c","0fc6ddce4aabc8d84a6aa6644e1012a1474ba844ed6bddc7bea7115583e8a72e","f02da9dd36d7a9aa33c9b2e37ef1f54b0d9ad6a713bae372ae4b72890e40c168","3a5652c44d7b3ee47b1d294b1893b30253d8fb6a1ecaafaf5fdef5fdc118f54c","4fba134e9015779329678ff1fd1afc32bbbf391b1f419f7622a3ecde7bbfc355","af75984f58aa9205be02b0a2248d05f6105a8d4bf8be0baca294b5ceaa10e33e","45a910666b455daf042c0a0cfa610c20ea59a0aaf702f93d3b467a05f9a27e20","5580ff53b5f6f1ecdb68ecb61327e63112f97660912c15444c1f8a08f69c19dc","84fb7c52fc116ddcbd1b34535e387053f2a0134d11c5e39b193f4c1328fb1fb5","fd3cd8bf3c90ef4694195a617a5daaac561d8be52ba33c607f170c11f3c50154","6852fc2f309e330e38694bad95bde670c384d1498bf4fbe3a751761b43279934","9f963b28320dd50221cd23f23059bc23cc7799c7025b44942da68974f90c2e6c","c17329bcf495af58e3010f8e61af51709aaa24a6664d8557a7d01a82b5397c59","4eebb617b12f21864e6641d0a9eefaca77a9ccf93f00bb7d50b26d8073866e53","ca0b43e2565d78809383e9a025b0638a5e65bcde4a2b68ff2c6fa5013642db46","1d0a0e5c6471d81467c3fecfa4db4e93ee87d364b776feb83b18d773ad9496d5","ef6eddcbf08e7ae71cd9ba8da47e9a3cfc7db36650af48f1b440a5ed50eeee7a","e14ee3cb4b764895f2ff2fed229df10b59df8a761c79d8e91d868793322b8896","7e36003872035a49bc3a5f21351c37d0e418f60d994ecc470a9463b33b4a7c12","b862345e219e6a4d829f7b7cf6d2d6e91e6fa00c29a7c6c86a3f68c77c25de39","2b88f02598c9de626b35fbe3ffb1ef33ad9fd175e36e06ba27dc79e444796f6c","b728dc56eb9b0d27b4044e076c155f3cd3a121a4a9939afe829cfc0d680d423b","324b7298f76ce938cd28d2698a0767ca3c740bc843fd9104e171be8eca839555","76aa33edb0042dd572d64e4bda231374390d250d29eeab7e7f27010e8f826006","03b6d387edf18a9ee8126e705edff759f65d9c602e11b649e13a5261fe6951a4",{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"11a9e4a50d84759e8353ed73da32a6462c7ca5c12a31a6cbd39414b456419a7f",{"version":"921e3b40f5efcb74707bc7e14b9b3c8ed2bf9f2ad1e1c7e2ec5fd4252b24223b","signature":"b302ad9fcd5894938a13ff57f54246e32dfe079b6205741a77cc83b657b483fd"},"d383fec7cf5d98b5f42c3b20303193adb63d57fb6b3047803e3c0ed2f93cb6da","25bb1235ddb57c1f90ae8a0775e88ec9a557f135fe3e1e8fbd97436021eec3cb","0cb506f83bac065b0519dda23e704376b9d36b523c7026dbf8c8593831a69596","57873da4a929b7f631ab0e3709c1f5e3e91f72d002e3b131e3488179e7165ca3","aaf730d205461e271486b1dc3e6a50ffdf345949c179869e18c778a47eb4ec53","9440121d485b9176ecbf7af75173798bb9669f5e913a0d85b348e7e59c677f04","6265be88c1e74be57e1db86f14e1924f69438acbb996885a10b90ee08b724d2d","fc02e85ead310c586baa21de2f19293a5a475e99e7bec85d36348fa4792175d9","a16dc585916a89ebbe1ea6e115d4ca85f331d5fb63d4f8f078e44bf8b5e0fd79","2cca080e27d9f7835f57cc364478f2bd44036172c22be9d0fa7dccb84d07b23b","7a75cc1aad1172a287800ce135e9ddd317a77197a95df064518d0ed358950737","781916917f8032ff7fe4330f09162c72cb14d838d88e17fe24b4f5e36d529077","11d8e627dd9dffc01b6c210b6e5f178232fe2fe8a49337242455fbc068267f4d","0eed71753fbc0d6f966f05e9edf9dae6d80540bc6b0443c792a2b2775488937c","14b103a16d584ac44b2aa911ed169f22bca55c944bd58789113fbde329c13ce1","a46e6b67ca3d97e673bd30c82093475429b4ef86aa8a7af039f2d7231e14a489","2b6fea7cf699493170b2b5d33c660231c55d2cdc323283b3f915fe2c5c3329bd","c3649d3c4bd72ddcbccd64bb13033d60dd228231536c5c7d2c88ab5fca0f16b7","60ce0c7fbde8d88b23f47af9e16c5eb8e18b1a4b28094898c7a2f4ba83817e2f","d0fd5b70c0878a32e45b9fce926577fbc302f1ac9154d417790b6fb77ecc421f","2e636dd8fcfb1b9817f0fcf6fec5619ca4cdc480cb0a958e16cd721e9cd40de7","4a0755150e118b65557a608c589060a367a540cda9edd615149c8c0018398b9c","6b00fd5ac469045246f2ea62a6c2e46c76609f99d5d3237069d9311135afc68a","26247a03890113609927c6f79bf66fda3745c9f898c5903a3399d8b341122090","61f9395be1c73587d5f965ef2779c3afc97a51391498a325948871f489eed8e0","33709773c8a3086ec6c4536d90eaed4419021caccecc352f1e63c7f9a90474fe","c6b57b1c400658bef1f18e0db9ddd8d8d0baaf8f6c3749b9be89345d3442ae05","435266748bcde290f2e7e696bc9bbf0759d47ac5d9d45b7cb10da0d6e2b23d48","3c035e96aa86a9ae278d0bef950ddcbd94e565c77e40d98ab55dd64e4b9a5fb8","6b18b2ecb7022d4061d1b8bf82798e1a72c6f170928a0be8c8478b3f0a5c77ae","d39ba459dff1d215966eabdcb92c1029821f9d6953cd9a55f8644803fa6f4a96","4d264e93c40c2467896ebdde6bd614a281c551206fec0bff382fdecf28a08cae","55f0d458b3e04a6ed2ccce4182fd728be3e8c1999e4ba3bce6e741138acd0d00","fea1f1d9e51bf0c842d5bda244f7949d5d47aac4c918936a091ba1b8e93b20b8","6d1c198b7d5950657eb9af8e73c9bd0c9a241f1512f74bd6ee16b7c459af288c",{"version":"64e9443954973fdcaea088700b175d00a95795231d59ae124574fa0bf2fc954d","signature":"f1fa2ed6816f005af304f2548b989e1c433c7130b501dcdf86522a164d8cbf6c"},{"version":"258c1e2dfc093a01fcc1d4f85144930876223e20c2620fd5cba53c89fcc732cc","signature":"6589f58d176db29e897cd726963fbf7c38aa0715390ebb9aa91c7932f7c8330e"},{"version":"b5b7fb523891a2aaeb4d28180a4db94db8f2da749d1a4de6bce361c7fcaa240d","signature":"d4105c06f44995f906fbb5dd3ed8f754689c22b9aad99a94d14aeb88ad662dd0"},"792fcbcd71026f984566b5dcd0d73a1d5fdfcb6c8569ef8d84c7b1ff9d229fcc","0cfc689eed1fc4dd7fcd4ddbd80dfe8790cb0585e1249fc019019e19cd71e5a0","094ac2c069d9894b62edd1f2a9dc63e5351e8adb931648f27e47aa7c5d6e983c","ceb9b43165dbab7513e34f787d3f94ffe9f13e440b070417ea50c63eb2c68041","0b9d54448ef230d8cc7763ea0f9ac4fb077fba96391da3332baa882c838cc152","ed9e4c71174d78d20c41d057db0a32d8dc7a6979c04db7852c94967fcee55ec3","a3e06106ef76a6e015536f1ffbc595aa8a871ebf552a500cac1b558e48872ff6","5de6c9c98ef5f5f47005412a13f1ea24fc778e2239ccca69c772485d5ce396c2","822eb5622c3b940f8650c9179da6c426ae2cf309d846f623b0f2d094b228f03e","2a792f34f40e0b8e007a142825e8a486263f8853420572fa4dc6800f4f1eb781","afa2920fdcdfe1691a353ca6ca81b0cd2ca4539eae8cc7c0b9651b1abcdbc74b","1c067bb41f2c82b0ce255c8a4eaf4bafcbffe5d702ae52dec50eeaef930ad16e","dc05b7cfbd7166a76bb33c9a494752fc2876684100208694ee334e92d124ff13","f4cae09b720d87d4e359a6ae91511d231176636572642fd058c4f973478df5ef","492d09043bf7d0ffd0a77db8af9c0a6838affaf7306dbb00680716f1ff51184c","5d4c9d0014f2b221fe243627044e2c2290e33fb97befc0ad72ca2c07e9cf3bcc","bd63922a65e000d121bcd5c0ab479dd6b5c9c2f708bf192c256b58f1a3d8f664","2cab018bf28f0c70c1f7e423ccbe2bece766b0f823fc8be1ef2c6f68fa45932d","1989f78d7bb2f6247fb669aa280f2c3c6bfc97cc8be30a2ca9640f89b3f57a32","f669773f31bfa4e50c75daea1bad438206801e212e1374b5719137bc59c0ba9b","a4b778b3cbd76281a30cf622f5617e25c186f7f9684f2567a3a8f6be78b8c925",{"version":"4337b3d1670e9d1ee8adbf8c62ff178b37be3b35ae0a21d92ec743100354ac97","signature":"a6982d286062434f9336ed5702f2cdeea9321fafdfffe7dc439ff48b9439586b"},"5eb425ff207a91ef139e23ebfa8002a7ef569bded2749a39c79494eac229da6b","510616459e6edd01acbce333fb256e06bdffdad43ca233a9090164bf8bb83912","7e88d433f6eb15b0edb164a4ec1dc963a7b2e2f2f018768e47cb2633ea6de399",{"version":"d0daa787fd594f1ae998c46d042da85120ca82f5d1e8dd55170714dc4d15c8d0","signature":"2716ef33d8a329fdf9032414061a83fe12b42db9d3ac43fd805d382bbe2ae7ea"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"16e136218aa988a68daffea6a12c918b164fa56167aaef5bc27f307020e25488",{"version":"a26de25b1305e49c7e39c0eb0ded935bce93ca0a77784a39895e7c53006578f5","signature":"ee2cdd2a6b3e6c50f61ef6ffb475904d3f799b852152c08df8f9e59ecf251529"},{"version":"3fd2ffb0993da32e80afa7077d2b47346b46f44ee8e84fd782ed1828ca1af0d4","signature":"04d9467a5682da7d3c0826f83734f4499c1d5bce90cee22db487b7849839c2e0"},"ff82e9589fe896c71e97d148aeea20743d5c7f7d989b82e9ad1db71d333402ac",{"version":"17a89ca1c518b198c649c2be10d1f30918151f965b9380fd272eef126b82b066","signature":"7eba9b2a03018a752107e3a17c37bbc6011fb749c9e7b1203b5a541f637a1223"},{"version":"a3b3990eb76d0b51970d352770a3fd8e3576afbf51f1b39a0ee982633154b6d9","signature":"562f180232a15d9a16607b34e0df0005a736466f79f47df0a39aafab48f5facf"},{"version":"10254dc145dff954004fb4ca918a8791a55bbe282b69aa5b956af8cabf71f98e","signature":"b1469774278f2d1c067ca66fe7300c3a193a0a10a8d424621b1709b57770cda9"},{"version":"a005a784a2ad5922184d98635035af65d9d042b2ed22bc9a5b865bed6c1f9a84","signature":"0a116895f5588dfa77212045d08257f484184c5d8ac328a0cbafd19708f84fb4"},"a6b74f096f8fe3da9bc070a04b8aefb22fb00a062e4de0ce9e7c9d6a3d423847",{"version":"0daca2a8aeca320a808295dea4511d96d7897867aa5ed5102c159f1ddb6b2346","signature":"ede3426aea05dddd4ae999664aaee0adad171fa0aeefa7199c3c38e5c8d9b47e"},{"version":"2039a1a0c04684a07d56b2b91222e231c9f6510bd0166e1713952ff29cc3b1d5","signature":"809181d2448bc63b4f87481f9e2ee209d0cfcbfaafd83a3a231ee0c55158f573"},"2b33cba77ae776e27801fa1eda2df73442345863db8e709125a5f9f30ed2096d",{"version":"b473bc52523efc8bb217488bc3b10ed34c951832c1fbeb11150ec2f08d706d8f","signature":"2bc824d6fb7f286d4acfea44fb5f5331bdb07eb38b73e70dfbb9f3f9c4c0477b"},"c01f0929ecb56b3c0971a727955e0ed83bf828744fb0f04917052ceaf576ca56",{"version":"17271ee5eada8a5036b280acc3c36ded0b6a487dcdbe3f775cfe9b2e7543186a","signature":"6f3c43324c241b6b1e29b9193784e835b76e3a12b38a77fe62ac9df662c7c06d"},{"version":"e2ddc31130f02b0488ab09d551a14c267f20183930d73eee2f0e6729e86588ce","signature":"07733fc9787712e7f3a2f9f7c8e6773036f8023de944b96e141971d6a7556344"},"1df722eed9b4cc011f26556f3574fe6aa5369a263ebd91f81424523277ad136a",{"version":"b4141d311e83f3af9320f8e307b3fb287b299d647e09a9b3262fbc7d34a95aa9","signature":"01e074392769bab3ea7ef965866c15fc9f74e123fea4e6ca0821701f53aa1665"},{"version":"2cddd2bbe3a08e65eb2216e6d39448e9b2fdc6d2983b412671b8faebc7f9d9a2","signature":"1bb1ee99c2c2fbe2012f522dbfac98ec7d316f977200c7b179deb665bf8b6f97"},"64deed797f3fc918d99f992e70c2815b7dee4d40774aa3331be9f2ab94ee408e","115d60d2b07ac7d513543b5e86e13bbf9a9524faf8bdf4985bd7a08815b46406","4a1545bdbccec0209a67da02f760fad629deedbe7d8ac9f55c93c82f95ff5449","7b52c21bd6397ca26df3b7863fa2d5014aa4bbf5621377769726bbd59956e6bc","8fb686bcb1593c907a4a6284625137308915871b7a3f672c6096769704fd6593","80283bd376b4d5b8970d1f0b8c549e3b9e24aa26d8f785bec3e29e22c525f1a4","6efd085323d69407ea14900a7afcb0876669a668c8e5c357782eb09d30f5e90a",{"version":"fa805a65de69ff27fa624ecd4fbe7837596daf445ca1d38e0b558287ce70b77d","signature":"e846678f5b81a7cc528b39182a724475a2a7221ca47e2603a864b4ffd216bc95"},{"version":"d620cfa7e1f1d301861eb9be5c1f19d469cd948c4d24dc4de1478cc229856d76","signature":"b3a071cd1770061dc3ca72d67795f193795e7115faa400c041e51bc3afe831da"},"79501e0b0bad092052f42908a84bfa160bf7ca70ab703dc640ca726ff009eeef",{"version":"7f5f9b71b6407c095157c28f5331edb7689da2ae34d39b3d92cb2ee0fcc7cdc7","signature":"020abe8c521dcfaa819e58247ad2209de1aa823ae95bfdbb48a0a0f3e689bb22"},"e68ad0de94899b5e74e88a30299edfa9234582a8fe933a79fc68b66b9ff7f623","1515f45c7ac8876453f491c81b2899110c564714b595d87d2e270feaf5cd0171","8e1316e23a19ba001770976c029b910bd5ce755f8954b0afd5d3516932e68d7f","ddf843152599670242bb8d17acf9cdf716413326d5465a38c416a8534442e099","5bff2f68cc885cea49c6b0db0d4af5daea83520703b0fbd745c301267cd9f417","11cebccdb3bdf7cbb49c85dfd2251391bfcad51e164a10b4b3edba32e54baeca","dad09a8e5c6e7e9e82eeb47b69de3263f5f4bf60c5998a1f8fa4be5ba4124d31","9a06800a6d0a0e4add44687a793e059ca1e4162a490b68d27dcfabea14573205","1f276a748c534af1620acc29e2ce5028060d4323bbf1ed1f08a80977aff3abac","c627d39a45467ef12ce95d2bdbdf8cc89f6de1e9f112c32b7b3ee00f963e1c19","44732cf340786b9df93feae047ced84700ed8b7117bbbc9f0c22c0dd8f14b8c7","2bb640dfad345694432d89e0f0d5b8ce3a653a97e0acfc935503d234a8a9cc65","c5adbe37402e1a7ec838a9be8e64276b7e250c3e9f4aa0ec48ddaadc92bf0596","cf7edd726db5788180327b7729c882dcc68d4b4d290710d1e51c31c3cfe44054","31ba8333d2e02f398e80681621d7607a1a1e8be02b5ffddd4ae0383a840d364d","fd97d8bc27c67c6291ab8b31d3b2c1c1efee5344b714d559bc08ed2e0dafba8c","cea244f9d063ac1552796ab9aa0729feb3df72caac0c4161e54e3e4aba7cd787","51de0c244c81479b622382289a79dfaabd2e59568699e3c5cd39e3704d4c7f36","028ce62ae50640239934f3e8a6b908bdf752c98e2dfd45c9715ecc04e9624017","79bb921ab32518a8b33dedf9a32b44459c5fe6c73655aa5fee0f1a64b21c37a6","1cae7dbb4d8e6f79a176221e61a4b3c0da201bef3e4d4a946a2e314ba5d55f3e","ab647cbe5e37cd718c0dad137cd9a5309f6c93775fdb474bca89c4ec242d622f","379b17cdbb2592b58c22b2da981c74b0e685c558b8b84b8f0e9bbb2e4cd79bb6","be579bb21cc93a8e5e57223841b4f407e5ffbc24ad816810be8f32fc2d430b4b","ab0e2104da6c1842c26dd8d8cebceee3f730323d561bb2ae6a8acee5f9338a25","841835a0e44a2ead0d497907b4e8a6e5b1e9b3a3a05efdd6e86e56f057e5e282",{"version":"3ab4e01fe77a1aa8cbaf831780e15424e3c17fe12bd8a02422744c62fca6bfa6","signature":"276d54f65e68cb5812fb43cbc5d7e58b0fc11d780b93d1c503c678a8b4e536e9"},{"version":"0b97e7e36c291178dc06f2680633b842e7ebd94d3723928ba72a4822d4af15b5","signature":"4093a1f812944b0cce187a52a141fd9652686d6b93651c6126750bc8cd27967f"},{"version":"981e436a6825ba44084ae4fd76af10825884ab6709cd0da040e8aa4d4c519359","signature":"070cb0507bbaba6abaca450e865fa20255bbd6ec5dc4d748a9c5112346dd700b"},"df7e3f1646e8a98bde88aa3e137d094054bec69256479d9745c02e6fc1084836","a7d39371cabe952bc7ad53bacd2297506adddba10c7cbce6e554dfd20020c51d",{"version":"417d0d87aa75f084a78d1bb861f5e23afacd0d5f72228e3a72b5436006de0905","signature":"d7132a1de415d7f34de3fee0eef4a8a38af8c25978a4a91d3b993eb1e11fece3"},{"version":"ded085b095704b00b25da0edb727291e39d187976629f6cf0d4011fc614d5e9c","signature":"ccf47c6184a9a2da25679985bd77a23109b5d36b4a600177fdcac40973b0deb7"},{"version":"5303a607bed2f1d58f158a29caeb11d5c6fa3a0c0052d1c219f11ff505a551f7","signature":"ed12cc19cfdc157d9823b30917e8ab40c2d3845feaae75dcb58db5abb6360b30"},{"version":"7eb1c154770627c946bbaf3e5bc3c7e78660b4ea6b272de31b205af8b3d0e286","signature":"f8eb1943c94b97fad14ace58c066852f1c568d75891c06e0cc160ccfd4310743"},{"version":"36176321c10b297e367ee9429bed1f26fd6834f42508e9ee20a0d41c993b73b1","signature":"14bdafc806ceb560ee0cc415fbdd4bf5001ee7ec14ac45a2f51c020ab092c181"},{"version":"f1bfe59b41bcb38dcad14ec251f8e83e2f2e8acea249ed0f50cda27011ad3bf0","signature":"31cd6de98f9744eecf24fe3450ac5efd6abfbae3a4a4458229a3fee5ab4bfc99"},"4380c06c8d36e963c74636ccc3f5f18dca333f52224e8bd8d57175670b021211","f2e3e7319a2cca8c002ca131a213c0b69a3f776cb666fb44174baf60806e93c0","2013c436fe32c9ceb496b28cc05ffed6bc3ad9ad0467ee180f11af3236d069f2",{"version":"bd0233076bc52c03ba133d0554bf5c8259608cee9117bf250d1cfae54c0576d5","signature":"a21fac6329181028cdccee4307ddfce411e09ed9f09a40cd266a19d0588c2af5"},{"version":"fb8ec73bf4a8a35f8b5a241f380fe4f2c6f9f768d749650fb1834a93e98e54a4","signature":"b463505e5cc98d7af00dbcff8446ac16f67d25e43729975881b1f369e75049ee"},"a43dbe2b477825edb425f74b9bda3e84467bc2ec9b9d8e67be7e3a528282d801",{"version":"95052d1812d457a9eb243316f3bbd038dcb09766e7db29c647b8c21f9ed91fe3","signature":"7fe90ee6ce17430ebbe5e29f3c0a295c5e6e4b07c75effa75b1a37c6781b8503"},{"version":"8fc7afb94ab8ece139f0aae4c744e57c97ae35341400a0436fad87dbc84bb158","signature":"7197d9ea3eca8f7998feb28eb31db6ecbb9c131113ca678ec2ab7d58a1aa41a1"},{"version":"10240c3309e883a3605be015f015a3af354193ee7b74a6c679dcd899439fe588","signature":"c8b1d78ea8d1f16129f73fc8b182255921caed8ef417c15946d06b37ab93a65d"},{"version":"23b8208012453e385ebe5ba14848132195721405819848ef7859d0c02abc5179","signature":"cf35b116d2a4b2ab94e54c5d8dd6f14335f2c10795385fc1b63837be2d181259"},{"version":"dbf23a8cd66ef6c799f8ecc67304365b19890192e262264c73822615bd53ebae","signature":"754d59daddea466bafa1f0d8448ea5865f7153f17adc3d939b61709e659179b3"},{"version":"51bf928ce6ac57522f646223d50b4a252e4ab7204da4a3b88218ab2ad9aded9c","signature":"bd016744ae6ca47c077f30661af368da319085c4537214fd1063c45c22b75d77"},"c58bbafb5a6a57a721652f911e722fdc0ffe85e82172cb78f7377e5a6885b2ae",{"version":"d4cf903881b26b35de1ff59c8066fc88a925dfb6bc8186a1000694717df3c63c","signature":"f80284421d8f20ef54f71eb946cc836f5fb7fe03c31bdfc53bbdedc886514784"},{"version":"3337e7ce77ad8a700dd924686e950115f985b561ddd799bab6f6e4b88b2c134d","signature":"ad46c0bbefc50c2bc4e637be25f9d0d832bc0c446fc526aeabdd7f316f4fb3a5"},{"version":"5ce6de8b3b5c316b70b9ee85043af57c1d5f8ec8955661547f25886a0804e09d","signature":"1aaf7884ca26988b1b76a00989e16b8ec931392e77305197cb6e8d7432ed364d"},{"version":"7fca8a8ef963a92be0873b682cae879e06fc341f2902e9dcc4542d5c2a2602fd","signature":"025bbe9acf558c9142ee4566528ff0b4696179ff21e7e37f7851fa97849382cd"},{"version":"af96ededd6c47df3d31ad765d8c00da74dfc703d1cb51229148dc39c5a117ff6","signature":"403af83b2e3bcb313a11dca8c5b8d1aee04c4aa2dffcc9e62cd3831c2fc93e1c"},{"version":"04e4fbba4c5d9085d910a54dc3a2b252621cf1b4709b3efaf5c03d20b5fe32e6","signature":"1538772ce1a0e004ca84ab1029754ca980971970d9a201c7c3474c6b476dcb61"},{"version":"ebacb6cb16f110f8a68a374090710d9182fc5ae4e8ea49b545b2ed1afa1fa51e","signature":"2ba4f98677a6c927e673141e9018e14ca02dfbe341f4cc6dc23c5a85d3ff3077"},{"version":"93e508ef11bdf23e2009534974126083409e2a8d675966cdbc816ec4e0d4882d","signature":"37f129dedba5091e251bebefaad3a564b60b4e807aee9f780e74c54378ac1f5d"},{"version":"8b3d0e9c313a098b31b5a7f0e6d788719d874148f24b9755f579a555b747e858","signature":"fd5e0d28ead649e38c8bacd1ec851388847cf54ad37d9f36d81115a020591647"},{"version":"00cc7f55226e592b9f1175a6d6507cb7c74ea2ba3c494637d1fbdb8100ce679f","signature":"8a71f963e02f0fec5e88d9569642d873961d2b40e84844baf04f5d77a4cdfdac"},"3a61ac3a6089237bb566f2f70ab0dfbd5ec203a21e09de8382a717f5ba8ddabb",{"version":"3659bed7572788ca0aa2118c5a742270d287e852b2029ddf50a784e9a1160997","signature":"bb9f357f778f67ad2d7988be76628deca1fce7581a057b599593912ed2a054cf"},"5ef81a02248813523201ee4ba5c711e72fb39e1c13d4122db86caa49928ceccd",{"version":"d0d20e20704ce639a55956ef9e976a98aee67ac2ffa75b3f5ddc03632c33e5cf","signature":"527401f43636e7e863401c1210620a880a335ab656aaaf201981a979bd7793c2"},{"version":"757a9d6ccd6063bbc83e4a68d69680d1e79a8402c53d0ff8cef53e9a09bf45b4","signature":"38594fe8776daa1c6d8eda3148982fca4724fb9107b569ecc1e27d993fb4e324"},{"version":"adce73e9d7f301b90eab1042ae94396d8bfff13583e362be5f47fbb25c23da74","signature":"f11a45368202ae00bf5adb4ab825e8cd81939d4eff8f61b66977745fee72f4ba"},{"version":"8a35075286a790d3f59811d326e8d7b0ac97e9f5d93c0924de5223cf060027dd","signature":"eb0390e5fb29c8e26dd2ef43a376d769458a80ccd0a95f5cd4512b3d8ebceba3"},{"version":"cd7a2786f6fff77cd9d32c503e9dfd2c165bf61d8a2af7e6a1a0c3ac77cc9b34","signature":"bc13c51b9d0f6cb522454e10c2a1e581de4619c99125fd6913c69fef6eabaec1"},{"version":"5e390dba840055d1026484d576e1dd861dc8dbf84e58e76bd450c9f9f32a0386","signature":"f6f545bc47f233b38dd8a9add4ade169de5747493dd414f9e90119ceead61c3f"},"69b39591493ddec7c2ecf73eb53a0cda0c2c0aeb876700e0cfc82152e8f5f452",{"version":"750a74ca523cc6877f2cb6786e6c3f81eea597565afcae46699728799c1caaac","signature":"a963e4aa2f16d2f0f5f5ec046ed8ead51b101f179815e5fdbf909c9ca2d244f9"},"267484504819c7c8d262deb5e6147fdd31d0c96525614e6db018637dc1e94c81",{"version":"68cfc2c2a97463ca1db3db7866750b394748cb3fcb1fe444520ca6bfa2499935","signature":"5fd8010422dbf50a31c03a94964b9e2372a5840f722eee8c2bca9c5d02e831d7"},"098f8977e76712a3409ddd033faae089e8b95d083d8caf72493d23e2624b5fc2",{"version":"0cc58e70d7d4e6fafd8dc7cda1eb19829373bf75a9726b29502928b4749ae912","signature":"bb3b12aded5ce077e289e622cdd81b52131c0b426723e591222c962c2dfb0db2"},{"version":"883ae28ec16e215c919276bdc32cf8c4dec1808d10c98a5f7cbee38636702037","signature":"7b060084197328fe461a1ffebcb2c1bfa1fd4ba096fb34facfaffd4534c9c5c2"},{"version":"c470a163e48a455684ea6131d82186c5a744fae7158ff6779fbeda5993a46299","signature":"1bd40e847573c320e4c35dfb448d79068d3a1372207a0ef3838bbef7f016042e"},{"version":"8dc25d14f06405151c33a5515cfce45f711e5c61b29f4338444175ec86e47004","signature":"dbfde02c25be5df7647725402d7d0e6a6d46e68f35612878924a99bc9449191c"},{"version":"0ed2fdb0a450642fcbb8dd94196bd350793d5b90d391dbece286b646c73e6fee","signature":"b70a7f005802475bf13418d2de036b245c5f78a77fc0c060e921be38151c9549"},"6a3816094633a8e76b1f3d7d3834b6ed2dc9dd08c8e996a74c118284468c6e7b","b6111a0f4732899834438a678d2b6b553c81bc5a5049ae367a5175fde7cd4968",{"version":"97fc004a31c0a213de61c05b350f347e25efca1eabc8ba1eebdb2d9b85689dd1","signature":"5a49466668114ceca972d8d030478a0f37fdd04a55eb62db8c0b4655eba49484"},{"version":"8ce79132232bed71adbf60e1c16aabcb9a63153744eeefedf98b22898863d7fc","signature":"f1cf633241130ff468dcf6a7864577e7be8696b5b5e33083cc7507c03b6f6a19"},{"version":"f28384ee019f2116926f5740e92bd227443dc14d3da7daf89e0059ac5913866f","signature":"38ed86c8361af004a7b4a1bd5a2b3d237dcf5356b0b6425950f9c2b18d509d47"},"cc4d7e933dce2ad66baaf535e204405bb18404c7167e99b7ba9d584eb89e1565",{"version":"ab515d691ab8d0ef3d07f4f24b5058c0d244676a867e91d0cafdaed5a35d48f3","signature":"1e4b2cee1af0e665ee5a6f05528eae7b0ea72a120f10db43f5b4af09dd0d4a86"},"8a8bd8acb1a915a93db3be0b186fede51eaa2f2db40dac79a47313b4df55cddd",{"version":"b9a8f549ad99338a16b74b60ea58c9ed705980900b10dee916ecc730822af3ac","signature":"9914c79c33b663a7aea996703b671582274e86c2409b67753fb4040091bf70e6"},{"version":"28a3e130cc166d92e9dd9fa9fc510d9d2be0faf4869b2deb8a863421d9973a68","signature":"02d34933aef882ab1da4f55af5333826ed28a8e6abcd4182d81dc50e9173a14d"},{"version":"b1e5f6b6e236cd191974d878da9630dcc71edf1833f0eb62e0209b13b8ab2652","signature":"b36bf9277cc3b763b3bdf0f953efa7afe06ace18b1da9210806201ad7a6f6acc"},"b1a9839925ae9b488f587a8ec6f23e034b6ac4bed5da3da005f3414fa4a18cce",{"version":"43534ac51f6ed166a457b3247fe64c65c094f95fa7e748210f2255fb2fbaacab","signature":"0935c408dcfc90a8f9dc1d11d8270fc6cf80c8586d96860da12155da405ec9af"},{"version":"44f8b6f028241b18ff67fd37daa909ff481f38ba69739cb10b104c1c2852412c","signature":"08217183097d95ae53cd5f084594bb398d742a6244ccbd4934b99a8270974958"},{"version":"ed62d52b57a171101cac06d5ed32b8a55da2ed151a4f4d98da476610c34ed4f0","signature":"ee02d6673dd0fc003aec2d0a13c88bb053f1fa40e7a136b905ad546942f98d5b"},{"version":"5ead41e310e86e4959e71b330561e9690879beaa0ad6d14883c8e919c7d0a8f3","signature":"a5816719f0c3135d6af24e93e146084e1f4d18d2913ebb95a3ee944046d1d530"},{"version":"109d6db3490a01d553cda512b539d336fcce603a5e63e07048c9506f4f4d3e74","signature":"f6766cc7cfb98c7bb86ddc5fb6502c97aaca7f8571fe9874fc15fa4deaaebcb1"},{"version":"dacf59b95ad547fc4ec1ea4d524ed7ed22aaead71ddfa951177061171110b0c3","signature":"b9753f64aecf3de34d3e6d0d4c59ebecd6cea0838ab30fbafc968d2d139626b4"},{"version":"a86e8faf4064dbfaae34658ca224f0b22de09b58ba47d38a4d6a724321d52f70","signature":"36c556a3c9eb165b9bc100cfa5fcd99e0544a264624563015ef6e88586b397ed"},{"version":"c8cb2807700da64268a4b96d519001c4e322026c5a55a4591dafbae9c98d5135","signature":"501a29a21faf61b3355e5cd70300b5a28b5b12de60f1caa05e56cb2d42607dff"},{"version":"2cda690d3958072de8ded71cd744352b064e7a4a44cb88b300eaa64125aa00db","signature":"6d4ebb64d5f29c6322d1da333bb31951b6851a760861635acba5b3c696656f57"},{"version":"cd5655ca46cb6a930aa0d146c77f9cf087af9aa56101d9d0c9317eb5fe6eefc0","signature":"9d425b3e757d008df530d5b91d77232f6d37e513a31f9ab2f9ba71b3b27c2a37"},{"version":"d829c12ae4cd7023fa5c5e4ee784c35527f6519ea39cdf8c2af8d9a41ddcf1e9","signature":"d333469f1cde151f6f317b191e3fc0e2305c72a95dfb5527ab1d9ec53959b76d"},{"version":"32b6b48b99f21a07986a13a6fc5216fcdc8920663b27e03581f7b60ab36ffff7","signature":"770c2d42ac7f8e2941433ccb98c63e02eb6543cf3755942fed1ea3f7aea856e4"},{"version":"2279853314845a3fff42d5c463572f0cd3bbfcca371862e1082ea605b896a6de","signature":"73ed373f7c01dc5ce2098eaa9b59030caccf23f15538ba5dc1e70b0c9f43f977"},{"version":"04606ad72a5599c9f9d7fba009c296d7a56b60fb7c627a05a95a2c9d47c39ead","signature":"96b65daf6681578aa161cd622806f16430dab19c5681c12db2690836b6e99163"},{"version":"77c51095c22d16c904a8ebfa6eeff45e9ae7f8a84415cb38df99081e41db38b9","signature":"a562ae7b032f6b01526b5539666852b330c86e20918c57e426d7a95031ca7a30"},{"version":"69b5e2602c836bcd73f59b3529abc4931f1fa9cd1806f59e0bcb9903c8972dd1","signature":"0e07f96fade13c5f4f5f73423d0b0d36d2072570d8a33ea450006897d3671df2"},{"version":"b35e638b02dd107949595a6656e3f5c0b871edeb3d6f061332c610c602176105","signature":"736f562b178793c3aaf93cf534e989d14a548e0190060f4e12d86b8d0c4e0d4c"},"2e2e78ab8f2e0686b89c885f0748e0971bb737a015733bf8291638a43fe7eaf7","6b51a866d15c1e384f7dd519a7d28154e54db953027db71df7e9f4f98ea0a649","0d14fa22c41fdc7277e6f71473b20ebc07f40f00e38875142335d5b63cdfc9d2","d8aab31ba8e618cc3eea10b0945de81cb93b7e8150a013a482332263b9305322","462bccdf75fcafc1ae8c30400c9425e1a4681db5d605d1a0edb4f990a54d8094","5923d8facbac6ecf7c84739a5c701a57af94a6f6648d6229a6c768cf28f0f8cb","7adecb2c3238794c378d336a8182d4c3dd2c4fa6fa1785e2797a3db550edea62","dc12dc0e5aa06f4e1a7692149b78f89116af823b9e1f1e4eae140cd3e0e674e6","1bfc6565b90c8771615cd8cfcf9b36efc0275e5e83ac7d9181307e96eb495161","8a8a96898906f065f296665e411f51010b51372fa260d5373bf9f64356703190","7f82ef88bdb67d9a850dd1c7cd2d690f33e0f0acd208e3c9eba086f3670d4f73",{"version":"4564f780fd20582c57ae218a4cd017717181ab0e228639d905ef054288655b5e","affectsGlobalScope":true}],"options":{"declaration":true,"esModuleInterop":true,"inlineSourceMap":true,"module":99,"noFallthroughCasesInSwitch":true,"noImplicitReturns":true,"noUncheckedIndexedAccess":true,"noUnusedLocals":true,"noUnusedParameters":true,"outDir":"./","strict":true,"target":5},"fileIdsList":[[109,126,127],[109,112],[112],[126,128,130],[109,112,126,127,128,129],[109,112,129,150,151,152],[109,112,129,153],[109],[190],[109,110],[110,111],[184,185,186,187],[109,112,131,151,153,156],[193,194,195,196],[156],[109,156,176],[109,129,156],[109,156,179,180,181],[109,129,156,177],[149],[150,152,154,158,159],[150,152,159],[82,112,129,150,151,153,154],[150,159],[150,153,155],[112,151,153],[150,153,154,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170],[150,157],[82,157],[109,129,150,151,152,153,155,156],[150,152,154,157],[150,155,157],[203,204],[199,200],[109,199],[132,133,134],[109,153,156,176,177,178,182],[174,175],[173],[174],[276],[45,82],[423,428],[136,138,139,140,141,142,143,144,145,146,147,148],[136,137,139,140,141,142,143,144,145,146,147,148],[137,138,139,140,141,142,143,144,145,146,147,148],[136,137,138,140,141,142,143,144,145,146,147,148],[136,137,138,139,141,142,143,144,145,146,147,148],[136,137,138,139,140,142,143,144,145,146,147,148],[136,137,138,139,140,141,143,144,145,146,147,148],[136,137,138,139,140,141,142,144,145,146,147,148],[136,137,138,139,140,141,142,143,145,146,147,148],[136,137,138,139,140,141,142,143,144,146,147,148],[136,137,138,139,140,141,142,143,144,145,147,148],[136,137,138,139,140,141,142,143,144,145,146,148],[136,137,138,139,140,141,142,143,144,145,146,147],[80],[79,80],[34,39],[45,46,53,62],[35,45,53],[71],[39,46,54],[62,67],[42,45,53],[43],[42],[45],[45,47,62,70],[45,46,62],[53,62,70],[45,46,48,53,62,67,70],[48,62,67,70],[81],[70],[42,45,62],[55],[33],[69],[60,71,74],[45,63],[62],[65],[39,53],[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],[53],[59],[72],[34,39,45,47,56,62,70,74],[112,156],[312,313,315,316],[112,171],[314],[106,131,249],[87],[106,249,264],[106,249,264,265],[106,249,264,265,266],[106,249,264,265,267],[253,254,255,256,265,266,267,268,269,270,271,272],[106,131],[87,106,131,249],[106,131,249,254,255,264,268,269],[106,265],[85],[89,92],[89,91],[89,91,92],[87,88,89,92,93],[87,88],[93,94,95,96],[88,93],[88,92,93,94],[89,91,92,97,98,99],[90],[90,92],[89],[85,86,88,100,105],[100],[101,102,103,104],[116],[115,116,117,118,119,120,121,122],[116,118],[310],[211,310,311,319,320,321,322,323,324,325,326,327],[311,328,332],[211,310,311,328],[131,211,310,311,328],[319,320,321,322,323,324,325,327,329,331],[131,211,310,311,318,328],[106,273,310,311,318],[211,310,311,318],[330,333,334],[106,131,211,249,273,311,328,329],[211],[310,317],[259,260,261],[106],[106,259],[106,259,260],[257,258,262,263],[106,262],[216,217,218,219,220,221,222],[87,106,215,216,217],[87,106,218],[106,218],[87,106],[106,216,217],[106,218,220],[215,223,241,242,243,244,245,246,247,248],[131],[106,131,219,223,224,243],[87,106,131],[106,131,223,241],[106,131,223,224],[106,131,221,224,243,245],[106,215],[106,220],[224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240],[87,215],[216],[109,112,151,156,171,172,173,176,183,188,208,209],[210],[109,129,131,135,151,152,173,177,178,182,183,189,191,192,197,198,201,202,205,206,207],[303,304],[302],[300,301],[421,424],[421,424,425,426],[423],[420,427],[347],[422],[340,372,418],[30,83],[30,106,108,113],[30,106,108,123,124,125,373],[30,106,148,372,373],[379,380],[106,249,273,340],[106,148,273,340,376],[376,377,378],[106,273,377,379],[108,112,113,148,171],[106,112,171,278,290,295,298,340,342,372,385],[108,112,113,124,277],[30,84,113,114,285,286,290,298,306,307,373,374,375,381,382,385,386,387,388,392,393,398,399,402,404,405,406,407,408,409,410,411,412,413,414,415,416,417],[113,171,372],[112,131,278],[106,108,112,148,171,251,285,389,390,391],[106,113,382,388],[106,108,112,148,171,249,251,252,273,277,278,285,336,371,372,389,392,395,397],[106,171,210,278,295,309,335,340,372,384],[113,211],[106,273,285,372,401],[106,124,171,188,210,278,290,295,298,309,335,340,342,372,384,385,386,403],[106,112,171,278,280,281,372],[30,106,278,282,286,372],[106,112,131,135,148,214,278,285,372],[30,106,148,278,284,285,372],[106,108,124,277,299,306,307],[30,106,108,148,264,278,290],[30,106,306],[106,108,112,148,264,277,278,285,289,371,372],[106,108,112,252,264,336,371],[106,108,148,250,264,306,373],[106,278,306,372],[106,108,148,277,278,299,305],[306,406],[30,106,108,148,249,278,298,372],[30,106,307],[106,112,171,285,292,294,372],[106,108,112,148,249,251,277,278,285,297,371],[87,106,108,148,249,250,252,278,298,307,373],[106,278,307,372],[106,148,277,278,299,305,306,372],[307,406],[83,87,106,108,112,113,123,125,148,171,249,250,252,273,275,277,278,282,286,290,295,298,307,309,336,341,342,343,344,345,346,350,351,353,354,355,356,357,368,372,373,374,418],[106,369],[346],[106,112,148,249,252,273,290,298,336,345,371],[87,106,108,112,125,148,252,273,346,348,349,352,369,371,372],[106,252],[106,108,249,264,336,371],[106,108,125,148,249,252,273,290,298,307,369,372,373,418],[106,112,249,252,278,290,295,346,373],[345,351],[87,106,112,148,249,252,264,273,278,342,345,346,350,356,372,419],[106,112,148,252,264,278,290,345,346,372],[106,112,336,418],[106,108,112,148,249,252,278,295,341,342,345,346,350,419],[352,359,368,369],[106,112,148,249,264,273,336,346,352,355,361,369,372,418],[362,363,365,366,367],[106,148,273,336,352,355,359,362,363,364,369,372,418],[361],[355,359],[336,355],[358,360],[106,112,148,273,336,352,355,358,359,360,363,364,369,372,418],[106,148,273,336,352,355,358,359,360,363,364,369,372,418],[125,336,339,370],[106,250,373],[338],[106,108,112,148,173,249,252,273,285,298,336,337,370,371,372,373,418],[106,112,249,252,264,273,335,370,418],[109,131,171,211,279],[131,211],[171,211,308],[171,211,291],[171,211,293],[171,211,394],[171,211,283],[171,211,383],[171,211,400],[171,211,280],[109,131,171,211,287],[171,211,288],[109,131,171,211,212],[171,211,213],[171,211,396],[171,211,296],[171,211,390],[106,249,250],[87,106,207,249],[87,106,112,148,249,262,273,278,295,298,340,341,372,418],[108,125,250,251,252,274,371],[107],[106,148,249,264,273,335,419],[107,108],[273],[106,148,249,251,264,273,336,370,372],[30,106,113],[30,106,123,373],[30,106,373],[106,273,340],[106,273,340,376],[112,113,171],[106,171,278,290,295,298,340,385],[113],[113,171],[106,112,171,285],[106,112,171,252,277,278,285,336,392],[106,171,278,295,340,372],[106,273,285],[106,171,278,290,295,298,340,385,386],[106,112,171,278],[30,106,278,282,286],[106,278,285],[30,106,278,285],[106,306,307],[30,106,264,278,290],[106,264,277,278,285],[112,252,336],[106,306],[106,278,306],[106,278],[30,106,249,278,298],[106,249,277,278,285],[106,278,298,307],[106,278,307],[106,113,171,249,252,273,286,290,295,298,307,336,345,368,373,374,418],[106,112,252,273,290,298,336,345],[106,112,252,346,352,369],[106,249,264,336],[106,273,290,298,307,369,373,418],[106,112,249,252,278,290,295,346],[345,346],[112,345,346],[106,112,336],[106,112,249,264,273,336,346,352,355,361,369,372,418],[106,336,352,355,359,362,363,369,372,418],[106,112,336,352,355,358,359,360,363,369,372,418],[106,336,352,355,358,359,360,363,369,372,418],[106,373],[106,252,285,298,336,373,418],[106,249],[106,112,249,262,278,295,298,340,418],[106,273,419],[249,264,336,370]],"referencedMap":[[128,1],[127,2],[126,3],[131,4],[130,5],[153,6],[156,7],[189,2],[190,8],[191,9],[192,8],[110,8],[111,10],[112,11],[185,3],[188,12],[172,13],[197,14],[195,8],[196,15],[177,16],[179,17],[182,18],[181,19],[198,8],[150,20],[160,21],[161,22],[155,23],[162,24],[163,25],[164,25],[154,26],[171,27],[166,21],[165,28],[167,29],[157,30],[168,24],[169,22],[159,31],[170,28],[158,32],[205,33],[206,8],[201,34],[200,35],[178,8],[132,8],[135,36],[134,8],[151,2],[207,3],[183,37],[176,38],[174,39],[175,40],[277,41],[107,42],[429,43],[137,44],[138,45],[136,46],[139,47],[140,48],[141,49],[142,50],[143,51],[144,52],[145,53],[146,54],[147,55],[148,56],[31,57],[81,58],[34,59],[35,60],[36,61],[37,62],[38,63],[39,64],[40,65],[42,66],[43,67],[44,68],[45,68],[46,69],[47,70],[48,71],[49,72],[50,73],[82,74],[51,68],[52,75],[53,76],[55,77],[56,78],[57,79],[60,68],[61,80],[62,81],[63,82],[65,68],[66,83],[67,84],[79,85],[69,86],[70,87],[71,88],[73,82],[75,89],[76,82],[312,90],[316,3],[317,91],[314,92],[315,93],[313,90],[254,94],[253,95],[265,96],[269,97],[267,98],[268,99],[273,100],[255,101],[256,102],[270,103],[271,104],[272,97],[86,105],[88,95],[90,106],[92,107],[98,108],[94,109],[93,110],[97,111],[95,112],[96,113],[100,114],[91,115],[89,116],[99,117],[106,118],[101,119],[105,120],[103,95],[119,121],[118,121],[123,122],[117,121],[120,123],[121,123],[122,121],[311,124],[328,125],[333,126],[324,127],[326,128],[320,128],[332,129],[327,128],[322,128],[321,128],[319,130],[323,128],[329,131],[331,132],[325,128],[335,133],[330,134],[334,135],[318,136],[257,95],[262,137],[259,138],[260,139],[261,140],[264,141],[263,142],[223,143],[218,144],[219,145],[220,146],[216,147],[217,138],[222,148],[221,149],[249,150],[242,151],[244,152],[245,153],[246,154],[243,101],[247,155],[248,156],[224,138],[225,157],[226,158],[227,147],[228,95],[241,159],[230,95],[231,147],[232,95],[234,95],[235,138],[236,95],[237,160],[238,95],[239,161],[240,95],[210,162],[211,163],[208,164],[305,165],[303,166],[302,167],[425,168],[427,169],[426,168],[424,170],[428,171],[348,172],[83,42],[423,173],[419,174],[84,175],[114,176],[374,177],[375,178],[381,179],[376,180],[377,181],[379,182],[380,183],[382,184],[386,185],[387,186],[113,3],[418,187],[388,188],[285,189],[392,190],[393,191],[398,192],[278,3],[385,193],[399,194],[402,195],[404,196],[282,197],[405,198],[373,199],[286,200],[406,201],[407,202],[408,203],[290,204],[409,205],[410,206],[411,207],[306,208],[412,209],[413,210],[414,211],[295,212],[298,213],[415,214],[416,215],[307,216],[417,217],[369,218],[344,219],[359,220],[346,221],[353,222],[354,223],[364,224],[355,225],[345,226],[352,227],[357,228],[356,229],[350,230],[351,231],[370,232],[363,233],[368,234],[367,235],[362,236],[360,237],[358,238],[361,239],[365,240],[366,241],[340,242],[337,243],[339,244],[338,245],[336,246],[308,247],[291,247],[293,247],[394,247],[283,247],[383,247],[400,247],[280,247],[279,248],[309,249],[292,250],[294,251],[395,252],[284,253],[384,254],[401,255],[281,256],[288,257],[287,248],[289,258],[213,259],[396,259],[296,259],[390,259],[212,248],[214,260],[397,261],[297,262],[391,263],[251,264],[252,265],[250,138],[342,266],[372,267],[108,268],[341,269],[125,270],[274,271],[371,272]],"exportedModulesMap":[[128,1],[127,2],[126,3],[131,4],[130,5],[153,6],[156,7],[189,2],[190,8],[191,9],[192,8],[110,8],[111,10],[112,11],[185,3],[188,12],[172,13],[197,14],[195,8],[196,15],[177,16],[179,17],[182,18],[181,19],[198,8],[150,20],[160,21],[161,22],[155,23],[162,24],[163,25],[164,25],[154,26],[171,27],[166,21],[165,28],[167,29],[157,30],[168,24],[169,22],[159,31],[170,28],[158,32],[205,33],[206,8],[201,34],[200,35],[178,8],[132,8],[135,36],[134,8],[151,2],[207,3],[183,37],[176,38],[174,39],[175,40],[277,41],[107,42],[429,43],[137,44],[138,45],[136,46],[139,47],[140,48],[141,49],[142,50],[143,51],[144,52],[145,53],[146,54],[147,55],[148,56],[31,57],[81,58],[34,59],[35,60],[36,61],[37,62],[38,63],[39,64],[40,65],[42,66],[43,67],[44,68],[45,68],[46,69],[47,70],[48,71],[49,72],[50,73],[82,74],[51,68],[52,75],[53,76],[55,77],[56,78],[57,79],[60,68],[61,80],[62,81],[63,82],[65,68],[66,83],[67,84],[79,85],[69,86],[70,87],[71,88],[73,82],[75,89],[76,82],[312,90],[316,3],[317,91],[314,92],[315,93],[313,90],[254,94],[253,95],[265,96],[269,97],[267,98],[268,99],[273,100],[255,101],[256,102],[270,103],[271,104],[272,97],[86,105],[88,95],[90,106],[92,107],[98,108],[94,109],[93,110],[97,111],[95,112],[96,113],[100,114],[91,115],[89,116],[99,117],[106,118],[101,119],[105,120],[103,95],[119,121],[118,121],[123,122],[117,121],[120,123],[121,123],[122,121],[311,124],[328,125],[333,126],[324,127],[326,128],[320,128],[332,129],[327,128],[322,128],[321,128],[319,130],[323,128],[329,131],[331,132],[325,128],[335,133],[330,134],[334,135],[318,136],[257,95],[262,137],[259,138],[260,139],[261,140],[264,141],[263,142],[223,143],[218,144],[219,145],[220,146],[216,147],[217,138],[222,148],[221,149],[249,150],[242,151],[244,152],[245,153],[246,154],[243,101],[247,155],[248,156],[224,138],[225,157],[226,158],[227,147],[228,95],[241,159],[230,95],[231,147],[232,95],[234,95],[235,138],[236,95],[237,160],[238,95],[239,161],[240,95],[210,162],[211,163],[208,164],[305,165],[303,166],[302,167],[425,168],[427,169],[426,168],[424,170],[428,171],[348,172],[83,42],[423,173],[419,174],[84,175],[114,273],[374,274],[375,275],[381,179],[376,276],[377,277],[379,182],[380,183],[382,278],[386,279],[387,280],[113,3],[418,187],[388,281],[285,189],[392,282],[393,191],[398,283],[278,3],[385,284],[399,194],[402,285],[404,286],[282,287],[405,288],[373,289],[286,290],[406,291],[407,292],[408,203],[290,293],[409,294],[410,295],[411,296],[306,297],[412,209],[413,298],[414,211],[295,282],[298,299],[415,300],[416,301],[307,296],[417,217],[369,302],[344,219],[359,220],[346,303],[353,304],[354,223],[364,305],[355,306],[345,307],[352,227],[357,308],[356,309],[350,310],[351,308],[370,232],[363,311],[368,234],[367,312],[362,236],[360,237],[358,238],[361,239],[365,313],[366,314],[340,242],[337,315],[339,244],[338,316],[336,246],[308,247],[291,247],[293,247],[394,247],[283,247],[383,247],[400,247],[280,247],[279,248],[309,249],[292,250],[294,251],[395,252],[284,253],[384,254],[401,255],[281,256],[288,257],[287,248],[289,258],[213,259],[396,259],[296,259],[390,259],[212,248],[214,260],[397,261],[297,262],[391,263],[251,138],[252,317],[250,138],[342,318],[372,267],[108,268],[341,319],[274,271],[371,320]],"semanticDiagnosticsPerFile":[128,127,126,131,130,153,156,189,190,191,192,110,111,112,109,184,185,186,188,187,172,193,197,195,194,196,177,179,182,180,181,198,173,150,149,129,160,161,155,162,163,164,154,171,166,165,167,157,168,169,159,170,158,205,203,204,206,201,200,199,178,202,132,133,135,134,151,207,183,152,176,174,175,277,299,107,429,137,138,136,139,140,141,142,143,144,145,146,147,148,80,31,33,81,34,35,36,37,38,39,40,41,42,43,44,45,46,47,32,77,48,49,50,82,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,79,69,70,71,72,73,74,78,75,76,276,389,275,312,316,317,314,315,313,254,253,265,269,266,267,268,273,255,256,270,271,272,86,85,88,90,92,98,94,93,97,95,96,100,91,89,99,106,101,105,102,103,104,119,118,123,117,120,121,115,116,122,311,328,333,324,326,320,332,327,322,321,319,323,329,331,325,335,330,334,318,310,257,262,259,260,261,258,264,263,215,223,218,219,220,216,217,222,221,249,242,244,245,246,243,247,248,224,225,226,227,228,241,229,230,231,232,233,234,235,236,237,238,239,240,124,420,209,210,211,208,305,303,304,302,300,301,421,425,427,426,424,428,87,348,349,347,83,423,422,6,8,7,2,9,10,11,12,13,14,15,16,3,4,20,17,18,19,21,22,23,5,24,25,26,27,28,1,29,419,84,30,114,374,375,381,378,376,377,379,380,382,386,387,113,418,388,285,392,393,398,278,385,399,402,404,282,405,373,286,406,407,408,290,409,410,411,306,412,413,414,295,298,415,416,307,417,369,344,359,346,353,354,364,355,345,352,357,356,350,351,370,363,368,367,362,360,358,361,365,366,340,337,339,338,336,308,291,293,394,283,383,400,280,279,309,292,294,395,284,384,401,281,288,287,289,213,396,296,390,212,214,397,297,391,251,252,403,250,342,372,108,341,125,274,371,343]},"version":"4.7.2"}
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.d.ts b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.d.ts
new file mode 100644
index 0000000..a086b87
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.d.ts
@@ -0,0 +1,43 @@
+import { Provider } from "@ethersproject/providers";
+import { Signer } from "ethers";
+import type { TokenFeeDetector, TokenFeeDetectorInterface } from "../TokenFeeDetector";
+export declare class TokenFeeDetector__factory {
+    static readonly abi: ({
+        inputs: {
+            internalType: string;
+            name: string;
+            type: string;
+        }[];
+        stateMutability: string;
+        type: string;
+        name?: undefined;
+        outputs?: undefined;
+    } | {
+        inputs: never[];
+        name: string;
+        type: string;
+        stateMutability?: undefined;
+        outputs?: undefined;
+    } | {
+        inputs: {
+            internalType: string;
+            name: string;
+            type: string;
+        }[];
+        name: string;
+        outputs: {
+            components: {
+                internalType: string;
+                name: string;
+                type: string;
+            }[];
+            internalType: string;
+            name: string;
+            type: string;
+        }[];
+        stateMutability: string;
+        type: string;
+    })[];
+    static createInterface(): TokenFeeDetectorInterface;
+    static connect(address: string, signerOrProvider: Signer | Provider): TokenFeeDetector;
+}
diff --git a/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.js b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.js
new file mode 100644
index 0000000..d817823
--- /dev/null
+++ b/node_modules/@uniswap/smart-order-router/build/module/types/other/factories/TokenFeeDetector__factory.js
@@ -0,0 +1,147 @@
+/* Autogenerated file. Do not edit manually. */
+/* tslint:disable */
+/* eslint-disable */
+import { Contract, utils } from "ethers";
+const _abi = [
+    {
+        inputs: [
+            {
+                internalType: "address",
+                name: "_factoryV2",
+                type: "address",
+            },
+        ],
+        stateMutability: "nonpayable",
+        type: "constructor",
+    },
+    {
+        inputs: [],
+        name: "PairLookupFailed",
+        type: "error",
+    },
+    {
+        inputs: [],
+        name: "SameToken",
+        type: "error",
+    },
+    {
+        inputs: [
+            {
+                internalType: "address[]",
+                name: "tokens",
+                type: "address[]",
+            },
+            {
+                internalType: "address",
+                name: "baseToken",
+                type: "address",
+            },
+            {
+                internalType: "uint256",
+                name: "amountToBorrow",
+                type: "uint256",
+            },
+        ],
+        name: "batchValidate",
+        outputs: [
+            {
+                components: [
+                    {
+                        internalType: "uint256",
+                        name: "buyFeeBps",
+                        type: "uint256",
+                    },
+                    {
+                        internalType: "uint256",
+                        name: "sellFeeBps",
+                        type: "uint256",
+                    },
+                ],
+                internalType: "struct TokenFees[]",
+                name: "fotResults",
+                type: "tuple[]",
+            },
+        ],
+        stateMutability: "nonpayable",
+        type: "function",
+    },
+    {
+        inputs: [
+            {
+                internalType: "address",
+                name: "",
+                type: "address",
+            },
+            {
+                internalType: "uint256",
+                name: "amount0",
+                type: "uint256",
+            },
+            {
+                internalType: "uint256",
+                name: "",
+                type: "uint256",
+            },
+            {
+                internalType: "bytes",
+                name: "data",
+                type: "bytes",
+            },
+        ],
+        name: "uniswapV2Call",
+        outputs: [],
+        stateMutability: "nonpayable",
+        type: "function",
+    },
+    {
+        inputs: [
+            {
+                internalType: "address",
+                name: "token",
+                type: "address",
+            },
+            {
+                internalType: "address",
+                name: "baseToken",
+                type: "address",
+            },
+            {
+                internalType: "uint256",
+                name: "amountToBorrow",
+                type: "uint256",
+            },
+        ],
+        name: "validate",
+        outputs: [
+            {
+                components: [
+                    {
+                        internalType: "uint256",
+                        name: "buyFeeBps",
+                        type: "uint256",
+                    },
+                    {
+                        internalType: "uint256",
+                        name: "sellFeeBps",
+                        type: "uint256",
+                    },
+                ],
+                internalType: "struct TokenFees",
+                name: "fotResult",
+                type: "tuple",
+            },
+        ],
+        stateMutability: "nonpayable",
+        type: "function",
+    },
+];
+export class TokenFeeDetector__factory {
+    static createInterface() {
+        return new utils.Interface(_abi);
+    }
+    static connect(address, signerOrProvider) {
+        return new Contract(address, _abi, signerOrProvider);
+    }
+}
+TokenFeeDetector__factory.abi = _abi;
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVG9rZW5GZWVEZXRlY3Rvcl9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy9vdGhlci9mYWN0b3JpZXMvVG9rZW5GZWVEZXRlY3Rvcl9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUdwQixPQUFPLEVBQUUsUUFBUSxFQUFVLEtBQUssRUFBRSxNQUFNLFFBQVEsQ0FBQztBQU1qRCxNQUFNLElBQUksR0FBRztJQUNYO1FBQ0UsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxZQUFZO2dCQUNsQixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsZUFBZSxFQUFFLFlBQVk7UUFDN0IsSUFBSSxFQUFFLGFBQWE7S0FDcEI7SUFDRDtRQUNFLE1BQU0sRUFBRSxFQUFFO1FBQ1YsSUFBSSxFQUFFLGtCQUFrQjtRQUN4QixJQUFJLEVBQUUsT0FBTztLQUNkO0lBQ0Q7UUFDRSxNQUFNLEVBQUUsRUFBRTtRQUNWLElBQUksRUFBRSxXQUFXO1FBQ2pCLElBQUksRUFBRSxPQUFPO0tBQ2Q7SUFDRDtRQUNFLE1BQU0sRUFBRTtZQUNOO2dCQUNFLFlBQVksRUFBRSxXQUFXO2dCQUN6QixJQUFJLEVBQUUsUUFBUTtnQkFDZCxJQUFJLEVBQUUsV0FBVzthQUNsQjtZQUNEO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsV0FBVztnQkFDakIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLGdCQUFnQjtnQkFDdEIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxlQUFlO1FBQ3JCLE9BQU8sRUFBRTtZQUNQO2dCQUNFLFVBQVUsRUFBRTtvQkFDVjt3QkFDRSxZ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
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/addresses.js b/node_modules/@uniswap/smart-order-router/build/module/util/addresses.js
index 2a85de3..94a87c7 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/addresses.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/addresses.js
@@ -17,6 +17,7 @@ export const V3_CORE_FACTORY_ADDRESSES = {
     [ChainId.AVALANCHE]: CHAIN_TO_ADDRESSES_MAP[ChainId.AVALANCHE].v3CoreFactoryAddress,
     [ChainId.BASE_GOERLI]: CHAIN_TO_ADDRESSES_MAP[ChainId.BASE_GOERLI].v3CoreFactoryAddress,
     [ChainId.BASE]: CHAIN_TO_ADDRESSES_MAP[ChainId.BASE].v3CoreFactoryAddress,
+    [ChainId.TENET]: CHAIN_TO_ADDRESSES_MAP[ChainId.TENET].v3CoreFactoryAddress,
     // TODO: Gnosis + Moonbeam contracts to be deployed
 };
 export const QUOTER_V2_ADDRESSES = {
@@ -30,6 +31,7 @@ export const QUOTER_V2_ADDRESSES = {
     [ChainId.AVALANCHE]: CHAIN_TO_ADDRESSES_MAP[ChainId.AVALANCHE].quoterAddress,
     [ChainId.BASE_GOERLI]: CHAIN_TO_ADDRESSES_MAP[ChainId.BASE_GOERLI].quoterAddress,
     [ChainId.BASE]: CHAIN_TO_ADDRESSES_MAP[ChainId.BASE].quoterAddress,
+    [ChainId.TENET]: CHAIN_TO_ADDRESSES_MAP[ChainId.TENET].quoterAddress,
     // TODO: Gnosis + Moonbeam contracts to be deployed
 };
 export const MIXED_ROUTE_QUOTER_V1_ADDRESSES = {
@@ -47,6 +49,7 @@ export const UNISWAP_MULTICALL_ADDRESSES = {
     [ChainId.AVALANCHE]: CHAIN_TO_ADDRESSES_MAP[ChainId.AVALANCHE].multicallAddress,
     [ChainId.BASE_GOERLI]: CHAIN_TO_ADDRESSES_MAP[ChainId.BASE_GOERLI].multicallAddress,
     [ChainId.BASE]: CHAIN_TO_ADDRESSES_MAP[ChainId.BASE].multicallAddress,
+    [ChainId.TENET]: CHAIN_TO_ADDRESSES_MAP[ChainId.TENET].multicallAddress
     // TODO: Gnosis + Moonbeam contracts to be deployed
 };
 export const SWAP_ROUTER_02_ADDRESSES = (chainId) => {
@@ -76,6 +79,7 @@ export const WETH9 = {
     [ChainId.ARBITRUM_ONE]: new Token(ChainId.ARBITRUM_ONE, '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.ARBITRUM_GOERLI]: new Token(ChainId.ARBITRUM_GOERLI, '0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3', 18, 'WETH', 'Wrapped Ether'),
     [ChainId.BASE_GOERLI]: new Token(ChainId.BASE_GOERLI, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
-    [ChainId.BASE]: new Token(ChainId.BASE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether')
+    [ChainId.TENET]: new Token(ChainId.TENET, '0xD3F053dd508B4B328A1690C34F36F819CC917d9f', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.BASE]: new Token(ChainId.BASE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
 };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkcmVzc2VzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvYWRkcmVzc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDM0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRWxELE9BQU8sRUFBRSxvQ0FBb0MsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUVoRSxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsZUFBZSxDQUFDO0FBQ3pGLE1BQU0sQ0FBQyxNQUFNLHdDQUF3QyxHQUFHLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxpQ0FBaUMsQ0FBQztBQUM5SCxvRUFBb0U7QUFDcEUsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBQUcsc0JBQXNCLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLG1CQUFvQixDQUFDO0FBQ25HLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQztBQUU3RixNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBZTtJQUNuRCxHQUFHLHVCQUF1QixDQUFDLGVBQWUsQ0FBQztJQUMzQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsb0JBQW9CO0lBQ3pFLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxvQkFBb0I7SUFDN0YsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsc0JBQXNCLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FB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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkcmVzc2VzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvYWRkcmVzc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDM0UsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRWxELE9BQU8sRUFBRSxvQ0FBb0MsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUVoRSxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRyxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsZUFBZSxDQUFDO0FBQ3pGLE1BQU0sQ0FBQyxNQUFNLHdDQUF3QyxHQUFHLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxpQ0FBaUMsQ0FBQztBQUM5SCxvRUFBb0U7QUFDcEUsTUFBTSxDQUFDLE1BQU0sMEJBQTBCLEdBQUcsc0JBQXNCLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLG1CQUFvQixDQUFDO0FBQ25HLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFHLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxpQkFBaUIsQ0FBQztBQUU3RixNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBZTtJQUNuRCxHQUFHLHVCQUF1QixDQUFDLGVBQWUsQ0FBQztJQUMzQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsb0JBQW9CO0lBQ3pFLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxvQkFBb0I7SUFDN0YsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsc0JBQXNCLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDLG9CQUFvQjtJQUMvRixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsb0JBQW9CO0lBQy9FLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxvQkFBb0I7SUFDL0YsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsc0JBQXNCLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLG9CQUFvQjtJQUN2RSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsb0JBQW9CO0lBQ25GLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxFQUFFLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxvQkFBb0I7SUFDdkYsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsc0JBQXNCLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLG9CQUFvQjtJQUN6RSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsb0JBQW9CO0lBQzNFLG1EQUFtRDtDQUNwRCxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQWU7SUFDN0MsR0FBRyx1QkFBdUIsQ0FBQyw0Q0FBNEMsQ0FBQztJQUN4RSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsYUFBYTtJQUNsRSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsYUFBYTtJQUN0RixDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsYUFBYTtJQUN4RixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsYUFBYTtJQUN4RSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUMsYUFBYTtJQUN4RixDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsYUFBYTtJQUNoRSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsYUFBYTtJQUM1RSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUMsYUFBYTtJQUNoRixDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsYUFBYTtJQUNsRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsYUFBYTtJQUNwRSxtREFBbUQ7Q0FDcEQsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLCtCQUErQixHQUFlO0lBQ3pELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyx5QkFBeUI7SUFDcEYsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsc0JBQXNCLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLHlCQUF5QjtDQUNuRixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sMkJBQTJCLEdBQWU7SUFDckQsR0FBRyx1QkFBdUIsQ0FBQyw0Q0FBNEMsQ0FBQztJQUN4RSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsZ0JBQWdCO0lBQ3JFLENBQUMsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUFFLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxnQkFBZ0I7SUFDekYsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsc0JBQXNCLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDLGdCQUFnQjtJQUMzRixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsZ0JBQWdCO0lBQzNFLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQyxnQkFBZ0I7SUFDM0YsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUUsc0JBQXNCLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLGdCQUFnQjtJQUNuRSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUMsZ0JBQWdCO0lBQy9FLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxFQUFFLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxnQkFBZ0I7SUFDbkYsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsc0JBQXNCLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLGdCQUFnQjtJQUNyRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsZ0JBQWdCO0lBQ3ZFLG1EQUFtRDtDQUNwRCxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsQ0FBQyxPQUFlLEVBQVUsRUFBRTtJQUNsRSxJQUFJLE9BQU8sSUFBSSxPQUFPLENBQUMsR0FBRyxFQUFFO1FBQzFCLE9BQU8sMEJBQTBCLENBQUM7S0FDbkM7SUFDRCxPQUFPLDRDQUE0QyxDQUFDO0FBQ3RELENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUMvQiw0Q0FBNEMsQ0FBQztBQUMvQyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyw0Q0FBNEMsQ0FBQztBQUNoRixNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsZUFBZSxDQUFDO0FBQzlGLE1BQU0sQ0FBQyxNQUFNLG9DQUFvQyxHQUFHLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxpQ0FBaUMsQ0FBQztBQUM5SCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxzQkFBc0IsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsaUJBQWlCLENBQUM7QUFDN0YsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsNENBQTRDLENBQUM7QUFJL0UsTUFBTSxVQUFVLHVCQUF1QixDQUNyQyxPQUFVLEVBQ1YscUJBQWdDLEVBQUU7SUFFbEMsT0FBTyxvQ0FBb0MsQ0FBQyxNQUFNLENBQ2hELGtCQUFrQixDQUNuQixDQUFDLE1BQU0sQ0FFTCxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsRUFBRTtRQUNuQixJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ1QsQ0FBQztBQUVELE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FZZDtJQUNGLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksS0FBSyxDQUMxQixPQUFPLENBQUMsT0FBTyxFQUNmLDRDQUE0QyxFQUM1QyxFQUFFLEVBQ0YsTUFBTSxFQUNOLGVBQWUsQ0FDaEI7SUFDRCxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLEtBQUssQ0FDekIsT0FBTyxDQUFDLE1BQU0sRUFDZCw0Q0FBNEMsRUFDNUMsRUFBRSxFQUNGLE1BQU0sRUFDTixlQUFlLENBQ2hCO0lBQ0QsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxLQUFLLENBQzFCLE9BQU8sQ0FBQyxPQUFPLEVBQ2YsNENBQTRDLEVBQzVDLEVBQUUsRUFDRixNQUFNLEVBQ04sZUFBZSxDQUNoQjtJQUNELENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLElBQUksS0FBSyxDQUMzQixPQUFPLENBQUMsUUFBUSxFQUNoQiw0Q0FBNEMsRUFDNUMsRUFBRSxFQUNGLE1BQU0sRUFDTixlQUFlLENBQ2hCO0lBQ0QsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLEVBQUUsSUFBSSxLQUFLLENBQ2xDLE9BQU8sQ0FBQyxlQUFlLEVBQ3ZCLDRDQUE0QyxFQUM1QyxFQUFFLEVBQ0YsTUFBTSxFQUNOLGVBQWUsQ0FDaEI7SUFDRCxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxJQUFJLEtBQUssQ0FDL0IsT0FBTyxDQUFDLFlBQVksRUFDcEIsNENBQTRDLEVBQzVDLEVBQUUsRUFDRixNQUFNLEVBQ04sZUFBZSxDQUNoQjtJQUNELENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxFQUFFLElBQUksS0FBSyxDQUNsQyxPQUFPLENBQUMsZUFBZSxFQUN2Qiw0Q0FBNEMsRUFDNUMsRUFBRSxFQUNGLE1BQU0sRUFDTixlQUFlLENBQ2hCO0lBQ0QsQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEVBQUUsSUFBSSxLQUFLLENBQzlCLE9BQU8sQ0FBQyxXQUFXLEVBQ25CLDRDQUE0QyxFQUM1QyxFQUFFLEVBQ0YsTUFBTSxFQUNOLGVBQWUsQ0FDaEI7SUFDRCxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxJQUFJLEtBQUssQ0FDeEIsT0FBTyxDQUFDLEtBQUssRUFDYiw0Q0FBNEMsRUFDNUMsRUFBRSxFQUNGLE1BQU0sRUFDTixlQUFlLENBQ2hCO0lBQ0QsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSSxLQUFLLENBQ3ZCLE9BQU8sQ0FBQyxJQUFJLEVBQ1osNENBQTRDLEVBQzVDLEVBQUUsRUFDRixNQUFNLEVBQ04sZUFBZSxDQUNoQjtDQUNGLENBQUMifQ==
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/chains.d.ts b/node_modules/@uniswap/smart-order-router/build/module/util/chains.d.ts
index 60b2271..e6042a4 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/chains.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/chains.d.ts
@@ -21,7 +21,8 @@ export declare enum ChainName {
     BNB = "bnb-mainnet",
     AVALANCHE = "avalanche-mainnet",
     BASE = "base-mainnet",
-    BASE_GOERLI = "base-goerli"
+    BASE_GOERLI = "base-goerli",
+    TENET = "tenet"
 }
 export declare enum NativeCurrencyName {
     ETHER = "ETH",
@@ -30,7 +31,8 @@ export declare enum NativeCurrencyName {
     GNOSIS = "XDAI",
     MOONBEAM = "GLMR",
     BNB = "BNB",
-    AVALANCHE = "AVAX"
+    AVALANCHE = "AVAX",
+    TENET = "TNT"
 }
 export declare const NATIVE_NAMES_BY_ID: {
     [chainId: number]: string[];
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/chains.js b/node_modules/@uniswap/smart-order-router/build/module/util/chains.js
index 78fd5d1..a741c49 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/chains.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/chains.js
@@ -15,6 +15,7 @@ export const SUPPORTED_CHAINS = [
     ChainId.BNB,
     ChainId.AVALANCHE,
     ChainId.BASE,
+    ChainId.TENET,
     // Gnosis and Moonbeam don't yet have contracts deployed yet
 ];
 export const V2_SUPPORTED = [
@@ -74,6 +75,8 @@ export const ID_TO_CHAIN_ID = (id) => {
             return ChainId.BASE;
         case 84531:
             return ChainId.BASE_GOERLI;
+        case 1024:
+            return ChainId.TENET;
         default:
             throw new Error(`Unknown chain id: ${id}`);
     }
@@ -97,6 +100,7 @@ export var ChainName;
     ChainName["AVALANCHE"] = "avalanche-mainnet";
     ChainName["BASE"] = "base-mainnet";
     ChainName["BASE_GOERLI"] = "base-goerli";
+    ChainName["TENET"] = "tenet";
 })(ChainName || (ChainName = {}));
 export var NativeCurrencyName;
 (function (NativeCurrencyName) {
@@ -108,6 +112,7 @@ export var NativeCurrencyName;
     NativeCurrencyName["MOONBEAM"] = "GLMR";
     NativeCurrencyName["BNB"] = "BNB";
     NativeCurrencyName["AVALANCHE"] = "AVAX";
+    NativeCurrencyName["TENET"] = "TNT";
 })(NativeCurrencyName || (NativeCurrencyName = {}));
 export const NATIVE_NAMES_BY_ID = {
     [ChainId.MAINNET]: [
@@ -170,7 +175,8 @@ export const NATIVE_NAMES_BY_ID = {
         'ETH',
         'ETHER',
         '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',
-    ]
+    ],
+    [ChainId.TENET]: ['TENET']
 };
 export const NATIVE_CURRENCY = {
     [ChainId.MAINNET]: NativeCurrencyName.ETHER,
@@ -189,6 +195,7 @@ export const NATIVE_CURRENCY = {
     [ChainId.BNB]: NativeCurrencyName.BNB,
     [ChainId.AVALANCHE]: NativeCurrencyName.AVALANCHE,
     [ChainId.BASE]: NativeCurrencyName.ETHER,
+    [ChainId.TENET]: NativeCurrencyName.TENET,
 };
 export const ID_TO_NETWORK_NAME = (id) => {
     switch (id) {
@@ -226,6 +233,8 @@ export const ID_TO_NETWORK_NAME = (id) => {
             return ChainName.BASE;
         case 84531:
             return ChainName.BASE_GOERLI;
+        case 1024:
+            return ChainName.TENET;
         default:
             throw new Error(`Unknown chain id: ${id}`);
     }
@@ -261,6 +270,8 @@ export const ID_TO_PROVIDER = (id) => {
             return process.env.JSON_RPC_PROVIDER_AVALANCHE;
         case ChainId.BASE:
             return process.env.JSON_RPC_PROVIDER_BASE;
+        case ChainId.TENET:
+            return process.env.JSON_RPC_PROVIDER_TENET;
         default:
             throw new Error(`Chain id: ${id} not supported`);
     }
@@ -283,7 +294,8 @@ export const WRAPPED_NATIVE_CURRENCY = {
     [ChainId.MOONBEAM]: new Token(ChainId.MOONBEAM, '0xAcc15dC74880C9944775448304B263D191c6077F', 18, 'WGLMR', 'Wrapped GLMR'),
     [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7', 18, 'WAVAX', 'Wrapped AVAX'),
     [ChainId.BASE]: new Token(ChainId.BASE, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
-    [ChainId.BASE_GOERLI]: new Token(ChainId.BASE_GOERLI, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether')
+    [ChainId.BASE_GOERLI]: new Token(ChainId.BASE_GOERLI, '0x4200000000000000000000000000000000000006', 18, 'WETH', 'Wrapped Ether'),
+    [ChainId.TENET]: new Token(ChainId.TENET, '0x2248B3B667Dc3e665619b41197A0BA61116D4511', 18, 'WETH', 'Wrapped Ether')
 };
 function isMatic(chainId) {
     return chainId === ChainId.POLYGON_MUMBAI || chainId === ChainId.POLYGON;
@@ -329,6 +341,28 @@ class CeloNativeCurrency extends NativeCurrency {
         super(chainId, 18, 'CELO', 'Celo');
     }
 }
+class TenetNativeCurrency extends NativeCurrency {
+    equals(other) {
+        return other.isNative && other.chainId === this.chainId;
+    }
+    get wrapped() {
+        if (!isTenet(this.chainId))
+            throw new Error('Not tenet');
+        const nativeCurrency = WRAPPED_NATIVE_CURRENCY[this.chainId];
+        if (nativeCurrency) {
+            return nativeCurrency;
+        }
+        throw new Error(`Does not support this chain ${this.chainId}`);
+    }
+    constructor(chainId) {
+        if (!isTenet(chainId))
+            throw new Error('Not tenet');
+        super(chainId, 18, 'TENET', 'TNT');
+    }
+}
+function isTenet(chainId) {
+    return chainId === ChainId.TENET;
+}
 function isGnosis(chainId) {
     return chainId === ChainId.GNOSIS;
 }
@@ -453,9 +487,12 @@ export function nativeOnChain(chainId) {
     else if (isAvax(chainId)) {
         cachedNativeCurrency[chainId] = new AvalancheNativeCurrency(chainId);
     }
+    else if (isTenet(chainId)) {
+        cachedNativeCurrency[chainId] = new TenetNativeCurrency(chainId);
+    }
     else {
         cachedNativeCurrency[chainId] = ExtendedEther.onChain(chainId);
     }
     return cachedNativeCurrency[chainId];
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.d.ts b/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.d.ts
index 1719fc8..8ae0ad9 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.d.ts
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.d.ts
@@ -7,7 +7,7 @@ import { ProviderConfig } from '../providers/provider';
 import { ArbitrumGasData, OptimismGasData } from '../providers/v3/gas-data-provider';
 import { IV3PoolProvider } from '../providers/v3/pool-provider';
 import { SwapRoute } from '../routers';
-export declare function getV2NativePool(token: Token, poolProvider: IV2PoolProvider): Promise<Pair | null>;
+export declare function getV2NativePool(token: Token, poolProvider: IV2PoolProvider, providerConfig?: ProviderConfig): Promise<Pair | null>;
 export declare function getHighestLiquidityV3NativePool(token: Token, poolProvider: IV3PoolProvider, providerConfig?: ProviderConfig): Promise<Pool | null>;
 export declare function getHighestLiquidityV3USDPool(chainId: ChainId, poolProvider: IV3PoolProvider, providerConfig?: ProviderConfig): Promise<Pool>;
 export declare function getGasCostInUSD(usdPool: Pool, costNativeCurrency: CurrencyAmount<Token>): CurrencyAmount<Token>;
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.js b/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.js
index ac04960..955efae 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/gas-factory-helpers.js
@@ -1,15 +1,16 @@
 import { BigNumber } from '@ethersproject/bignumber';
 import { Protocol } from '@uniswap/router-sdk';
-import { ChainId, CurrencyAmount, Token, TradeType } from '@uniswap/sdk-core';
+import { ChainId, CurrencyAmount, Token, TradeType, } from '@uniswap/sdk-core';
 import { FeeAmount } from '@uniswap/v3-sdk';
+import JSBI from 'jsbi';
 import _ from 'lodash';
 import { MixedRouteWithValidQuote, usdGasTokensByChain, V2RouteWithValidQuote, V3RouteWithValidQuote, } from '../routers';
 import { log, WRAPPED_NATIVE_CURRENCY } from '../util';
 import { buildTrade } from './methodParameters';
-export async function getV2NativePool(token, poolProvider) {
+export async function getV2NativePool(token, poolProvider, providerConfig) {
     const chainId = token.chainId;
     const weth = WRAPPED_NATIVE_CURRENCY[chainId];
-    const poolAccessor = await poolProvider.getPools([[weth, token]]);
+    const poolAccessor = await poolProvider.getPools([[weth, token]], providerConfig);
     const pool = poolAccessor.getPool(weth, token);
     if (!pool || pool.reserve0.equalTo(0) || pool.reserve1.equalTo(0)) {
         log.error({
@@ -50,7 +51,9 @@ export async function getHighestLiquidityV3NativePool(token, poolProvider, provi
         log.error({ pools }, `Could not find a ${nativeCurrency.symbol} pool with ${token.symbol} for computing gas costs.`);
         return null;
     }
-    const maxPool = _.maxBy(pools, (pool) => pool.liquidity);
+    const maxPool = pools.reduce((prev, current) => {
+        return JSBI.greaterThan(prev.liquidity, current.liquidity) ? prev : current;
+    });
     return maxPool;
 }
 export async function getHighestLiquidityV3USDPool(chainId, poolProvider, providerConfig) {
@@ -97,7 +100,9 @@ export async function getHighestLiquidityV3USDPool(chainId, poolProvider, provid
         log.error({ pools }, message);
         throw new Error(message);
     }
-    const maxPool = _.maxBy(pools, (pool) => pool.liquidity);
+    const maxPool = pools.reduce((prev, current) => {
+        return JSBI.greaterThan(prev.liquidity, current.liquidity) ? prev : current;
+    });
     return maxPool;
 }
 export function getGasCostInUSD(usdPool, costNativeCurrency) {
@@ -165,10 +170,7 @@ export async function calculateGasUsed(chainId, route, simulatedGasUsed, v2PoolP
     const gasPriceWei = route.gasPriceWei;
     // calculate L2 to L1 security fee if relevant
     let l2toL1FeeInWei = BigNumber.from(0);
-    if ([
-        ChainId.ARBITRUM_ONE,
-        ChainId.ARBITRUM_GOERLI,
-    ].includes(chainId)) {
+    if ([ChainId.ARBITRUM_ONE, ChainId.ARBITRUM_GOERLI].includes(chainId)) {
         l2toL1FeeInWei = calculateArbitrumToL1FeeFromCalldata(route.methodParameters.calldata, l2GasData)[1];
     }
     else if ([
@@ -190,7 +192,7 @@ export async function calculateGasUsed(chainId, route, simulatedGasUsed, v2PoolP
     if (!quoteToken.equals(nativeCurrency)) {
         const nativePools = await Promise.all([
             getHighestLiquidityV3NativePool(quoteToken, v3PoolProvider, providerConfig),
-            getV2NativePool(quoteToken, v2PoolProvider),
+            getV2NativePool(quoteToken, v2PoolProvider, providerConfig),
         ]);
         const nativePool = nativePools.find((pool) => pool !== null);
         if (!nativePool) {
@@ -288,4 +290,4 @@ export function initSwapRouteFromExisting(swapRoute, v2PoolProvider, v3PoolProvi
         simulationStatus: swapRoute.simulationStatus,
     };
 }
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
diff --git a/node_modules/@uniswap/smart-order-router/build/module/util/routes.js b/node_modules/@uniswap/smart-order-router/build/module/util/routes.js
index b7b9cb6..de1013f 100644
--- a/node_modules/@uniswap/smart-order-router/build/module/util/routes.js
+++ b/node_modules/@uniswap/smart-order-router/build/module/util/routes.js
@@ -47,4 +47,4 @@ export const routeAmountToString = (routeAmount) => {
 export const poolToString = (p) => {
     return `${p.token0.symbol}/${p.token1.symbol}${p instanceof Pool ? `/${p.fee / 10000}%` : ``}`;
 };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDNUMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFJdkIsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXhELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxHQUFHLENBQUM7QUFFbkMsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLENBQzNCLEtBQXFDLEVBQzdCLEVBQUU7SUFDVixNQUFNLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDcEIsTUFBTSxNQUFNLEdBQ1YsS0FBSyxDQUFDLFFBQVEsS0FBSyxRQUFRLENBQUMsRUFBRTtRQUM1QixDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVM7UUFDakIsQ0FBQyxDQUFDLG1DQUFtQztZQUNuQyxLQUFLLENBQUMsSUFBSSxDQUFDO0lBQ2pCLE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzlELE1BQU0sS0FBSyxHQUNULEtBQUssQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLEVBQUUsSUFBSSxLQUFLLENBQUMsUUFBUSxLQUFLLFFBQVEsQ0FBQyxLQUFLO1FBQ2pFLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSztRQUNiLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQ2xCLE1B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
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvcm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDNUMsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFLdkIsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRXhELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxHQUFHLENBQUM7QUFFbkMsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHLENBQzNCLEtBQXFDLEVBQzdCLEVBQUU7SUFDVixNQUFNLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDcEIsTUFBTSxNQUFNLEdBQ1YsS0FBSyxDQUFDLFFBQVEsS0FBSyxRQUFRLENBQUMsRUFBRTtRQUM1QixDQUFDLENBQUMsS0FBSyxDQUFDLFNBQVM7UUFDakIsQ0FBQyxDQUFDLG1DQUFtQztZQUNuQyxLQUFLLENBQUMsSUFBSSxDQUFDO0lBQ2pCLE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO0lBQzlELE1BQU0sS0FBSyxHQUNULEtBQUssQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDLEVBQUUsSUFBSSxLQUFLLENBQUMsUUFBUSxLQUFLLFFBQVEsQ0FBQyxLQUFLO1FBQ2pFLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSztRQUNiLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDO0lBQ2xCLE1B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
\ No newline at end of file
